_id: spc_fea32d8dbe174514ace99403d2538eea
type: ApiSpec
parentId: wrk_f6aee638f13a422b8e79c7ca57a71fca
modified: 1661765927173
created: 1661756484911
fileName: iBiZZ standard
contents: >-
  {
      "openapi": "3.0.1",
      "externalDocs": null,
      "servers": [
          {
              "url": "https:\/\/netrom-endpoint-builder.localhost.ibizz.nl\/api\/v1.0"
          },
          {
              "url": "https:\/\/www.netrom-endpoint-builder.localhost.ibizz.nl\r\/api\/v1.0"
          },
          {
              "url": "https:\/\/www.netrom-endpoint-builder.test.ibizz.nl\r\/api\/v1.0"
          },
          {
              "url": "https:\/\/www.netrom-endpoint-builder.staging.ibizz.nl\/api\/v1.0"
          }
      ],
      "security": [
          {
              "bearerAuth": []
          }
      ],
      "tags": [
          {
              "name": "authentication",
              "description": "Authentication methods"
          },
          {
              "name": "alert",
              "description": "The Alert entity"
          },
          {
              "name": "banner",
              "description": "The Banner entity"
          },
          {
              "name": "bonuspoint",
              "description": "The Bonuspoint entity"
          },
          {
              "name": "brand",
              "description": "The Brand entity"
          },
          {
              "name": "calendar",
              "description": "The Calendar entity"
          },
          {
              "name": "calendargroup",
              "description": "The Calendargroup entity"
          },
          {
              "name": "checkout",
              "description": "The Checkout entity"
          },
          {
              "name": "checkoutsubscription",
              "description": "The CheckoutSubscription entity"
          },
          {
              "name": "color",
              "description": "The Color entity"
          },
          {
              "name": "company",
              "description": "The Company entity"
          },
          {
              "name": "companygroup",
              "description": "The Companygroup entity"
          },
          {
              "name": "condition",
              "description": "The Condition entity"
          },
          {
              "name": "config",
              "description": "The Config entity"
          },
          {
              "name": "contact",
              "description": "The Contact entity"
          },
          {
              "name": "contactconfig",
              "description": "The ContactConfig entity"
          },
          {
              "name": "contactgroup",
              "description": "The Contactgroup entity"
          },
          {
              "name": "country",
              "description": "The Country entity"
          },
          {
              "name": "cronjob",
              "description": "The Cronjob entity"
          },
          {
              "name": "cta",
              "description": "The Cta entity"
          },
          {
              "name": "ctagroup",
              "description": "The Ctagroup entity"
          },
          {
              "name": "currency",
              "description": "The Currency entity"
          },
          {
              "name": "dataimporter",
              "description": "The DataImporter entity"
          },
          {
              "name": "delivery",
              "description": "The Delivery entity"
          },
          {
              "name": "document",
              "description": "The Document entity"
          },
          {
              "name": "documentfolder",
              "description": "The DocumentFolder entity"
          },
          {
              "name": "emailqueue",
              "description": "The EmailQueue entity"
          },
          {
              "name": "emailsent",
              "description": "The EmailSent entity"
          },
          {
              "name": "employee",
              "description": "The Employee entity"
          },
          {
              "name": "employeegroup",
              "description": "The Employeegroup entity"
          },
          {
              "name": "faq",
              "description": "The Faq entity"
          },
          {
              "name": "faqgroup",
              "description": "The Faqgroup entity"
          },
          {
              "name": "form",
              "description": "The Form entity"
          },
          {
              "name": "formresult",
              "description": "The FormResult entity"
          },
          {
              "name": "formsection",
              "description": "The Formsection entity"
          },
          {
              "name": "formstep",
              "description": "The Formstep entity"
          },
          {
              "name": "google",
              "description": "The Google entity"
          },
          {
              "name": "history",
              "description": "The History entity"
          },
          {
              "name": "htmlcode",
              "description": "The Htmlcode entity"
          },
          {
              "name": "image",
              "description": "The Image entity"
          },
          {
              "name": "imagefolder",
              "description": "The ImageFolder entity"
          },
          {
              "name": "ip",
              "description": "The Ip entity"
          },
          {
              "name": "link",
              "description": "The Link entity"
          },
          {
              "name": "linkgroup",
              "description": "The Linkgroup entity"
          },
          {
              "name": "location",
              "description": "The Location entity"
          },
          {
              "name": "loyaltycard",
              "description": "The Loyaltycard entity"
          },
          {
              "name": "module",
              "description": "The Module entity"
          },
          {
              "name": "navigation",
              "description": "The Navigation entity"
          },
          {
              "name": "navigationposition",
              "description": "The NavigationPosition entity"
          },
          {
              "name": "news",
              "description": "The News entity"
          },
          {
              "name": "newsgroup",
              "description": "The Newsgroup entity"
          },
          {
              "name": "pagebuilder",
              "description": "The Pagebuilder entity"
          },
          {
              "name": "pagebuilderposition",
              "description": "The PagebuilderPosition entity"
          },
          {
              "name": "partner",
              "description": "The Partner entity"
          },
          {
              "name": "partnergroup",
              "description": "The Partnergroup entity"
          },
          {
              "name": "payment",
              "description": "The Payment entity"
          },
          {
              "name": "permission",
              "description": "The Permission entity"
          },
          {
              "name": "popup",
              "description": "The Popup entity"
          },
          {
              "name": "product",
              "description": "The Product entity"
          },
          {
              "name": "productbundle",
              "description": "The ProductBundle entity"
          },
          {
              "name": "productdiscount",
              "description": "The ProductDiscount entity"
          },
          {
              "name": "productfilterdocument",
              "description": "The ProductFilterDocument entity"
          },
          {
              "name": "productgroup",
              "description": "The Productgroup entity"
          },
          {
              "name": "productstockalert",
              "description": "The Productstockalert entity"
          },
          {
              "name": "project",
              "description": "The Project entity"
          },
          {
              "name": "projectgroup",
              "description": "The Projectgroup entity"
          },
          {
              "name": "redirect",
              "description": "The Redirect entity"
          },
          {
              "name": "reference",
              "description": "The Reference entity"
          },
          {
              "name": "referencegroup",
              "description": "The Referencegroup entity"
          },
          {
              "name": "refinegroup",
              "description": "The Refinegroup entity"
          },
          {
              "name": "search",
              "description": "The Search entity"
          },
          {
              "name": "service",
              "description": "The Service entity"
          },
          {
              "name": "servicegroup",
              "description": "The Servicegroup entity"
          },
          {
              "name": "shipment",
              "description": "The Shipment entity"
          },
          {
              "name": "shipping",
              "description": "The Shipping entity"
          },
          {
              "name": "site",
              "description": "The Site entity"
          },
          {
              "name": "sitemap",
              "description": "The Sitemap entity"
          },
          {
              "name": "size",
              "description": "The Size entity"
          },
          {
              "name": "sizechart",
              "description": "The Sizechart entity"
          },
          {
              "name": "sizegroup",
              "description": "The Sizegroup entity"
          },
          {
              "name": "staticdocument",
              "description": "The Staticdocument entity"
          },
          {
              "name": "step",
              "description": "The Step entity"
          },
          {
              "name": "stepgroup",
              "description": "The Stepgroup entity"
          },
          {
              "name": "subscription",
              "description": "The Subscription entity"
          },
          {
              "name": "textblock",
              "description": "The Textblock entity"
          },
          {
              "name": "textblockfolder",
              "description": "The TextblockFolder entity"
          },
          {
              "name": "upload",
              "description": "The Upload entity"
          },
          {
              "name": "uploadfolder",
              "description": "The UploadFolder entity"
          },
          {
              "name": "user",
              "description": "The User entity"
          },
          {
              "name": "usergroup",
              "description": "The Usergroup entity"
          },
          {
              "name": "usp",
              "description": "The Usp entity"
          },
          {
              "name": "uspgroup",
              "description": "The Uspgroup entity"
          },
          {
              "name": "vacancy",
              "description": "The Vacancy entity"
          },
          {
              "name": "vacancygroup",
              "description": "The Vacancygroup entity"
          },
          {
              "name": "vat",
              "description": "The Vat entity"
          },
          {
              "name": "video",
              "description": "The Video entity"
          },
          {
              "name": "videogroup",
              "description": "The Videogroup entity"
          },
          {
              "name": "voucher",
              "description": "The Voucher entity"
          },
          {
              "name": "warehouse",
              "description": "The Warehouse entity"
          }
      ],
      "paths": {
          "\/auth\/jwt\/access_token": {
              "post": {
                  "summary": "Request a new JWT access token",
                  "description": "Request a new JWT access token",
                  "operationId": "jwt_access_token",
                  "requestBody": {
                      "required": true,
                      "content": {
                          "application\/x-www-form-urlencoded": {
                              "schema": {
                                  "type": "object",
                                  "properties": {
                                      "username": {
                                          "type": "string",
                                          "description": "Username"
                                      },
                                      "password": {
                                          "type": "string",
                                          "format": "password",
                                          "description": "Password"
                                      },
                                      "api_key": {
                                          "type": "string",
                                          "description": "API key"
                                      }
                                  },
                                  "required": [
                                      "username"
                                  ]
                              }
                          }
                      }
                  },
                  "responses": {
                      "200": {
                          "description": "OK",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "type": "object",
                                      "properties": {
                                          "_links": {
                                              "$ref": "#\/components\/schemas\/links"
                                          },
                                          "_meta": {
                                              "$ref": "#\/components\/schemas\/meta"
                                          },
                                          "data": {
                                              "type": "object",
                                              "properties": {
                                                  "access_token": {
                                                      "type": "string",
                                                      "description": "The access token with which you can authenticate"
                                                  },
                                                  "expires": {
                                                      "type": "integer",
                                                      "description": "The time in seconds in which the access token is valid"
                                                  }
                                              }
                                          }
                                      }
                                  }
                              }
                          }
                      },
                      "400": {
                          "description": "Either `password` or `api_key` are required in combination with the `username`."
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "authentication"
                  ],
                  "parameters": [],
                  "security": []
              }
          },
          "\/alert": {
              "get": {
                  "summary": "Get collection of AlertEntities",
                  "description": "Returns a collection of AlertEntities",
                  "operationId": "overviewAlert",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/AlertEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "alert"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Alert",
                  "description": "Added a new Alert",
                  "operationId": "createAlert",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/AlertBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/AlertResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "alert"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/alert\/{id}": {
              "get": {
                  "summary": "Find Alert by ID",
                  "description": "Returns a single Alert",
                  "operationId": "readAlert",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/AlertResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Alert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Alert to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "alert"
                  ]
              },
              "put": {
                  "summary": "Updates Alert",
                  "description": "Updates Alert",
                  "operationId": "updateAlert",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/AlertBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/AlertResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Alert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "alert"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Alert",
                  "description": "Updates specific value for Alert",
                  "operationId": "patchAlert",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/AlertBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/AlertResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Alert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "alert"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Alert",
                  "description": "Deletes a Alert",
                  "operationId": "deleteAlert",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Alert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "alert"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Alert to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/alert\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Alert",
                  "description": "Added new Links for Alert `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksAlert",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksAlertBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksAlertResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Alert to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "alert"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Alert",
                  "description": "Returns a single Links for a Alert `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksAlert",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksAlertResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Alert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Alert to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "alert"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Alert",
                  "description": "Updates Links for a Alert `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksAlert",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksAlertBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksAlertResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Alert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Alert to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "alert"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/alert\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Alert",
                  "description": "Updates specific Links for a Alert `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksAlert",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksAlertBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksAlertResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Alert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Alert to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "alert"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Alert",
                  "description": "Delete Links for a Alert `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksAlert",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Alert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Alert to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "alert"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/banner": {
              "get": {
                  "summary": "Get collection of BannerEntities",
                  "description": "Returns a collection of BannerEntities",
                  "operationId": "overviewBanner",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BannerEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "banner"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Banner",
                  "description": "Added a new Banner",
                  "operationId": "createBanner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/BannerBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BannerResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "banner"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/banner\/{id}": {
              "get": {
                  "summary": "Find Banner by ID",
                  "description": "Returns a single Banner",
                  "operationId": "readBanner",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BannerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Banner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Banner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "banner"
                  ]
              },
              "put": {
                  "summary": "Updates Banner",
                  "description": "Updates Banner",
                  "operationId": "updateBanner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/BannerBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BannerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Banner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "banner"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Banner",
                  "description": "Updates specific value for Banner",
                  "operationId": "patchBanner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/BannerBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BannerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Banner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "banner"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Banner",
                  "description": "Deletes a Banner",
                  "operationId": "deleteBanner",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Banner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "banner"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Banner to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/banner\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Banner",
                  "description": "Added new Links for Banner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksBanner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksBannerBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksBannerResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Banner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "banner"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Banner",
                  "description": "Returns a single Links for a Banner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksBanner",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksBannerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Banner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Banner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "banner"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Banner",
                  "description": "Updates Links for a Banner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksBanner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksBannerBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksBannerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Banner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Banner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "banner"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/banner\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Banner",
                  "description": "Updates specific Links for a Banner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksBanner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksBannerBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksBannerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Banner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Banner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "banner"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Banner",
                  "description": "Delete Links for a Banner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksBanner",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Banner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Banner to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "banner"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/banner\/{id}\/images": {
              "post": {
                  "summary": "Add new Images for Banner",
                  "description": "Added new Images for Banner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createImagesBanner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesBannerBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesBannerResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Banner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "banner"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Images for a Banner",
                  "description": "Returns a single Images for a Banner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readImagesBanner",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesBannerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Banner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Banner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "banner"
                  ]
              },
              "put": {
                  "summary": "Updates Images for a Banner",
                  "description": "Updates Images for a Banner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateImagesBanner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesBannerBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesBannerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Banner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Banner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "banner"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/banner\/{id}\/images\/{imagesId}": {
              "patch": {
                  "summary": "Updates specific Images for a Banner",
                  "description": "Updates specific Images for a Banner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchImagesBanner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesBannerBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesBannerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Banner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Banner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "banner"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Images for a Banner",
                  "description": "Delete Images for a Banner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteImagesBanner",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Banner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Banner to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "banner"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/bonuspoint": {
              "get": {
                  "summary": "Get collection of BonuspointEntities",
                  "description": "Returns a collection of BonuspointEntities",
                  "operationId": "overviewBonuspoint",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BonuspointEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "bonuspoint"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Bonuspoint",
                  "description": "Added a new Bonuspoint",
                  "operationId": "createBonuspoint",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/BonuspointBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BonuspointResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "bonuspoint"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/bonuspoint\/{id}": {
              "get": {
                  "summary": "Find Bonuspoint by ID",
                  "description": "Returns a single Bonuspoint",
                  "operationId": "readBonuspoint",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BonuspointResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Bonuspoint not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Bonuspoint to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "bonuspoint"
                  ]
              },
              "put": {
                  "summary": "Updates Bonuspoint",
                  "description": "Updates Bonuspoint",
                  "operationId": "updateBonuspoint",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/BonuspointBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BonuspointResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Bonuspoint not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "bonuspoint"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Bonuspoint",
                  "description": "Updates specific value for Bonuspoint",
                  "operationId": "patchBonuspoint",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/BonuspointBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BonuspointResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Bonuspoint not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "bonuspoint"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Bonuspoint",
                  "description": "Deletes a Bonuspoint",
                  "operationId": "deleteBonuspoint",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Bonuspoint not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "bonuspoint"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Bonuspoint to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/bonuspoint\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Bonuspoint",
                  "description": "Added new Links for Bonuspoint `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksBonuspoint",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksBonuspointBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksBonuspointResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Bonuspoint to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "bonuspoint"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Bonuspoint",
                  "description": "Returns a single Links for a Bonuspoint `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksBonuspoint",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksBonuspointResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Bonuspoint not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Bonuspoint to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "bonuspoint"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Bonuspoint",
                  "description": "Updates Links for a Bonuspoint `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksBonuspoint",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksBonuspointBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksBonuspointResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Bonuspoint not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Bonuspoint to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "bonuspoint"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/bonuspoint\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Bonuspoint",
                  "description": "Updates specific Links for a Bonuspoint `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksBonuspoint",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksBonuspointBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksBonuspointResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Bonuspoint not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Bonuspoint to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "bonuspoint"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Bonuspoint",
                  "description": "Delete Links for a Bonuspoint `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksBonuspoint",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Bonuspoint not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Bonuspoint to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "bonuspoint"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/brand": {
              "get": {
                  "summary": "Get collection of BrandEntities",
                  "description": "Returns a collection of BrandEntities",
                  "operationId": "overviewBrand",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BrandEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "brand"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Brand",
                  "description": "Added a new Brand",
                  "operationId": "createBrand",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/BrandBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BrandResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "brand"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/brand\/{id}": {
              "get": {
                  "summary": "Find Brand by ID",
                  "description": "Returns a single Brand",
                  "operationId": "readBrand",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BrandResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Brand not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Brand to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "brand"
                  ]
              },
              "put": {
                  "summary": "Updates Brand",
                  "description": "Updates Brand",
                  "operationId": "updateBrand",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/BrandBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BrandResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Brand not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "brand"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Brand",
                  "description": "Updates specific value for Brand",
                  "operationId": "patchBrand",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/BrandBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/BrandResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Brand not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "brand"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Brand",
                  "description": "Deletes a Brand",
                  "operationId": "deleteBrand",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Brand not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "brand"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Brand to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/brand\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Brand",
                  "description": "Added new Links for Brand `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksBrand",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksBrandBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksBrandResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Brand to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "brand"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Brand",
                  "description": "Returns a single Links for a Brand `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksBrand",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksBrandResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Brand not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Brand to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "brand"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Brand",
                  "description": "Updates Links for a Brand `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksBrand",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksBrandBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksBrandResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Brand not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Brand to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "brand"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/brand\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Brand",
                  "description": "Updates specific Links for a Brand `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksBrand",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksBrandBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksBrandResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Brand not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Brand to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "brand"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Brand",
                  "description": "Delete Links for a Brand `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksBrand",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Brand not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Brand to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "brand"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/brand\/{id}\/images": {
              "post": {
                  "summary": "Add new Images for Brand",
                  "description": "Added new Images for Brand `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createImagesBrand",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesBrandBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesBrandResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Brand to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "brand"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Images for a Brand",
                  "description": "Returns a single Images for a Brand `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readImagesBrand",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesBrandResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Brand not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Brand to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "brand"
                  ]
              },
              "put": {
                  "summary": "Updates Images for a Brand",
                  "description": "Updates Images for a Brand `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateImagesBrand",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesBrandBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesBrandResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Brand not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Brand to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "brand"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/brand\/{id}\/images\/{imagesId}": {
              "patch": {
                  "summary": "Updates specific Images for a Brand",
                  "description": "Updates specific Images for a Brand `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchImagesBrand",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesBrandBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesBrandResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Brand not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Brand to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "brand"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Images for a Brand",
                  "description": "Delete Images for a Brand `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteImagesBrand",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Brand not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Brand to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "brand"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/brand\/{id}\/pagebuilder": {
              "get": {
                  "summary": "Get Pagebuilder for a Brand",
                  "description": "Returns a single Pagebuilder for a Brand `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readPagebuilderBrand",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderBrandResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Brand not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder for Brand to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "brand"
                  ]
              }
          },
          "\/calendar": {
              "get": {
                  "summary": "Get collection of CalendarEntities",
                  "description": "Returns a collection of CalendarEntities",
                  "operationId": "overviewCalendar",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CalendarEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "calendar"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Calendar",
                  "description": "Added a new Calendar",
                  "operationId": "createCalendar",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CalendarBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CalendarResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "calendar"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/calendar\/{id}": {
              "get": {
                  "summary": "Find Calendar by ID",
                  "description": "Returns a single Calendar",
                  "operationId": "readCalendar",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CalendarResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendar not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Calendar to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendar"
                  ]
              },
              "put": {
                  "summary": "Updates Calendar",
                  "description": "Updates Calendar",
                  "operationId": "updateCalendar",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CalendarBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CalendarResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendar not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "calendar"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Calendar",
                  "description": "Updates specific value for Calendar",
                  "operationId": "patchCalendar",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CalendarBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CalendarResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendar not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "calendar"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Calendar",
                  "description": "Deletes a Calendar",
                  "operationId": "deleteCalendar",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Calendar not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "calendar"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Calendar to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/calendar\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Calendar",
                  "description": "Added new Links for Calendar `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksCalendar",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCalendarBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCalendarResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Calendar to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendar"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Calendar",
                  "description": "Returns a single Links for a Calendar `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksCalendar",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCalendarResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendar not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Calendar to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendar"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Calendar",
                  "description": "Updates Links for a Calendar `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksCalendar",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCalendarBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCalendarResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendar not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Calendar to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendar"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/calendar\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Calendar",
                  "description": "Updates specific Links for a Calendar `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksCalendar",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCalendarBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCalendarResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendar not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Calendar to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendar"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Calendar",
                  "description": "Delete Links for a Calendar `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksCalendar",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Calendar not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Calendar to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendar"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/calendar\/{id}\/images": {
              "post": {
                  "summary": "Add new Images for Calendar",
                  "description": "Added new Images for Calendar `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createImagesCalendar",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesCalendarBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesCalendarResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Calendar to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendar"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Images for a Calendar",
                  "description": "Returns a single Images for a Calendar `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readImagesCalendar",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesCalendarResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendar not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Calendar to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendar"
                  ]
              },
              "put": {
                  "summary": "Updates Images for a Calendar",
                  "description": "Updates Images for a Calendar `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateImagesCalendar",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesCalendarBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesCalendarResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendar not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Calendar to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendar"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/calendar\/{id}\/images\/{imagesId}": {
              "patch": {
                  "summary": "Updates specific Images for a Calendar",
                  "description": "Updates specific Images for a Calendar `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchImagesCalendar",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesCalendarBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesCalendarResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendar not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Calendar to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendar"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Images for a Calendar",
                  "description": "Delete Images for a Calendar `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteImagesCalendar",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Calendar not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Calendar to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendar"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/calendar\/{id}\/pagebuilder": {
              "get": {
                  "summary": "Get Pagebuilder for a Calendar",
                  "description": "Returns a single Pagebuilder for a Calendar `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readPagebuilderCalendar",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderCalendarResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendar not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder for Calendar to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendar"
                  ]
              }
          },
          "\/calendargroup": {
              "get": {
                  "summary": "Get collection of CalendargroupEntities",
                  "description": "Returns a collection of CalendargroupEntities",
                  "operationId": "overviewCalendargroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CalendargroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "calendargroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Calendargroup",
                  "description": "Added a new Calendargroup",
                  "operationId": "createCalendargroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CalendargroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CalendargroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "calendargroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/calendargroup\/{id}": {
              "get": {
                  "summary": "Find Calendargroup by ID",
                  "description": "Returns a single Calendargroup",
                  "operationId": "readCalendargroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CalendargroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendargroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Calendargroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendargroup"
                  ]
              },
              "put": {
                  "summary": "Updates Calendargroup",
                  "description": "Updates Calendargroup",
                  "operationId": "updateCalendargroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CalendargroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CalendargroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendargroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "calendargroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Calendargroup",
                  "description": "Updates specific value for Calendargroup",
                  "operationId": "patchCalendargroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CalendargroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CalendargroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendargroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "calendargroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Calendargroup",
                  "description": "Deletes a Calendargroup",
                  "operationId": "deleteCalendargroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Calendargroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "calendargroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Calendargroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/calendargroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Calendargroup",
                  "description": "Added new Links for Calendargroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksCalendargroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCalendargroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCalendargroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Calendargroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendargroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Calendargroup",
                  "description": "Returns a single Links for a Calendargroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksCalendargroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCalendargroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendargroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Calendargroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendargroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Calendargroup",
                  "description": "Updates Links for a Calendargroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksCalendargroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCalendargroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCalendargroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendargroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Calendargroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendargroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/calendargroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Calendargroup",
                  "description": "Updates specific Links for a Calendargroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksCalendargroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCalendargroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCalendargroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Calendargroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Calendargroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendargroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Calendargroup",
                  "description": "Delete Links for a Calendargroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksCalendargroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Calendargroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Calendargroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "calendargroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkout": {
              "get": {
                  "summary": "Get collection of CheckoutEntities",
                  "description": "Returns a collection of CheckoutEntities",
                  "operationId": "overviewCheckout",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CheckoutEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "checkout"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Checkout",
                  "description": "Added a new Checkout",
                  "operationId": "createCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CheckoutBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CheckoutResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "checkout"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkout\/{id}": {
              "get": {
                  "summary": "Find Checkout by ID",
                  "description": "Returns a single Checkout",
                  "operationId": "readCheckout",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ]
              },
              "put": {
                  "summary": "Updates Checkout",
                  "description": "Updates Checkout",
                  "operationId": "updateCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CheckoutBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "checkout"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Checkout",
                  "description": "Updates specific value for Checkout",
                  "operationId": "patchCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CheckoutBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "checkout"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Checkout",
                  "description": "Deletes a Checkout",
                  "operationId": "deleteCheckout",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "checkout"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkout\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Checkout",
                  "description": "Added new Links for Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCheckoutBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Checkout",
                  "description": "Returns a single Links for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksCheckout",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Checkout",
                  "description": "Updates Links for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCheckoutBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkout\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Checkout",
                  "description": "Updates specific Links for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCheckoutBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Checkout",
                  "description": "Delete Links for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksCheckout",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Checkout to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkout\/{id}\/articles": {
              "post": {
                  "summary": "Add new Articles for Checkout",
                  "description": "Added new Articles for Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createArticlesCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ArticlesCheckoutBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ArticlesCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Articles for a Checkout",
                  "description": "Returns a single Articles for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readArticlesCheckout",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ArticlesCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Articles for Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ]
              },
              "put": {
                  "summary": "Updates Articles for a Checkout",
                  "description": "Updates Articles for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateArticlesCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ArticlesCheckoutBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ArticlesCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkout\/{id}\/articles\/{articlesId}": {
              "patch": {
                  "summary": "Updates specific Articles for a Checkout",
                  "description": "Updates specific Articles for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchArticlesCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ArticlesCheckoutBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ArticlesCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Articles for a Checkout",
                  "description": "Delete Articles for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteArticlesCheckout",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Articles for Checkout to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkout\/{id}\/contacts": {
              "post": {
                  "summary": "Add new Contacts for Checkout",
                  "description": "Added new Contacts for Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createContactsCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ContactsCheckoutBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactsCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Contacts for a Checkout",
                  "description": "Returns a single Contacts for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readContactsCheckout",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactsCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Contacts for Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ]
              },
              "put": {
                  "summary": "Updates Contacts for a Checkout",
                  "description": "Updates Contacts for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateContactsCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ContactsCheckoutBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactsCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkout\/{id}\/contacts\/{contactsId}": {
              "patch": {
                  "summary": "Updates specific Contacts for a Checkout",
                  "description": "Updates specific Contacts for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchContactsCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ContactsCheckoutBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactsCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkout\/{id}\/addresses": {
              "post": {
                  "summary": "Add new Addresses for Checkout",
                  "description": "Added new Addresses for Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createAddressesCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/AddressesCheckoutBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/AddressesCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Addresses for a Checkout",
                  "description": "Returns a single Addresses for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readAddressesCheckout",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/AddressesCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Addresses for Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ]
              },
              "put": {
                  "summary": "Updates Addresses for a Checkout",
                  "description": "Updates Addresses for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateAddressesCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/AddressesCheckoutBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/AddressesCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkout\/{id}\/addresses\/{addressesId}": {
              "patch": {
                  "summary": "Updates specific Addresses for a Checkout",
                  "description": "Updates specific Addresses for a Checkout `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchAddressesCheckout",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/AddressesCheckoutBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/AddressesCheckoutResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Checkout not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Checkout to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkout"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkoutsubscription": {
              "get": {
                  "summary": "Get collection of CheckoutSubscriptionEntities",
                  "description": "Returns a collection of CheckoutSubscriptionEntities",
                  "operationId": "overviewCheckoutSubscription",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CheckoutSubscriptionEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "checkoutsubscription"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new CheckoutSubscription",
                  "description": "Added a new CheckoutSubscription",
                  "operationId": "createCheckoutSubscription",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CheckoutSubscriptionBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CheckoutSubscriptionResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "checkoutsubscription"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkoutsubscription\/{id}": {
              "get": {
                  "summary": "Find CheckoutSubscription by ID",
                  "description": "Returns a single CheckoutSubscription",
                  "operationId": "readCheckoutSubscription",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CheckoutSubscriptionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "CheckoutSubscription not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of CheckoutSubscription to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkoutsubscription"
                  ]
              },
              "put": {
                  "summary": "Updates CheckoutSubscription",
                  "description": "Updates CheckoutSubscription",
                  "operationId": "updateCheckoutSubscription",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CheckoutSubscriptionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CheckoutSubscriptionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "CheckoutSubscription not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "checkoutsubscription"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for CheckoutSubscription",
                  "description": "Updates specific value for CheckoutSubscription",
                  "operationId": "patchCheckoutSubscription",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CheckoutSubscriptionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CheckoutSubscriptionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "CheckoutSubscription not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "checkoutsubscription"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a CheckoutSubscription",
                  "description": "Deletes a CheckoutSubscription",
                  "operationId": "deleteCheckoutSubscription",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "CheckoutSubscription not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "checkoutsubscription"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of CheckoutSubscription to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkoutsubscription\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for CheckoutSubscription",
                  "description": "Added new Links for CheckoutSubscription `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksCheckoutSubscription",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCheckoutSubscriptionBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCheckoutSubscriptionResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of CheckoutSubscription to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkoutsubscription"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a CheckoutSubscription",
                  "description": "Returns a single Links for a CheckoutSubscription `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksCheckoutSubscription",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCheckoutSubscriptionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "CheckoutSubscription not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for CheckoutSubscription to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkoutsubscription"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a CheckoutSubscription",
                  "description": "Updates Links for a CheckoutSubscription `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksCheckoutSubscription",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCheckoutSubscriptionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCheckoutSubscriptionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "CheckoutSubscription not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of CheckoutSubscription to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkoutsubscription"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/checkoutsubscription\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a CheckoutSubscription",
                  "description": "Updates specific Links for a CheckoutSubscription `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksCheckoutSubscription",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCheckoutSubscriptionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCheckoutSubscriptionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "CheckoutSubscription not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of CheckoutSubscription to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkoutsubscription"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a CheckoutSubscription",
                  "description": "Delete Links for a CheckoutSubscription `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksCheckoutSubscription",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "CheckoutSubscription not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for CheckoutSubscription to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "checkoutsubscription"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/color": {
              "get": {
                  "summary": "Get collection of ColorEntities",
                  "description": "Returns a collection of ColorEntities",
                  "operationId": "overviewColor",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ColorEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "color"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Color",
                  "description": "Added a new Color",
                  "operationId": "createColor",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ColorBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ColorResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "color"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/color\/{id}": {
              "get": {
                  "summary": "Find Color by ID",
                  "description": "Returns a single Color",
                  "operationId": "readColor",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ColorResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Color not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Color to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "color"
                  ]
              },
              "put": {
                  "summary": "Updates Color",
                  "description": "Updates Color",
                  "operationId": "updateColor",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ColorBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ColorResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Color not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "color"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Color",
                  "description": "Updates specific value for Color",
                  "operationId": "patchColor",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ColorBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ColorResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Color not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "color"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Color",
                  "description": "Deletes a Color",
                  "operationId": "deleteColor",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Color not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "color"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Color to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/color\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Color",
                  "description": "Added new Links for Color `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksColor",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksColorBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksColorResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Color to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "color"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Color",
                  "description": "Returns a single Links for a Color `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksColor",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksColorResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Color not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Color to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "color"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Color",
                  "description": "Updates Links for a Color `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksColor",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksColorBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksColorResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Color not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Color to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "color"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/color\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Color",
                  "description": "Updates specific Links for a Color `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksColor",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksColorBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksColorResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Color not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Color to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "color"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Color",
                  "description": "Delete Links for a Color `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksColor",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Color not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Color to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "color"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/company": {
              "get": {
                  "summary": "Get collection of CompanyEntities",
                  "description": "Returns a collection of CompanyEntities",
                  "operationId": "overviewCompany",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CompanyEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "company"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Company",
                  "description": "Added a new Company",
                  "operationId": "createCompany",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CompanyBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CompanyResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "company"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/company\/{id}": {
              "get": {
                  "summary": "Find Company by ID",
                  "description": "Returns a single Company",
                  "operationId": "readCompany",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CompanyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Company not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Company to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "company"
                  ]
              },
              "put": {
                  "summary": "Updates Company",
                  "description": "Updates Company",
                  "operationId": "updateCompany",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CompanyBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CompanyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Company not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "company"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Company",
                  "description": "Updates specific value for Company",
                  "operationId": "patchCompany",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CompanyBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CompanyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Company not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "company"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Company",
                  "description": "Deletes a Company",
                  "operationId": "deleteCompany",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Company not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "company"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Company to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/company\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Company",
                  "description": "Added new Links for Company `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksCompany",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCompanyBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCompanyResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Company to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "company"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Company",
                  "description": "Returns a single Links for a Company `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksCompany",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCompanyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Company not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Company to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "company"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Company",
                  "description": "Updates Links for a Company `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksCompany",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCompanyBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCompanyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Company not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Company to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "company"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/company\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Company",
                  "description": "Updates specific Links for a Company `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksCompany",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCompanyBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCompanyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Company not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Company to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "company"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Company",
                  "description": "Delete Links for a Company `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksCompany",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Company not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Company to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "company"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/companygroup": {
              "get": {
                  "summary": "Get collection of CompanygroupEntities",
                  "description": "Returns a collection of CompanygroupEntities",
                  "operationId": "overviewCompanygroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CompanygroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "companygroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Companygroup",
                  "description": "Added a new Companygroup",
                  "operationId": "createCompanygroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CompanygroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CompanygroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "companygroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/companygroup\/{id}": {
              "get": {
                  "summary": "Find Companygroup by ID",
                  "description": "Returns a single Companygroup",
                  "operationId": "readCompanygroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CompanygroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Companygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Companygroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "companygroup"
                  ]
              },
              "put": {
                  "summary": "Updates Companygroup",
                  "description": "Updates Companygroup",
                  "operationId": "updateCompanygroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CompanygroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CompanygroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Companygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "companygroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Companygroup",
                  "description": "Updates specific value for Companygroup",
                  "operationId": "patchCompanygroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CompanygroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CompanygroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Companygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "companygroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Companygroup",
                  "description": "Deletes a Companygroup",
                  "operationId": "deleteCompanygroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Companygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "companygroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Companygroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/companygroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Companygroup",
                  "description": "Added new Links for Companygroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksCompanygroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCompanygroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCompanygroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Companygroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "companygroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Companygroup",
                  "description": "Returns a single Links for a Companygroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksCompanygroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCompanygroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Companygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Companygroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "companygroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Companygroup",
                  "description": "Updates Links for a Companygroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksCompanygroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCompanygroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCompanygroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Companygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Companygroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "companygroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/companygroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Companygroup",
                  "description": "Updates specific Links for a Companygroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksCompanygroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCompanygroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCompanygroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Companygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Companygroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "companygroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Companygroup",
                  "description": "Delete Links for a Companygroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksCompanygroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Companygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Companygroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "companygroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/condition": {
              "get": {
                  "summary": "Get collection of ConditionEntities",
                  "description": "Returns a collection of ConditionEntities",
                  "operationId": "overviewCondition",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ConditionEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "condition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Condition",
                  "description": "Added a new Condition",
                  "operationId": "createCondition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ConditionBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ConditionResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "condition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/condition\/{id}": {
              "get": {
                  "summary": "Find Condition by ID",
                  "description": "Returns a single Condition",
                  "operationId": "readCondition",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ConditionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Condition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Condition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "condition"
                  ]
              },
              "put": {
                  "summary": "Updates Condition",
                  "description": "Updates Condition",
                  "operationId": "updateCondition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ConditionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ConditionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Condition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "condition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Condition",
                  "description": "Updates specific value for Condition",
                  "operationId": "patchCondition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ConditionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ConditionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Condition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "condition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Condition",
                  "description": "Deletes a Condition",
                  "operationId": "deleteCondition",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Condition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "condition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Condition to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/condition\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Condition",
                  "description": "Added new Links for Condition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksCondition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksConditionBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksConditionResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Condition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "condition"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Condition",
                  "description": "Returns a single Links for a Condition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksCondition",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksConditionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Condition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Condition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "condition"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Condition",
                  "description": "Updates Links for a Condition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksCondition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksConditionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksConditionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Condition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Condition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "condition"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/condition\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Condition",
                  "description": "Updates specific Links for a Condition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksCondition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksConditionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksConditionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Condition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Condition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "condition"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Condition",
                  "description": "Delete Links for a Condition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksCondition",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Condition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Condition to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "condition"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/config": {
              "get": {
                  "summary": "Get collection of ConfigEntities",
                  "description": "Returns a collection of ConfigEntities",
                  "operationId": "overviewConfig",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ConfigEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "config"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Config",
                  "description": "Added a new Config",
                  "operationId": "createConfig",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ConfigBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ConfigResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "config"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/config\/{id}": {
              "get": {
                  "summary": "Find Config by ID",
                  "description": "Returns a single Config",
                  "operationId": "readConfig",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ConfigResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Config not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Config to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "config"
                  ]
              },
              "put": {
                  "summary": "Updates Config",
                  "description": "Updates Config",
                  "operationId": "updateConfig",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ConfigBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ConfigResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Config not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "config"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Config",
                  "description": "Updates specific value for Config",
                  "operationId": "patchConfig",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ConfigBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ConfigResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Config not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "config"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Config",
                  "description": "Deletes a Config",
                  "operationId": "deleteConfig",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Config not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "config"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Config to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/config\/{id}\/values": {
              "post": {
                  "summary": "Add new Values for Config",
                  "description": "Added new Values for Config `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createValuesConfig",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ValuesConfigBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ValuesConfigResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Config to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "config"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Values for a Config",
                  "description": "Returns a single Values for a Config `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readValuesConfig",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ValuesConfigResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Config not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Values for Config to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "config"
                  ]
              },
              "put": {
                  "summary": "Updates Values for a Config",
                  "description": "Updates Values for a Config `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateValuesConfig",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ValuesConfigBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ValuesConfigResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Config not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Config to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "config"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/config\/{id}\/values\/{valuesId}": {
              "patch": {
                  "summary": "Updates specific Values for a Config",
                  "description": "Updates specific Values for a Config `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchValuesConfig",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ValuesConfigBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ValuesConfigResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Config not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Config to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "config"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Values for a Config",
                  "description": "Delete Values for a Config `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteValuesConfig",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Config not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Values for Config to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "config"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/contact": {
              "get": {
                  "summary": "Get collection of ContactEntities",
                  "description": "Returns a collection of ContactEntities",
                  "operationId": "overviewContact",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contact"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Contact",
                  "description": "Added a new Contact",
                  "operationId": "createContact",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ContactBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contact"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/contact\/{id}": {
              "get": {
                  "summary": "Find Contact by ID",
                  "description": "Returns a single Contact",
                  "operationId": "readContact",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Contact not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Contact to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contact"
                  ]
              },
              "put": {
                  "summary": "Updates Contact",
                  "description": "Updates Contact",
                  "operationId": "updateContact",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ContactBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Contact not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contact"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Contact",
                  "description": "Updates specific value for Contact",
                  "operationId": "patchContact",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ContactBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Contact not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contact"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Contact",
                  "description": "Deletes a Contact",
                  "operationId": "deleteContact",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Contact not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contact"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Contact to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/contact\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Contact",
                  "description": "Added new Links for Contact `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksContact",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksContactBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksContactResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Contact to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contact"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Contact",
                  "description": "Returns a single Links for a Contact `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksContact",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksContactResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Contact not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Contact to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contact"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Contact",
                  "description": "Updates Links for a Contact `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksContact",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksContactBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksContactResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Contact not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Contact to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contact"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/contact\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Contact",
                  "description": "Updates specific Links for a Contact `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksContact",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksContactBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksContactResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Contact not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Contact to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contact"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Contact",
                  "description": "Delete Links for a Contact `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksContact",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Contact not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Contact to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contact"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/contactconfig": {
              "get": {
                  "summary": "Get collection of ContactConfigEntities",
                  "description": "Returns a collection of ContactConfigEntities",
                  "operationId": "overviewContactConfig",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactConfigEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contactconfig"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new ContactConfig",
                  "description": "Added a new ContactConfig",
                  "operationId": "createContactConfig",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ContactConfigBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactConfigResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contactconfig"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/contactconfig\/{id}": {
              "get": {
                  "summary": "Find ContactConfig by ID",
                  "description": "Returns a single ContactConfig",
                  "operationId": "readContactConfig",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactConfigResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ContactConfig not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ContactConfig to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contactconfig"
                  ]
              },
              "put": {
                  "summary": "Updates ContactConfig",
                  "description": "Updates ContactConfig",
                  "operationId": "updateContactConfig",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ContactConfigBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactConfigResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ContactConfig not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contactconfig"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for ContactConfig",
                  "description": "Updates specific value for ContactConfig",
                  "operationId": "patchContactConfig",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ContactConfigBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactConfigResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ContactConfig not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contactconfig"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a ContactConfig",
                  "description": "Deletes a ContactConfig",
                  "operationId": "deleteContactConfig",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "ContactConfig not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contactconfig"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ContactConfig to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/contactconfig\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for ContactConfig",
                  "description": "Added new Links for ContactConfig `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksContactConfig",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksContactConfigBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksContactConfigResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ContactConfig to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contactconfig"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a ContactConfig",
                  "description": "Returns a single Links for a ContactConfig `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksContactConfig",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksContactConfigResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ContactConfig not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for ContactConfig to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contactconfig"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a ContactConfig",
                  "description": "Updates Links for a ContactConfig `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksContactConfig",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksContactConfigBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksContactConfigResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ContactConfig not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ContactConfig to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contactconfig"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/contactconfig\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a ContactConfig",
                  "description": "Updates specific Links for a ContactConfig `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksContactConfig",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksContactConfigBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksContactConfigResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ContactConfig not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ContactConfig to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contactconfig"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a ContactConfig",
                  "description": "Delete Links for a ContactConfig `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksContactConfig",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "ContactConfig not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for ContactConfig to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contactconfig"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/contactgroup": {
              "get": {
                  "summary": "Get collection of ContactgroupEntities",
                  "description": "Returns a collection of ContactgroupEntities",
                  "operationId": "overviewContactgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactgroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contactgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Contactgroup",
                  "description": "Added a new Contactgroup",
                  "operationId": "createContactgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ContactgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contactgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/contactgroup\/{id}": {
              "get": {
                  "summary": "Find Contactgroup by ID",
                  "description": "Returns a single Contactgroup",
                  "operationId": "readContactgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Contactgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Contactgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contactgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Contactgroup",
                  "description": "Updates Contactgroup",
                  "operationId": "updateContactgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ContactgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Contactgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contactgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Contactgroup",
                  "description": "Updates specific value for Contactgroup",
                  "operationId": "patchContactgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ContactgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ContactgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Contactgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contactgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Contactgroup",
                  "description": "Deletes a Contactgroup",
                  "operationId": "deleteContactgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Contactgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "contactgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Contactgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/contactgroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Contactgroup",
                  "description": "Added new Links for Contactgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksContactgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksContactgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksContactgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Contactgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contactgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Contactgroup",
                  "description": "Returns a single Links for a Contactgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksContactgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksContactgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Contactgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Contactgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contactgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Contactgroup",
                  "description": "Updates Links for a Contactgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksContactgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksContactgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksContactgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Contactgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Contactgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contactgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/contactgroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Contactgroup",
                  "description": "Updates specific Links for a Contactgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksContactgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksContactgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksContactgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Contactgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Contactgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contactgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Contactgroup",
                  "description": "Delete Links for a Contactgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksContactgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Contactgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Contactgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "contactgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/country": {
              "get": {
                  "summary": "Get collection of CountryEntities",
                  "description": "Returns a collection of CountryEntities",
                  "operationId": "overviewCountry",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CountryEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "country"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/country\/{id}": {
              "get": {
                  "summary": "Find Country by ID",
                  "description": "Returns a single Country",
                  "operationId": "readCountry",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CountryResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Country not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Country to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "country"
                  ]
              }
          },
          "\/cronjob": {
              "get": {
                  "summary": "Get collection of CronjobEntities",
                  "description": "Returns a collection of CronjobEntities",
                  "operationId": "overviewCronjob",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CronjobEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "cronjob"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Cronjob",
                  "description": "Added a new Cronjob",
                  "operationId": "createCronjob",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CronjobBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CronjobResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "cronjob"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/cronjob\/{id}": {
              "get": {
                  "summary": "Find Cronjob by ID",
                  "description": "Returns a single Cronjob",
                  "operationId": "readCronjob",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CronjobResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Cronjob not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Cronjob to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "cronjob"
                  ]
              },
              "put": {
                  "summary": "Updates Cronjob",
                  "description": "Updates Cronjob",
                  "operationId": "updateCronjob",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CronjobBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CronjobResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Cronjob not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "cronjob"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Cronjob",
                  "description": "Updates specific value for Cronjob",
                  "operationId": "patchCronjob",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CronjobBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CronjobResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Cronjob not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "cronjob"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Cronjob",
                  "description": "Deletes a Cronjob",
                  "operationId": "deleteCronjob",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Cronjob not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "cronjob"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Cronjob to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/cronjob\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Cronjob",
                  "description": "Added new Links for Cronjob `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksCronjob",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCronjobBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCronjobResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Cronjob to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "cronjob"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Cronjob",
                  "description": "Returns a single Links for a Cronjob `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksCronjob",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCronjobResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Cronjob not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Cronjob to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "cronjob"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Cronjob",
                  "description": "Updates Links for a Cronjob `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksCronjob",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCronjobBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCronjobResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Cronjob not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Cronjob to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "cronjob"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/cronjob\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Cronjob",
                  "description": "Updates specific Links for a Cronjob `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksCronjob",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCronjobBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCronjobResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Cronjob not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Cronjob to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "cronjob"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Cronjob",
                  "description": "Delete Links for a Cronjob `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksCronjob",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Cronjob not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Cronjob to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "cronjob"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/cta": {
              "get": {
                  "summary": "Get collection of CtaEntities",
                  "description": "Returns a collection of CtaEntities",
                  "operationId": "overviewCta",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CtaEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "cta"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Cta",
                  "description": "Added a new Cta",
                  "operationId": "createCta",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CtaBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CtaResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "cta"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/cta\/{id}": {
              "get": {
                  "summary": "Find Cta by ID",
                  "description": "Returns a single Cta",
                  "operationId": "readCta",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CtaResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Cta not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Cta to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "cta"
                  ]
              },
              "put": {
                  "summary": "Updates Cta",
                  "description": "Updates Cta",
                  "operationId": "updateCta",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CtaBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CtaResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Cta not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "cta"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Cta",
                  "description": "Updates specific value for Cta",
                  "operationId": "patchCta",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CtaBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CtaResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Cta not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "cta"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Cta",
                  "description": "Deletes a Cta",
                  "operationId": "deleteCta",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Cta not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "cta"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Cta to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/cta\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Cta",
                  "description": "Added new Links for Cta `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksCta",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCtaBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCtaResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Cta to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "cta"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Cta",
                  "description": "Returns a single Links for a Cta `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksCta",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCtaResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Cta not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Cta to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "cta"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Cta",
                  "description": "Updates Links for a Cta `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksCta",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCtaBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCtaResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Cta not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Cta to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "cta"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/cta\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Cta",
                  "description": "Updates specific Links for a Cta `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksCta",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCtaBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCtaResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Cta not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Cta to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "cta"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Cta",
                  "description": "Delete Links for a Cta `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksCta",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Cta not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Cta to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "cta"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/ctagroup": {
              "get": {
                  "summary": "Get collection of CtagroupEntities",
                  "description": "Returns a collection of CtagroupEntities",
                  "operationId": "overviewCtagroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CtagroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "ctagroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Ctagroup",
                  "description": "Added a new Ctagroup",
                  "operationId": "createCtagroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CtagroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CtagroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "ctagroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/ctagroup\/{id}": {
              "get": {
                  "summary": "Find Ctagroup by ID",
                  "description": "Returns a single Ctagroup",
                  "operationId": "readCtagroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CtagroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Ctagroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Ctagroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "ctagroup"
                  ]
              },
              "put": {
                  "summary": "Updates Ctagroup",
                  "description": "Updates Ctagroup",
                  "operationId": "updateCtagroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CtagroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CtagroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Ctagroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "ctagroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Ctagroup",
                  "description": "Updates specific value for Ctagroup",
                  "operationId": "patchCtagroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/CtagroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CtagroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Ctagroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "ctagroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Ctagroup",
                  "description": "Deletes a Ctagroup",
                  "operationId": "deleteCtagroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Ctagroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "ctagroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Ctagroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/ctagroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Ctagroup",
                  "description": "Added new Links for Ctagroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksCtagroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCtagroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCtagroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Ctagroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "ctagroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Ctagroup",
                  "description": "Returns a single Links for a Ctagroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksCtagroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCtagroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Ctagroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Ctagroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "ctagroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Ctagroup",
                  "description": "Updates Links for a Ctagroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksCtagroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCtagroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCtagroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Ctagroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Ctagroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "ctagroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/ctagroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Ctagroup",
                  "description": "Updates specific Links for a Ctagroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksCtagroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksCtagroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksCtagroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Ctagroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Ctagroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "ctagroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Ctagroup",
                  "description": "Delete Links for a Ctagroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksCtagroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Ctagroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Ctagroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "ctagroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/currency": {
              "get": {
                  "summary": "Get collection of CurrencyEntities",
                  "description": "Returns a collection of CurrencyEntities",
                  "operationId": "overviewCurrency",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CurrencyEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "currency"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/currency\/{id}": {
              "get": {
                  "summary": "Find Currency by ID",
                  "description": "Returns a single Currency",
                  "operationId": "readCurrency",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/CurrencyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Currency not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Currency to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "currency"
                  ]
              }
          },
          "\/dataimporter": {
              "get": {
                  "summary": "Get collection of DataImporterEntities",
                  "description": "Returns a collection of DataImporterEntities",
                  "operationId": "overviewDataImporter",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DataImporterEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "dataimporter"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new DataImporter",
                  "description": "Added a new DataImporter",
                  "operationId": "createDataImporter",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/DataImporterBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DataImporterResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "dataimporter"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/dataimporter\/{id}": {
              "get": {
                  "summary": "Find DataImporter by ID",
                  "description": "Returns a single DataImporter",
                  "operationId": "readDataImporter",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DataImporterResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "DataImporter not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of DataImporter to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "dataimporter"
                  ]
              },
              "put": {
                  "summary": "Updates DataImporter",
                  "description": "Updates DataImporter",
                  "operationId": "updateDataImporter",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/DataImporterBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DataImporterResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "DataImporter not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "dataimporter"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for DataImporter",
                  "description": "Updates specific value for DataImporter",
                  "operationId": "patchDataImporter",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/DataImporterBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DataImporterResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "DataImporter not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "dataimporter"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a DataImporter",
                  "description": "Deletes a DataImporter",
                  "operationId": "deleteDataImporter",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "DataImporter not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "dataimporter"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of DataImporter to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/dataimporter\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for DataImporter",
                  "description": "Added new Links for DataImporter `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksDataImporter",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksDataImporterBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksDataImporterResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of DataImporter to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "dataimporter"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a DataImporter",
                  "description": "Returns a single Links for a DataImporter `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksDataImporter",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksDataImporterResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "DataImporter not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for DataImporter to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "dataimporter"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a DataImporter",
                  "description": "Updates Links for a DataImporter `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksDataImporter",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksDataImporterBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksDataImporterResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "DataImporter not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of DataImporter to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "dataimporter"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/dataimporter\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a DataImporter",
                  "description": "Updates specific Links for a DataImporter `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksDataImporter",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksDataImporterBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksDataImporterResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "DataImporter not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of DataImporter to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "dataimporter"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a DataImporter",
                  "description": "Delete Links for a DataImporter `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksDataImporter",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "DataImporter not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for DataImporter to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "dataimporter"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/delivery": {
              "get": {
                  "summary": "Get collection of DeliveryEntities",
                  "description": "Returns a collection of DeliveryEntities",
                  "operationId": "overviewDelivery",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DeliveryEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "delivery"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Delivery",
                  "description": "Added a new Delivery",
                  "operationId": "createDelivery",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/DeliveryBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DeliveryResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "delivery"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/delivery\/{id}": {
              "get": {
                  "summary": "Find Delivery by ID",
                  "description": "Returns a single Delivery",
                  "operationId": "readDelivery",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DeliveryResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Delivery not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Delivery to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "delivery"
                  ]
              },
              "put": {
                  "summary": "Updates Delivery",
                  "description": "Updates Delivery",
                  "operationId": "updateDelivery",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/DeliveryBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DeliveryResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Delivery not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "delivery"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Delivery",
                  "description": "Updates specific value for Delivery",
                  "operationId": "patchDelivery",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/DeliveryBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DeliveryResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Delivery not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "delivery"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Delivery",
                  "description": "Deletes a Delivery",
                  "operationId": "deleteDelivery",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Delivery not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "delivery"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Delivery to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/delivery\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Delivery",
                  "description": "Added new Links for Delivery `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksDelivery",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksDeliveryBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksDeliveryResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Delivery to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "delivery"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Delivery",
                  "description": "Returns a single Links for a Delivery `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksDelivery",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksDeliveryResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Delivery not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Delivery to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "delivery"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Delivery",
                  "description": "Updates Links for a Delivery `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksDelivery",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksDeliveryBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksDeliveryResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Delivery not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Delivery to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "delivery"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/delivery\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Delivery",
                  "description": "Updates specific Links for a Delivery `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksDelivery",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksDeliveryBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksDeliveryResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Delivery not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Delivery to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "delivery"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Delivery",
                  "description": "Delete Links for a Delivery `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksDelivery",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Delivery not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Delivery to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "delivery"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/document": {
              "post": {
                  "summary": "Add a new Document",
                  "description": "Added a new Document",
                  "operationId": "createDocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/DocumentBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DocumentResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "document"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/document\/{id}": {
              "get": {
                  "summary": "Find Document by ID",
                  "description": "Returns a single Document",
                  "operationId": "readDocument",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Document not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Document to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "document"
                  ]
              },
              "put": {
                  "summary": "Updates Document",
                  "description": "Updates Document",
                  "operationId": "updateDocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/DocumentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Document not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "document"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Document",
                  "description": "Updates specific value for Document",
                  "operationId": "patchDocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/DocumentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Document not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "document"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Document",
                  "description": "Deletes a Document",
                  "operationId": "deleteDocument",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Document not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "document"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Document to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/documentfolder": {
              "get": {
                  "summary": "Get collection of DocumentFolderEntities",
                  "description": "Returns a collection of DocumentFolderEntities",
                  "operationId": "overviewDocumentFolder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DocumentFolderEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "documentfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new DocumentFolder",
                  "description": "Added a new DocumentFolder",
                  "operationId": "createDocumentFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/DocumentFolderBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DocumentFolderResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "documentfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/documentfolder\/{id}": {
              "get": {
                  "summary": "Find DocumentFolder by ID",
                  "description": "Returns a single DocumentFolder",
                  "operationId": "readDocumentFolder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DocumentFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "DocumentFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of DocumentFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "documentfolder"
                  ]
              },
              "put": {
                  "summary": "Updates DocumentFolder",
                  "description": "Updates DocumentFolder",
                  "operationId": "updateDocumentFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/DocumentFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DocumentFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "DocumentFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "documentfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for DocumentFolder",
                  "description": "Updates specific value for DocumentFolder",
                  "operationId": "patchDocumentFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/DocumentFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/DocumentFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "DocumentFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "documentfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a DocumentFolder",
                  "description": "Deletes a DocumentFolder",
                  "operationId": "deleteDocumentFolder",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "DocumentFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "documentfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of DocumentFolder to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/documentfolder\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for DocumentFolder",
                  "description": "Added new Links for DocumentFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksDocumentFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksDocumentFolderBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksDocumentFolderResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of DocumentFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "documentfolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a DocumentFolder",
                  "description": "Returns a single Links for a DocumentFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksDocumentFolder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksDocumentFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "DocumentFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for DocumentFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "documentfolder"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a DocumentFolder",
                  "description": "Updates Links for a DocumentFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksDocumentFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksDocumentFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksDocumentFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "DocumentFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of DocumentFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "documentfolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/documentfolder\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a DocumentFolder",
                  "description": "Updates specific Links for a DocumentFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksDocumentFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksDocumentFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksDocumentFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "DocumentFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of DocumentFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "documentfolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a DocumentFolder",
                  "description": "Delete Links for a DocumentFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksDocumentFolder",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "DocumentFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for DocumentFolder to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "documentfolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/emailqueue": {
              "get": {
                  "summary": "Get collection of EmailQueueEntities",
                  "description": "Returns a collection of EmailQueueEntities",
                  "operationId": "overviewEmailQueue",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmailQueueEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "emailqueue"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new EmailQueue",
                  "description": "Added a new EmailQueue",
                  "operationId": "createEmailQueue",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/EmailQueueBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmailQueueResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "emailqueue"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/emailqueue\/{id}": {
              "get": {
                  "summary": "Find EmailQueue by ID",
                  "description": "Returns a single EmailQueue",
                  "operationId": "readEmailQueue",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmailQueueResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "EmailQueue not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of EmailQueue to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "emailqueue"
                  ]
              },
              "put": {
                  "summary": "Updates EmailQueue",
                  "description": "Updates EmailQueue",
                  "operationId": "updateEmailQueue",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/EmailQueueBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmailQueueResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "EmailQueue not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "emailqueue"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for EmailQueue",
                  "description": "Updates specific value for EmailQueue",
                  "operationId": "patchEmailQueue",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/EmailQueueBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmailQueueResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "EmailQueue not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "emailqueue"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a EmailQueue",
                  "description": "Deletes a EmailQueue",
                  "operationId": "deleteEmailQueue",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "EmailQueue not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "emailqueue"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of EmailQueue to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/emailqueue\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for EmailQueue",
                  "description": "Added new Links for EmailQueue `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksEmailQueue",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksEmailQueueBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksEmailQueueResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of EmailQueue to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "emailqueue"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a EmailQueue",
                  "description": "Returns a single Links for a EmailQueue `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksEmailQueue",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksEmailQueueResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "EmailQueue not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for EmailQueue to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "emailqueue"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a EmailQueue",
                  "description": "Updates Links for a EmailQueue `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksEmailQueue",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksEmailQueueBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksEmailQueueResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "EmailQueue not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of EmailQueue to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "emailqueue"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/emailqueue\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a EmailQueue",
                  "description": "Updates specific Links for a EmailQueue `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksEmailQueue",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksEmailQueueBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksEmailQueueResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "EmailQueue not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of EmailQueue to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "emailqueue"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a EmailQueue",
                  "description": "Delete Links for a EmailQueue `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksEmailQueue",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "EmailQueue not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for EmailQueue to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "emailqueue"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/emailsent": {
              "get": {
                  "summary": "Get collection of EmailSentEntities",
                  "description": "Returns a collection of EmailSentEntities",
                  "operationId": "overviewEmailSent",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmailSentEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "emailsent"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/emailsent\/{id}": {
              "get": {
                  "summary": "Find EmailSent by ID",
                  "description": "Returns a single EmailSent",
                  "operationId": "readEmailSent",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmailSentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "EmailSent not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of EmailSent to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "emailsent"
                  ]
              }
          },
          "\/employee": {
              "get": {
                  "summary": "Get collection of EmployeeEntities",
                  "description": "Returns a collection of EmployeeEntities",
                  "operationId": "overviewEmployee",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmployeeEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "employee"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Employee",
                  "description": "Added a new Employee",
                  "operationId": "createEmployee",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/EmployeeBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmployeeResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "employee"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/employee\/{id}": {
              "get": {
                  "summary": "Find Employee by ID",
                  "description": "Returns a single Employee",
                  "operationId": "readEmployee",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmployeeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employee not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Employee to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employee"
                  ]
              },
              "put": {
                  "summary": "Updates Employee",
                  "description": "Updates Employee",
                  "operationId": "updateEmployee",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/EmployeeBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmployeeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employee not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "employee"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Employee",
                  "description": "Updates specific value for Employee",
                  "operationId": "patchEmployee",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/EmployeeBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmployeeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employee not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "employee"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Employee",
                  "description": "Deletes a Employee",
                  "operationId": "deleteEmployee",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Employee not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "employee"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Employee to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/employee\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Employee",
                  "description": "Added new Links for Employee `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksEmployee",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksEmployeeBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksEmployeeResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Employee to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employee"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Employee",
                  "description": "Returns a single Links for a Employee `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksEmployee",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksEmployeeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employee not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Employee to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employee"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Employee",
                  "description": "Updates Links for a Employee `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksEmployee",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksEmployeeBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksEmployeeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employee not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Employee to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employee"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/employee\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Employee",
                  "description": "Updates specific Links for a Employee `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksEmployee",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksEmployeeBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksEmployeeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employee not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Employee to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employee"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Employee",
                  "description": "Delete Links for a Employee `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksEmployee",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Employee not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Employee to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employee"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/employee\/{id}\/images": {
              "post": {
                  "summary": "Add new Images for Employee",
                  "description": "Added new Images for Employee `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createImagesEmployee",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesEmployeeBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesEmployeeResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Employee to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employee"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Images for a Employee",
                  "description": "Returns a single Images for a Employee `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readImagesEmployee",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesEmployeeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employee not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Employee to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employee"
                  ]
              },
              "put": {
                  "summary": "Updates Images for a Employee",
                  "description": "Updates Images for a Employee `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateImagesEmployee",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesEmployeeBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesEmployeeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employee not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Employee to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employee"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/employee\/{id}\/images\/{imagesId}": {
              "patch": {
                  "summary": "Updates specific Images for a Employee",
                  "description": "Updates specific Images for a Employee `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchImagesEmployee",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesEmployeeBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesEmployeeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employee not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Employee to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employee"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Images for a Employee",
                  "description": "Delete Images for a Employee `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteImagesEmployee",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Employee not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Employee to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employee"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/employee\/{id}\/pagebuilder": {
              "get": {
                  "summary": "Get Pagebuilder for a Employee",
                  "description": "Returns a single Pagebuilder for a Employee `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readPagebuilderEmployee",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderEmployeeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employee not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder for Employee to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employee"
                  ]
              }
          },
          "\/employeegroup": {
              "get": {
                  "summary": "Get collection of EmployeegroupEntities",
                  "description": "Returns a collection of EmployeegroupEntities",
                  "operationId": "overviewEmployeegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmployeegroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "employeegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Employeegroup",
                  "description": "Added a new Employeegroup",
                  "operationId": "createEmployeegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/EmployeegroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmployeegroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "employeegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/employeegroup\/{id}": {
              "get": {
                  "summary": "Find Employeegroup by ID",
                  "description": "Returns a single Employeegroup",
                  "operationId": "readEmployeegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmployeegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employeegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Employeegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employeegroup"
                  ]
              },
              "put": {
                  "summary": "Updates Employeegroup",
                  "description": "Updates Employeegroup",
                  "operationId": "updateEmployeegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/EmployeegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmployeegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employeegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "employeegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Employeegroup",
                  "description": "Updates specific value for Employeegroup",
                  "operationId": "patchEmployeegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/EmployeegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/EmployeegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employeegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "employeegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Employeegroup",
                  "description": "Deletes a Employeegroup",
                  "operationId": "deleteEmployeegroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Employeegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "employeegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Employeegroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/employeegroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Employeegroup",
                  "description": "Added new Links for Employeegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksEmployeegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksEmployeegroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksEmployeegroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Employeegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employeegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Employeegroup",
                  "description": "Returns a single Links for a Employeegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksEmployeegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksEmployeegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employeegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Employeegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employeegroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Employeegroup",
                  "description": "Updates Links for a Employeegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksEmployeegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksEmployeegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksEmployeegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employeegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Employeegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employeegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/employeegroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Employeegroup",
                  "description": "Updates specific Links for a Employeegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksEmployeegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksEmployeegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksEmployeegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Employeegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Employeegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employeegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Employeegroup",
                  "description": "Delete Links for a Employeegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksEmployeegroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Employeegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Employeegroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "employeegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/faq": {
              "get": {
                  "summary": "Get collection of FaqEntities",
                  "description": "Returns a collection of FaqEntities",
                  "operationId": "overviewFaq",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FaqEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "faq"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Faq",
                  "description": "Added a new Faq",
                  "operationId": "createFaq",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FaqBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FaqResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "faq"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/faq\/{id}": {
              "get": {
                  "summary": "Find Faq by ID",
                  "description": "Returns a single Faq",
                  "operationId": "readFaq",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FaqResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Faq not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Faq to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "faq"
                  ]
              },
              "put": {
                  "summary": "Updates Faq",
                  "description": "Updates Faq",
                  "operationId": "updateFaq",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FaqBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FaqResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Faq not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "faq"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Faq",
                  "description": "Updates specific value for Faq",
                  "operationId": "patchFaq",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FaqBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FaqResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Faq not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "faq"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Faq",
                  "description": "Deletes a Faq",
                  "operationId": "deleteFaq",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Faq not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "faq"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Faq to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/faq\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Faq",
                  "description": "Added new Links for Faq `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksFaq",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFaqBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFaqResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Faq to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "faq"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Faq",
                  "description": "Returns a single Links for a Faq `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksFaq",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFaqResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Faq not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Faq to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "faq"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Faq",
                  "description": "Updates Links for a Faq `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksFaq",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFaqBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFaqResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Faq not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Faq to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "faq"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/faq\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Faq",
                  "description": "Updates specific Links for a Faq `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksFaq",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFaqBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFaqResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Faq not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Faq to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "faq"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Faq",
                  "description": "Delete Links for a Faq `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksFaq",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Faq not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Faq to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "faq"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/faqgroup": {
              "get": {
                  "summary": "Get collection of FaqgroupEntities",
                  "description": "Returns a collection of FaqgroupEntities",
                  "operationId": "overviewFaqgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FaqgroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "faqgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Faqgroup",
                  "description": "Added a new Faqgroup",
                  "operationId": "createFaqgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FaqgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FaqgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "faqgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/faqgroup\/{id}": {
              "get": {
                  "summary": "Find Faqgroup by ID",
                  "description": "Returns a single Faqgroup",
                  "operationId": "readFaqgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FaqgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Faqgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Faqgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "faqgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Faqgroup",
                  "description": "Updates Faqgroup",
                  "operationId": "updateFaqgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FaqgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FaqgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Faqgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "faqgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Faqgroup",
                  "description": "Updates specific value for Faqgroup",
                  "operationId": "patchFaqgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FaqgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FaqgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Faqgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "faqgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Faqgroup",
                  "description": "Deletes a Faqgroup",
                  "operationId": "deleteFaqgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Faqgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "faqgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Faqgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/faqgroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Faqgroup",
                  "description": "Added new Links for Faqgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksFaqgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFaqgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFaqgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Faqgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "faqgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Faqgroup",
                  "description": "Returns a single Links for a Faqgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksFaqgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFaqgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Faqgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Faqgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "faqgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Faqgroup",
                  "description": "Updates Links for a Faqgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksFaqgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFaqgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFaqgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Faqgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Faqgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "faqgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/faqgroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Faqgroup",
                  "description": "Updates specific Links for a Faqgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksFaqgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFaqgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFaqgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Faqgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Faqgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "faqgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Faqgroup",
                  "description": "Delete Links for a Faqgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksFaqgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Faqgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Faqgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "faqgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/form": {
              "get": {
                  "summary": "Get collection of FormEntities",
                  "description": "Returns a collection of FormEntities",
                  "operationId": "overviewForm",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "form"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Form",
                  "description": "Added a new Form",
                  "operationId": "createForm",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FormBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "form"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/form\/{id}": {
              "get": {
                  "summary": "Find Form by ID",
                  "description": "Returns a single Form",
                  "operationId": "readForm",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Form not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Form to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "form"
                  ]
              },
              "put": {
                  "summary": "Updates Form",
                  "description": "Updates Form",
                  "operationId": "updateForm",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FormBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Form not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "form"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Form",
                  "description": "Updates specific value for Form",
                  "operationId": "patchForm",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FormBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Form not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "form"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Form",
                  "description": "Deletes a Form",
                  "operationId": "deleteForm",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Form not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "form"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Form to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/form\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Form",
                  "description": "Added new Links for Form `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksForm",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFormBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFormResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Form to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "form"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Form",
                  "description": "Returns a single Links for a Form `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksForm",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFormResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Form not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Form to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "form"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Form",
                  "description": "Updates Links for a Form `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksForm",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFormBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFormResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Form not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Form to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "form"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/form\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Form",
                  "description": "Updates specific Links for a Form `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksForm",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFormBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFormResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Form not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Form to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "form"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Form",
                  "description": "Delete Links for a Form `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksForm",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Form not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Form to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "form"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/form\/{id}\/fields": {
              "post": {
                  "summary": "Add new Fields for Form",
                  "description": "Added new Fields for Form `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createFieldsForm",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FieldsFormBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FieldsFormResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Form to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "form"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Fields for a Form",
                  "description": "Returns a single Fields for a Form `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readFieldsForm",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FieldsFormResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Form not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Fields for Form to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "form"
                  ]
              },
              "put": {
                  "summary": "Updates Fields for a Form",
                  "description": "Updates Fields for a Form `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateFieldsForm",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FieldsFormBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FieldsFormResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Form not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Form to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "form"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/form\/{id}\/fields\/{fieldsId}": {
              "patch": {
                  "summary": "Updates specific Fields for a Form",
                  "description": "Updates specific Fields for a Form `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchFieldsForm",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FieldsFormBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FieldsFormResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Form not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Form to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "form"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Fields for a Form",
                  "description": "Delete Fields for a Form `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteFieldsForm",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Form not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Fields for Form to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "form"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/formresult\/{id}": {
              "get": {
                  "summary": "Find FormResult by ID",
                  "description": "Returns a single FormResult",
                  "operationId": "readFormResult",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormResultResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "FormResult not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of FormResult to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formresult"
                  ]
              }
          },
          "\/formresult\/{id}\/attachments": {
              "get": {
                  "summary": "Get Attachments for a FormResult",
                  "description": "Returns a single Attachments for a FormResult `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readAttachmentsFormResult",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/AttachmentsFormResultResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "FormResult not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Attachments for FormResult to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formresult"
                  ]
              }
          },
          "\/formsection": {
              "get": {
                  "summary": "Get collection of FormsectionEntities",
                  "description": "Returns a collection of FormsectionEntities",
                  "operationId": "overviewFormsection",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormsectionEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "formsection"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Formsection",
                  "description": "Added a new Formsection",
                  "operationId": "createFormsection",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FormsectionBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormsectionResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "formsection"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/formsection\/{id}": {
              "get": {
                  "summary": "Find Formsection by ID",
                  "description": "Returns a single Formsection",
                  "operationId": "readFormsection",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormsectionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Formsection not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Formsection to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formsection"
                  ]
              },
              "put": {
                  "summary": "Updates Formsection",
                  "description": "Updates Formsection",
                  "operationId": "updateFormsection",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FormsectionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormsectionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Formsection not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "formsection"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Formsection",
                  "description": "Updates specific value for Formsection",
                  "operationId": "patchFormsection",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FormsectionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormsectionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Formsection not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "formsection"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Formsection",
                  "description": "Deletes a Formsection",
                  "operationId": "deleteFormsection",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Formsection not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "formsection"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Formsection to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/formsection\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Formsection",
                  "description": "Added new Links for Formsection `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksFormsection",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFormsectionBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFormsectionResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Formsection to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formsection"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Formsection",
                  "description": "Returns a single Links for a Formsection `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksFormsection",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFormsectionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Formsection not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Formsection to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formsection"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Formsection",
                  "description": "Updates Links for a Formsection `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksFormsection",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFormsectionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFormsectionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Formsection not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Formsection to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formsection"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/formsection\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Formsection",
                  "description": "Updates specific Links for a Formsection `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksFormsection",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFormsectionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFormsectionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Formsection not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Formsection to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formsection"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Formsection",
                  "description": "Delete Links for a Formsection `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksFormsection",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Formsection not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Formsection to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formsection"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/formstep": {
              "get": {
                  "summary": "Get collection of FormstepEntities",
                  "description": "Returns a collection of FormstepEntities",
                  "operationId": "overviewFormstep",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormstepEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "formstep"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Formstep",
                  "description": "Added a new Formstep",
                  "operationId": "createFormstep",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FormstepBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormstepResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "formstep"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/formstep\/{id}": {
              "get": {
                  "summary": "Find Formstep by ID",
                  "description": "Returns a single Formstep",
                  "operationId": "readFormstep",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormstepResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Formstep not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Formstep to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formstep"
                  ]
              },
              "put": {
                  "summary": "Updates Formstep",
                  "description": "Updates Formstep",
                  "operationId": "updateFormstep",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FormstepBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormstepResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Formstep not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "formstep"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Formstep",
                  "description": "Updates specific value for Formstep",
                  "operationId": "patchFormstep",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/FormstepBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FormstepResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Formstep not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "formstep"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Formstep",
                  "description": "Deletes a Formstep",
                  "operationId": "deleteFormstep",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Formstep not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "formstep"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Formstep to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/formstep\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Formstep",
                  "description": "Added new Links for Formstep `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksFormstep",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFormstepBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFormstepResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Formstep to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formstep"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Formstep",
                  "description": "Returns a single Links for a Formstep `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksFormstep",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFormstepResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Formstep not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Formstep to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formstep"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Formstep",
                  "description": "Updates Links for a Formstep `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksFormstep",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFormstepBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFormstepResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Formstep not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Formstep to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formstep"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/formstep\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Formstep",
                  "description": "Updates specific Links for a Formstep `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksFormstep",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksFormstepBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksFormstepResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Formstep not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Formstep to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formstep"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Formstep",
                  "description": "Delete Links for a Formstep `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksFormstep",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Formstep not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Formstep to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "formstep"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/google": {
              "get": {
                  "summary": "Get collection of GoogleEntities",
                  "description": "Returns a collection of GoogleEntities",
                  "operationId": "overviewGoogle",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/GoogleEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "google"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/google\/{id}": {
              "get": {
                  "summary": "Find Google by ID",
                  "description": "Returns a single Google",
                  "operationId": "readGoogle",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/GoogleResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Google not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Google to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "google"
                  ]
              }
          },
          "\/history": {
              "get": {
                  "summary": "Get collection of HistoryEntities",
                  "description": "Returns a collection of HistoryEntities",
                  "operationId": "overviewHistory",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/HistoryEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "history"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/htmlcode": {
              "get": {
                  "summary": "Get collection of HtmlcodeEntities",
                  "description": "Returns a collection of HtmlcodeEntities",
                  "operationId": "overviewHtmlcode",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/HtmlcodeEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "htmlcode"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Htmlcode",
                  "description": "Added a new Htmlcode",
                  "operationId": "createHtmlcode",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/HtmlcodeBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/HtmlcodeResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "htmlcode"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/htmlcode\/{id}": {
              "get": {
                  "summary": "Find Htmlcode by ID",
                  "description": "Returns a single Htmlcode",
                  "operationId": "readHtmlcode",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/HtmlcodeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Htmlcode not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Htmlcode to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "htmlcode"
                  ]
              },
              "put": {
                  "summary": "Updates Htmlcode",
                  "description": "Updates Htmlcode",
                  "operationId": "updateHtmlcode",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/HtmlcodeBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/HtmlcodeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Htmlcode not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "htmlcode"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Htmlcode",
                  "description": "Updates specific value for Htmlcode",
                  "operationId": "patchHtmlcode",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/HtmlcodeBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/HtmlcodeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Htmlcode not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "htmlcode"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Htmlcode",
                  "description": "Deletes a Htmlcode",
                  "operationId": "deleteHtmlcode",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Htmlcode not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "htmlcode"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Htmlcode to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/image": {
              "get": {
                  "summary": "Get collection of ImageEntities",
                  "description": "Returns a collection of ImageEntities",
                  "operationId": "overviewImage",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImageEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "image"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Image",
                  "description": "Added a new Image",
                  "operationId": "createImage",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImageBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImageResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "image"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/image\/{id}": {
              "get": {
                  "summary": "Find Image by ID",
                  "description": "Returns a single Image",
                  "operationId": "readImage",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImageResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Image not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Image to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "image"
                  ]
              },
              "put": {
                  "summary": "Updates Image",
                  "description": "Updates Image",
                  "operationId": "updateImage",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImageBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImageResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Image not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "image"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Image",
                  "description": "Updates specific value for Image",
                  "operationId": "patchImage",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImageBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImageResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Image not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "image"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Image",
                  "description": "Deletes a Image",
                  "operationId": "deleteImage",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Image not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "image"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Image to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/image\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Image",
                  "description": "Added new Links for Image `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksImage",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksImageBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksImageResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Image to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "image"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Image",
                  "description": "Returns a single Links for a Image `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksImage",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksImageResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Image not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Image to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "image"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Image",
                  "description": "Updates Links for a Image `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksImage",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksImageBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksImageResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Image not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Image to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "image"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/image\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Image",
                  "description": "Updates specific Links for a Image `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksImage",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksImageBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksImageResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Image not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Image to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "image"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Image",
                  "description": "Delete Links for a Image `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksImage",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Image not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Image to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "image"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/imagefolder": {
              "get": {
                  "summary": "Get collection of ImageFolderEntities",
                  "description": "Returns a collection of ImageFolderEntities",
                  "operationId": "overviewImageFolder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImageFolderEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "imagefolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new ImageFolder",
                  "description": "Added a new ImageFolder",
                  "operationId": "createImageFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImageFolderBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImageFolderResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "imagefolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/imagefolder\/{id}": {
              "get": {
                  "summary": "Find ImageFolder by ID",
                  "description": "Returns a single ImageFolder",
                  "operationId": "readImageFolder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImageFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ImageFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ImageFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "imagefolder"
                  ]
              },
              "put": {
                  "summary": "Updates ImageFolder",
                  "description": "Updates ImageFolder",
                  "operationId": "updateImageFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImageFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImageFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ImageFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "imagefolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for ImageFolder",
                  "description": "Updates specific value for ImageFolder",
                  "operationId": "patchImageFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImageFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImageFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ImageFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "imagefolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a ImageFolder",
                  "description": "Deletes a ImageFolder",
                  "operationId": "deleteImageFolder",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "ImageFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "imagefolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ImageFolder to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/imagefolder\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for ImageFolder",
                  "description": "Added new Links for ImageFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksImageFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksImageFolderBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksImageFolderResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ImageFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "imagefolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a ImageFolder",
                  "description": "Returns a single Links for a ImageFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksImageFolder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksImageFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ImageFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for ImageFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "imagefolder"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a ImageFolder",
                  "description": "Updates Links for a ImageFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksImageFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksImageFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksImageFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ImageFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ImageFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "imagefolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/imagefolder\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a ImageFolder",
                  "description": "Updates specific Links for a ImageFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksImageFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksImageFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksImageFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ImageFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ImageFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "imagefolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a ImageFolder",
                  "description": "Delete Links for a ImageFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksImageFolder",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "ImageFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for ImageFolder to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "imagefolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/ip": {
              "get": {
                  "summary": "Get collection of IpEntities",
                  "description": "Returns a collection of IpEntities",
                  "operationId": "overviewIp",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/IpEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "ip"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/ip\/{id}": {
              "get": {
                  "summary": "Find Ip by ID",
                  "description": "Returns a single Ip",
                  "operationId": "readIp",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/IpResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Ip not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Ip to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "ip"
                  ]
              }
          },
          "\/link": {
              "get": {
                  "summary": "Get collection of LinkEntities",
                  "description": "Returns a collection of LinkEntities",
                  "operationId": "overviewLink",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinkEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "link"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Link",
                  "description": "Added a new Link",
                  "operationId": "createLink",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinkBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinkResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "link"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/link\/{id}": {
              "get": {
                  "summary": "Find Link by ID",
                  "description": "Returns a single Link",
                  "operationId": "readLink",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinkResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Link not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Link to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "link"
                  ]
              },
              "put": {
                  "summary": "Updates Link",
                  "description": "Updates Link",
                  "operationId": "updateLink",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinkBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinkResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Link not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "link"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Link",
                  "description": "Updates specific value for Link",
                  "operationId": "patchLink",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinkBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinkResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Link not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "link"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Link",
                  "description": "Deletes a Link",
                  "operationId": "deleteLink",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Link not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "link"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Link to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/link\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Link",
                  "description": "Added new Links for Link `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksLink",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksLinkBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLinkResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Link to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "link"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Link",
                  "description": "Returns a single Links for a Link `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksLink",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLinkResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Link not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Link to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "link"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Link",
                  "description": "Updates Links for a Link `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksLink",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksLinkBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLinkResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Link not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Link to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "link"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/link\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Link",
                  "description": "Updates specific Links for a Link `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksLink",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksLinkBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLinkResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Link not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Link to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "link"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Link",
                  "description": "Delete Links for a Link `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksLink",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Link not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Link to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "link"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/linkgroup": {
              "get": {
                  "summary": "Get collection of LinkgroupEntities",
                  "description": "Returns a collection of LinkgroupEntities",
                  "operationId": "overviewLinkgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinkgroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "linkgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Linkgroup",
                  "description": "Added a new Linkgroup",
                  "operationId": "createLinkgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinkgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinkgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "linkgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/linkgroup\/{id}": {
              "get": {
                  "summary": "Find Linkgroup by ID",
                  "description": "Returns a single Linkgroup",
                  "operationId": "readLinkgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinkgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Linkgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Linkgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "linkgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Linkgroup",
                  "description": "Updates Linkgroup",
                  "operationId": "updateLinkgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinkgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinkgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Linkgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "linkgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Linkgroup",
                  "description": "Updates specific value for Linkgroup",
                  "operationId": "patchLinkgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinkgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinkgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Linkgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "linkgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Linkgroup",
                  "description": "Deletes a Linkgroup",
                  "operationId": "deleteLinkgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Linkgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "linkgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Linkgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/linkgroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Linkgroup",
                  "description": "Added new Links for Linkgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksLinkgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksLinkgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLinkgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Linkgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "linkgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Linkgroup",
                  "description": "Returns a single Links for a Linkgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksLinkgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLinkgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Linkgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Linkgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "linkgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Linkgroup",
                  "description": "Updates Links for a Linkgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksLinkgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksLinkgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLinkgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Linkgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Linkgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "linkgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/linkgroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Linkgroup",
                  "description": "Updates specific Links for a Linkgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksLinkgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksLinkgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLinkgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Linkgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Linkgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "linkgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Linkgroup",
                  "description": "Delete Links for a Linkgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksLinkgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Linkgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Linkgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "linkgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/location": {
              "get": {
                  "summary": "Get collection of LocationEntities",
                  "description": "Returns a collection of LocationEntities",
                  "operationId": "overviewLocation",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LocationEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "location"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Location",
                  "description": "Added a new Location",
                  "operationId": "createLocation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LocationBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LocationResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "location"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/location\/{id}": {
              "get": {
                  "summary": "Find Location by ID",
                  "description": "Returns a single Location",
                  "operationId": "readLocation",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LocationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Location not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Location to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "location"
                  ]
              },
              "put": {
                  "summary": "Updates Location",
                  "description": "Updates Location",
                  "operationId": "updateLocation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LocationBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LocationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Location not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "location"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Location",
                  "description": "Updates specific value for Location",
                  "operationId": "patchLocation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LocationBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LocationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Location not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "location"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Location",
                  "description": "Deletes a Location",
                  "operationId": "deleteLocation",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Location not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "location"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Location to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/location\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Location",
                  "description": "Added new Links for Location `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksLocation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksLocationBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLocationResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Location to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "location"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Location",
                  "description": "Returns a single Links for a Location `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksLocation",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLocationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Location not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Location to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "location"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Location",
                  "description": "Updates Links for a Location `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksLocation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksLocationBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLocationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Location not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Location to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "location"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/location\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Location",
                  "description": "Updates specific Links for a Location `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksLocation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksLocationBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLocationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Location not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Location to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "location"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Location",
                  "description": "Delete Links for a Location `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksLocation",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Location not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Location to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "location"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/location\/{id}\/images": {
              "post": {
                  "summary": "Add new Images for Location",
                  "description": "Added new Images for Location `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createImagesLocation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesLocationBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesLocationResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Location to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "location"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Images for a Location",
                  "description": "Returns a single Images for a Location `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readImagesLocation",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesLocationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Location not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Location to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "location"
                  ]
              },
              "put": {
                  "summary": "Updates Images for a Location",
                  "description": "Updates Images for a Location `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateImagesLocation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesLocationBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesLocationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Location not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Location to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "location"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/location\/{id}\/images\/{imagesId}": {
              "patch": {
                  "summary": "Updates specific Images for a Location",
                  "description": "Updates specific Images for a Location `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchImagesLocation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesLocationBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesLocationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Location not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Location to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "location"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Images for a Location",
                  "description": "Delete Images for a Location `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteImagesLocation",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Location not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Location to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "location"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/location\/{id}\/pagebuilder": {
              "get": {
                  "summary": "Get Pagebuilder for a Location",
                  "description": "Returns a single Pagebuilder for a Location `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readPagebuilderLocation",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderLocationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Location not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder for Location to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "location"
                  ]
              }
          },
          "\/loyaltycard": {
              "get": {
                  "summary": "Get collection of LoyaltycardEntities",
                  "description": "Returns a collection of LoyaltycardEntities",
                  "operationId": "overviewLoyaltycard",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LoyaltycardEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "loyaltycard"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Loyaltycard",
                  "description": "Added a new Loyaltycard",
                  "operationId": "createLoyaltycard",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LoyaltycardBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LoyaltycardResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "loyaltycard"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/loyaltycard\/{id}": {
              "get": {
                  "summary": "Find Loyaltycard by ID",
                  "description": "Returns a single Loyaltycard",
                  "operationId": "readLoyaltycard",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LoyaltycardResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Loyaltycard not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Loyaltycard to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "loyaltycard"
                  ]
              },
              "put": {
                  "summary": "Updates Loyaltycard",
                  "description": "Updates Loyaltycard",
                  "operationId": "updateLoyaltycard",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LoyaltycardBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LoyaltycardResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Loyaltycard not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "loyaltycard"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Loyaltycard",
                  "description": "Updates specific value for Loyaltycard",
                  "operationId": "patchLoyaltycard",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LoyaltycardBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LoyaltycardResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Loyaltycard not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "loyaltycard"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Loyaltycard",
                  "description": "Deletes a Loyaltycard",
                  "operationId": "deleteLoyaltycard",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Loyaltycard not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "loyaltycard"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Loyaltycard to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/loyaltycard\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Loyaltycard",
                  "description": "Added new Links for Loyaltycard `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksLoyaltycard",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksLoyaltycardBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLoyaltycardResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Loyaltycard to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "loyaltycard"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Loyaltycard",
                  "description": "Returns a single Links for a Loyaltycard `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksLoyaltycard",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLoyaltycardResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Loyaltycard not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Loyaltycard to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "loyaltycard"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Loyaltycard",
                  "description": "Updates Links for a Loyaltycard `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksLoyaltycard",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksLoyaltycardBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLoyaltycardResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Loyaltycard not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Loyaltycard to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "loyaltycard"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/loyaltycard\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Loyaltycard",
                  "description": "Updates specific Links for a Loyaltycard `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksLoyaltycard",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksLoyaltycardBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksLoyaltycardResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Loyaltycard not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Loyaltycard to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "loyaltycard"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Loyaltycard",
                  "description": "Delete Links for a Loyaltycard `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksLoyaltycard",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Loyaltycard not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Loyaltycard to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "loyaltycard"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/module\/{id}": {
              "get": {
                  "summary": "Find Module by ID",
                  "description": "Returns a single Module",
                  "operationId": "readModule",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ModuleResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Module not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Module to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "module"
                  ]
              }
          },
          "\/module\/{id}\/fields": {
              "get": {
                  "summary": "Get Fields for a Module",
                  "description": "Returns a single Fields for a Module `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readFieldsModule",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/FieldsModuleResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Module not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Fields for Module to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "module"
                  ]
              }
          },
          "\/navigation": {
              "get": {
                  "summary": "Get collection of NavigationEntities",
                  "description": "Returns a collection of NavigationEntities",
                  "operationId": "overviewNavigation",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NavigationEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "navigation"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Navigation",
                  "description": "Added a new Navigation",
                  "operationId": "createNavigation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/NavigationBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NavigationResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "navigation"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/navigation\/{id}": {
              "get": {
                  "summary": "Find Navigation by ID",
                  "description": "Returns a single Navigation",
                  "operationId": "readNavigation",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NavigationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Navigation not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Navigation to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "navigation"
                  ]
              },
              "put": {
                  "summary": "Updates Navigation",
                  "description": "Updates Navigation",
                  "operationId": "updateNavigation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/NavigationBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NavigationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Navigation not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "navigation"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Navigation",
                  "description": "Updates specific value for Navigation",
                  "operationId": "patchNavigation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/NavigationBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NavigationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Navigation not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "navigation"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Navigation",
                  "description": "Deletes a Navigation",
                  "operationId": "deleteNavigation",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Navigation not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "navigation"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Navigation to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/navigation\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Navigation",
                  "description": "Added new Links for Navigation `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksNavigation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksNavigationBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNavigationResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Navigation to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "navigation"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Navigation",
                  "description": "Returns a single Links for a Navigation `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksNavigation",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNavigationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Navigation not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Navigation to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "navigation"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Navigation",
                  "description": "Updates Links for a Navigation `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksNavigation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksNavigationBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNavigationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Navigation not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Navigation to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "navigation"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/navigation\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Navigation",
                  "description": "Updates specific Links for a Navigation `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksNavigation",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksNavigationBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNavigationResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Navigation not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Navigation to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "navigation"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Navigation",
                  "description": "Delete Links for a Navigation `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksNavigation",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Navigation not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Navigation to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "navigation"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/navigationposition": {
              "get": {
                  "summary": "Get collection of NavigationPositionEntities",
                  "description": "Returns a collection of NavigationPositionEntities",
                  "operationId": "overviewNavigationPosition",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NavigationPositionEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "navigationposition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new NavigationPosition",
                  "description": "Added a new NavigationPosition",
                  "operationId": "createNavigationPosition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/NavigationPositionBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NavigationPositionResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "navigationposition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/navigationposition\/{id}": {
              "get": {
                  "summary": "Find NavigationPosition by ID",
                  "description": "Returns a single NavigationPosition",
                  "operationId": "readNavigationPosition",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NavigationPositionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "NavigationPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of NavigationPosition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "navigationposition"
                  ]
              },
              "put": {
                  "summary": "Updates NavigationPosition",
                  "description": "Updates NavigationPosition",
                  "operationId": "updateNavigationPosition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/NavigationPositionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NavigationPositionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "NavigationPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "navigationposition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for NavigationPosition",
                  "description": "Updates specific value for NavigationPosition",
                  "operationId": "patchNavigationPosition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/NavigationPositionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NavigationPositionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "NavigationPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "navigationposition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a NavigationPosition",
                  "description": "Deletes a NavigationPosition",
                  "operationId": "deleteNavigationPosition",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "NavigationPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "navigationposition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of NavigationPosition to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/navigationposition\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for NavigationPosition",
                  "description": "Added new Links for NavigationPosition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksNavigationPosition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksNavigationPositionBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNavigationPositionResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of NavigationPosition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "navigationposition"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a NavigationPosition",
                  "description": "Returns a single Links for a NavigationPosition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksNavigationPosition",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNavigationPositionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "NavigationPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for NavigationPosition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "navigationposition"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a NavigationPosition",
                  "description": "Updates Links for a NavigationPosition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksNavigationPosition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksNavigationPositionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNavigationPositionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "NavigationPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of NavigationPosition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "navigationposition"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/navigationposition\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a NavigationPosition",
                  "description": "Updates specific Links for a NavigationPosition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksNavigationPosition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksNavigationPositionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNavigationPositionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "NavigationPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of NavigationPosition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "navigationposition"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a NavigationPosition",
                  "description": "Delete Links for a NavigationPosition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksNavigationPosition",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "NavigationPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for NavigationPosition to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "navigationposition"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/news": {
              "get": {
                  "summary": "Get collection of NewsEntities",
                  "description": "Returns a collection of NewsEntities",
                  "operationId": "overviewNews",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NewsEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "news"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new News",
                  "description": "Added a new News",
                  "operationId": "createNews",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/NewsBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NewsResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "news"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/news\/{id}": {
              "get": {
                  "summary": "Find News by ID",
                  "description": "Returns a single News",
                  "operationId": "readNews",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NewsResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "News not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of News to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "news"
                  ]
              },
              "put": {
                  "summary": "Updates News",
                  "description": "Updates News",
                  "operationId": "updateNews",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/NewsBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NewsResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "News not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "news"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for News",
                  "description": "Updates specific value for News",
                  "operationId": "patchNews",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/NewsBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NewsResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "News not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "news"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a News",
                  "description": "Deletes a News",
                  "operationId": "deleteNews",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "News not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "news"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of News to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/news\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for News",
                  "description": "Added new Links for News `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksNews",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksNewsBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNewsResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of News to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "news"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a News",
                  "description": "Returns a single Links for a News `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksNews",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNewsResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "News not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for News to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "news"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a News",
                  "description": "Updates Links for a News `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksNews",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksNewsBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNewsResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "News not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of News to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "news"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/news\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a News",
                  "description": "Updates specific Links for a News `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksNews",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksNewsBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNewsResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "News not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of News to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "news"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a News",
                  "description": "Delete Links for a News `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksNews",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "News not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for News to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "news"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/news\/{id}\/images": {
              "post": {
                  "summary": "Add new Images for News",
                  "description": "Added new Images for News `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createImagesNews",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesNewsBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesNewsResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of News to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "news"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Images for a News",
                  "description": "Returns a single Images for a News `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readImagesNews",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesNewsResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "News not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for News to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "news"
                  ]
              },
              "put": {
                  "summary": "Updates Images for a News",
                  "description": "Updates Images for a News `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateImagesNews",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesNewsBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesNewsResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "News not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of News to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "news"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/news\/{id}\/images\/{imagesId}": {
              "patch": {
                  "summary": "Updates specific Images for a News",
                  "description": "Updates specific Images for a News `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchImagesNews",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesNewsBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesNewsResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "News not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of News to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "news"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Images for a News",
                  "description": "Delete Images for a News `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteImagesNews",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "News not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for News to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "news"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/news\/{id}\/pagebuilder": {
              "get": {
                  "summary": "Get Pagebuilder for a News",
                  "description": "Returns a single Pagebuilder for a News `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readPagebuilderNews",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderNewsResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "News not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder for News to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "news"
                  ]
              }
          },
          "\/newsgroup": {
              "get": {
                  "summary": "Get collection of NewsgroupEntities",
                  "description": "Returns a collection of NewsgroupEntities",
                  "operationId": "overviewNewsgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NewsgroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "newsgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Newsgroup",
                  "description": "Added a new Newsgroup",
                  "operationId": "createNewsgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/NewsgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NewsgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "newsgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/newsgroup\/{id}": {
              "get": {
                  "summary": "Find Newsgroup by ID",
                  "description": "Returns a single Newsgroup",
                  "operationId": "readNewsgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NewsgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Newsgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Newsgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "newsgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Newsgroup",
                  "description": "Updates Newsgroup",
                  "operationId": "updateNewsgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/NewsgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NewsgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Newsgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "newsgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Newsgroup",
                  "description": "Updates specific value for Newsgroup",
                  "operationId": "patchNewsgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/NewsgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/NewsgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Newsgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "newsgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Newsgroup",
                  "description": "Deletes a Newsgroup",
                  "operationId": "deleteNewsgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Newsgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "newsgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Newsgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/newsgroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Newsgroup",
                  "description": "Added new Links for Newsgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksNewsgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksNewsgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNewsgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Newsgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "newsgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Newsgroup",
                  "description": "Returns a single Links for a Newsgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksNewsgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNewsgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Newsgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Newsgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "newsgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Newsgroup",
                  "description": "Updates Links for a Newsgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksNewsgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksNewsgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNewsgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Newsgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Newsgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "newsgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/newsgroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Newsgroup",
                  "description": "Updates specific Links for a Newsgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksNewsgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksNewsgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksNewsgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Newsgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Newsgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "newsgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Newsgroup",
                  "description": "Delete Links for a Newsgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksNewsgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Newsgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Newsgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "newsgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/pagebuilder": {
              "get": {
                  "summary": "Get collection of PagebuilderEntities",
                  "description": "Returns a collection of PagebuilderEntities",
                  "operationId": "overviewPagebuilder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "pagebuilder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Pagebuilder",
                  "description": "Added a new Pagebuilder",
                  "operationId": "createPagebuilder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PagebuilderBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "pagebuilder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/pagebuilder\/{id}": {
              "get": {
                  "summary": "Find Pagebuilder by ID",
                  "description": "Returns a single Pagebuilder",
                  "operationId": "readPagebuilder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Pagebuilder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "pagebuilder"
                  ]
              },
              "put": {
                  "summary": "Updates Pagebuilder",
                  "description": "Updates Pagebuilder",
                  "operationId": "updatePagebuilder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PagebuilderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Pagebuilder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "pagebuilder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Pagebuilder",
                  "description": "Updates specific value for Pagebuilder",
                  "operationId": "patchPagebuilder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PagebuilderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Pagebuilder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "pagebuilder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Pagebuilder",
                  "description": "Deletes a Pagebuilder",
                  "operationId": "deletePagebuilder",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Pagebuilder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "pagebuilder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/pagebuilder\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Pagebuilder",
                  "description": "Added new Links for Pagebuilder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksPagebuilder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPagebuilderBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPagebuilderResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "pagebuilder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Pagebuilder",
                  "description": "Returns a single Links for a Pagebuilder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksPagebuilder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPagebuilderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Pagebuilder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Pagebuilder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "pagebuilder"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Pagebuilder",
                  "description": "Updates Links for a Pagebuilder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksPagebuilder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPagebuilderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPagebuilderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Pagebuilder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "pagebuilder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/pagebuilder\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Pagebuilder",
                  "description": "Updates specific Links for a Pagebuilder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksPagebuilder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPagebuilderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPagebuilderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Pagebuilder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "pagebuilder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Pagebuilder",
                  "description": "Delete Links for a Pagebuilder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksPagebuilder",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Pagebuilder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Pagebuilder to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "pagebuilder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/pagebuilderposition": {
              "get": {
                  "summary": "Get collection of PagebuilderPositionEntities",
                  "description": "Returns a collection of PagebuilderPositionEntities",
                  "operationId": "overviewPagebuilderPosition",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderPositionEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "pagebuilderposition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new PagebuilderPosition",
                  "description": "Added a new PagebuilderPosition",
                  "operationId": "createPagebuilderPosition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PagebuilderPositionBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderPositionResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "pagebuilderposition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/pagebuilderposition\/{id}": {
              "get": {
                  "summary": "Find PagebuilderPosition by ID",
                  "description": "Returns a single PagebuilderPosition",
                  "operationId": "readPagebuilderPosition",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderPositionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "PagebuilderPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of PagebuilderPosition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "pagebuilderposition"
                  ]
              },
              "put": {
                  "summary": "Updates PagebuilderPosition",
                  "description": "Updates PagebuilderPosition",
                  "operationId": "updatePagebuilderPosition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PagebuilderPositionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderPositionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "PagebuilderPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "pagebuilderposition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for PagebuilderPosition",
                  "description": "Updates specific value for PagebuilderPosition",
                  "operationId": "patchPagebuilderPosition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PagebuilderPositionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderPositionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "PagebuilderPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "pagebuilderposition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a PagebuilderPosition",
                  "description": "Deletes a PagebuilderPosition",
                  "operationId": "deletePagebuilderPosition",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "PagebuilderPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "pagebuilderposition"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of PagebuilderPosition to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/pagebuilderposition\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for PagebuilderPosition",
                  "description": "Added new Links for PagebuilderPosition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksPagebuilderPosition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPagebuilderPositionBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPagebuilderPositionResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of PagebuilderPosition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "pagebuilderposition"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a PagebuilderPosition",
                  "description": "Returns a single Links for a PagebuilderPosition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksPagebuilderPosition",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPagebuilderPositionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "PagebuilderPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for PagebuilderPosition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "pagebuilderposition"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a PagebuilderPosition",
                  "description": "Updates Links for a PagebuilderPosition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksPagebuilderPosition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPagebuilderPositionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPagebuilderPositionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "PagebuilderPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of PagebuilderPosition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "pagebuilderposition"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/pagebuilderposition\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a PagebuilderPosition",
                  "description": "Updates specific Links for a PagebuilderPosition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksPagebuilderPosition",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPagebuilderPositionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPagebuilderPositionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "PagebuilderPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of PagebuilderPosition to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "pagebuilderposition"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a PagebuilderPosition",
                  "description": "Delete Links for a PagebuilderPosition `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksPagebuilderPosition",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "PagebuilderPosition not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for PagebuilderPosition to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "pagebuilderposition"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/partner": {
              "get": {
                  "summary": "Get collection of PartnerEntities",
                  "description": "Returns a collection of PartnerEntities",
                  "operationId": "overviewPartner",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PartnerEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "partner"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Partner",
                  "description": "Added a new Partner",
                  "operationId": "createPartner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PartnerBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PartnerResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "partner"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/partner\/{id}": {
              "get": {
                  "summary": "Find Partner by ID",
                  "description": "Returns a single Partner",
                  "operationId": "readPartner",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PartnerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Partner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Partner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "partner"
                  ]
              },
              "put": {
                  "summary": "Updates Partner",
                  "description": "Updates Partner",
                  "operationId": "updatePartner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PartnerBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PartnerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Partner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "partner"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Partner",
                  "description": "Updates specific value for Partner",
                  "operationId": "patchPartner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PartnerBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PartnerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Partner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "partner"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Partner",
                  "description": "Deletes a Partner",
                  "operationId": "deletePartner",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Partner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "partner"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Partner to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/partner\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Partner",
                  "description": "Added new Links for Partner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksPartner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPartnerBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPartnerResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Partner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "partner"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Partner",
                  "description": "Returns a single Links for a Partner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksPartner",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPartnerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Partner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Partner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "partner"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Partner",
                  "description": "Updates Links for a Partner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksPartner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPartnerBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPartnerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Partner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Partner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "partner"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/partner\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Partner",
                  "description": "Updates specific Links for a Partner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksPartner",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPartnerBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPartnerResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Partner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Partner to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "partner"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Partner",
                  "description": "Delete Links for a Partner `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksPartner",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Partner not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Partner to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "partner"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/partnergroup": {
              "get": {
                  "summary": "Get collection of PartnergroupEntities",
                  "description": "Returns a collection of PartnergroupEntities",
                  "operationId": "overviewPartnergroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PartnergroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "partnergroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Partnergroup",
                  "description": "Added a new Partnergroup",
                  "operationId": "createPartnergroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PartnergroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PartnergroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "partnergroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/partnergroup\/{id}": {
              "get": {
                  "summary": "Find Partnergroup by ID",
                  "description": "Returns a single Partnergroup",
                  "operationId": "readPartnergroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PartnergroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Partnergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Partnergroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "partnergroup"
                  ]
              },
              "put": {
                  "summary": "Updates Partnergroup",
                  "description": "Updates Partnergroup",
                  "operationId": "updatePartnergroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PartnergroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PartnergroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Partnergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "partnergroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Partnergroup",
                  "description": "Updates specific value for Partnergroup",
                  "operationId": "patchPartnergroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PartnergroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PartnergroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Partnergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "partnergroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Partnergroup",
                  "description": "Deletes a Partnergroup",
                  "operationId": "deletePartnergroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Partnergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "partnergroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Partnergroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/partnergroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Partnergroup",
                  "description": "Added new Links for Partnergroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksPartnergroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPartnergroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPartnergroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Partnergroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "partnergroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Partnergroup",
                  "description": "Returns a single Links for a Partnergroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksPartnergroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPartnergroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Partnergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Partnergroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "partnergroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Partnergroup",
                  "description": "Updates Links for a Partnergroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksPartnergroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPartnergroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPartnergroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Partnergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Partnergroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "partnergroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/partnergroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Partnergroup",
                  "description": "Updates specific Links for a Partnergroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksPartnergroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPartnergroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPartnergroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Partnergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Partnergroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "partnergroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Partnergroup",
                  "description": "Delete Links for a Partnergroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksPartnergroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Partnergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Partnergroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "partnergroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/payment": {
              "get": {
                  "summary": "Get collection of PaymentEntities",
                  "description": "Returns a collection of PaymentEntities",
                  "operationId": "overviewPayment",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PaymentEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "payment"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Payment",
                  "description": "Added a new Payment",
                  "operationId": "createPayment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PaymentBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PaymentResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "payment"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/payment\/{id}": {
              "get": {
                  "summary": "Find Payment by ID",
                  "description": "Returns a single Payment",
                  "operationId": "readPayment",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PaymentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Payment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Payment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "payment"
                  ]
              },
              "put": {
                  "summary": "Updates Payment",
                  "description": "Updates Payment",
                  "operationId": "updatePayment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PaymentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PaymentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Payment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "payment"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Payment",
                  "description": "Updates specific value for Payment",
                  "operationId": "patchPayment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PaymentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PaymentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Payment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "payment"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Payment",
                  "description": "Deletes a Payment",
                  "operationId": "deletePayment",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Payment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "payment"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Payment to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/payment\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Payment",
                  "description": "Added new Links for Payment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksPayment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPaymentBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPaymentResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Payment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "payment"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Payment",
                  "description": "Returns a single Links for a Payment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksPayment",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPaymentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Payment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Payment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "payment"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Payment",
                  "description": "Updates Links for a Payment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksPayment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPaymentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPaymentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Payment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Payment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "payment"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/payment\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Payment",
                  "description": "Updates specific Links for a Payment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksPayment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPaymentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPaymentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Payment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Payment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "payment"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Payment",
                  "description": "Delete Links for a Payment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksPayment",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Payment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Payment to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "payment"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/payment\/{id}\/images": {
              "post": {
                  "summary": "Add new Images for Payment",
                  "description": "Added new Images for Payment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createImagesPayment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesPaymentBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesPaymentResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Payment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "payment"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Images for a Payment",
                  "description": "Returns a single Images for a Payment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readImagesPayment",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesPaymentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Payment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Payment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "payment"
                  ]
              },
              "put": {
                  "summary": "Updates Images for a Payment",
                  "description": "Updates Images for a Payment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateImagesPayment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesPaymentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesPaymentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Payment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Payment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "payment"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/payment\/{id}\/images\/{imagesId}": {
              "patch": {
                  "summary": "Updates specific Images for a Payment",
                  "description": "Updates specific Images for a Payment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchImagesPayment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesPaymentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesPaymentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Payment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Payment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "payment"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Images for a Payment",
                  "description": "Delete Images for a Payment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteImagesPayment",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Payment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Payment to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "payment"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/permission": {
              "get": {
                  "summary": "Get collection of PermissionEntities",
                  "description": "Returns a collection of PermissionEntities",
                  "operationId": "overviewPermission",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PermissionEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "permission"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Permission",
                  "description": "Added a new Permission",
                  "operationId": "createPermission",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PermissionBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PermissionResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "permission"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/permission\/{id}": {
              "get": {
                  "summary": "Find Permission by ID",
                  "description": "Returns a single Permission",
                  "operationId": "readPermission",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PermissionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Permission not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Permission to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "permission"
                  ]
              },
              "put": {
                  "summary": "Updates Permission",
                  "description": "Updates Permission",
                  "operationId": "updatePermission",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PermissionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PermissionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Permission not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "permission"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Permission",
                  "description": "Updates specific value for Permission",
                  "operationId": "patchPermission",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PermissionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PermissionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Permission not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "permission"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Permission",
                  "description": "Deletes a Permission",
                  "operationId": "deletePermission",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Permission not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "permission"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Permission to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/permission\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Permission",
                  "description": "Added new Links for Permission `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksPermission",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPermissionBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPermissionResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Permission to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "permission"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Permission",
                  "description": "Returns a single Links for a Permission `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksPermission",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPermissionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Permission not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Permission to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "permission"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Permission",
                  "description": "Updates Links for a Permission `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksPermission",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPermissionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPermissionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Permission not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Permission to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "permission"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/permission\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Permission",
                  "description": "Updates specific Links for a Permission `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksPermission",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPermissionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPermissionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Permission not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Permission to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "permission"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Permission",
                  "description": "Delete Links for a Permission `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksPermission",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Permission not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Permission to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "permission"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/popup": {
              "get": {
                  "summary": "Get collection of PopupEntities",
                  "description": "Returns a collection of PopupEntities",
                  "operationId": "overviewPopup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PopupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "popup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Popup",
                  "description": "Added a new Popup",
                  "operationId": "createPopup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PopupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PopupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "popup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/popup\/{id}": {
              "get": {
                  "summary": "Find Popup by ID",
                  "description": "Returns a single Popup",
                  "operationId": "readPopup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PopupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Popup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Popup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "popup"
                  ]
              },
              "put": {
                  "summary": "Updates Popup",
                  "description": "Updates Popup",
                  "operationId": "updatePopup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PopupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PopupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Popup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "popup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Popup",
                  "description": "Updates specific value for Popup",
                  "operationId": "patchPopup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/PopupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PopupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Popup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "popup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Popup",
                  "description": "Deletes a Popup",
                  "operationId": "deletePopup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Popup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "popup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Popup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/popup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Popup",
                  "description": "Added new Links for Popup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksPopup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPopupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPopupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Popup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "popup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Popup",
                  "description": "Returns a single Links for a Popup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksPopup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPopupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Popup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Popup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "popup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Popup",
                  "description": "Updates Links for a Popup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksPopup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPopupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPopupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Popup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Popup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "popup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/popup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Popup",
                  "description": "Updates specific Links for a Popup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksPopup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksPopupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksPopupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Popup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Popup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "popup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Popup",
                  "description": "Delete Links for a Popup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksPopup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Popup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Popup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "popup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/product": {
              "get": {
                  "summary": "Get collection of ProductEntities",
                  "description": "Returns a collection of ProductEntities",
                  "operationId": "overviewProduct",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "product"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Product",
                  "description": "Added a new Product",
                  "operationId": "createProduct",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "product"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/product\/{id}": {
              "get": {
                  "summary": "Find Product by ID",
                  "description": "Returns a single Product",
                  "operationId": "readProduct",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Product not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Product to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "product"
                  ]
              },
              "put": {
                  "summary": "Updates Product",
                  "description": "Updates Product",
                  "operationId": "updateProduct",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Product not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "product"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Product",
                  "description": "Updates specific value for Product",
                  "operationId": "patchProduct",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Product not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "product"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Product",
                  "description": "Deletes a Product",
                  "operationId": "deleteProduct",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Product not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "product"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Product to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/product\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Product",
                  "description": "Added new Links for Product `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksProduct",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Product to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "product"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Product",
                  "description": "Returns a single Links for a Product `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksProduct",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Product not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Product to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "product"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Product",
                  "description": "Updates Links for a Product `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksProduct",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Product not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Product to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "product"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/product\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Product",
                  "description": "Updates specific Links for a Product `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksProduct",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Product not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Product to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "product"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Product",
                  "description": "Delete Links for a Product `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksProduct",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Product not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Product to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "product"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/product\/{id}\/images": {
              "post": {
                  "summary": "Add new Images for Product",
                  "description": "Added new Images for Product `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createImagesProduct",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesProductBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesProductResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Product to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "product"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Images for a Product",
                  "description": "Returns a single Images for a Product `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readImagesProduct",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesProductResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Product not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Product to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "product"
                  ]
              },
              "put": {
                  "summary": "Updates Images for a Product",
                  "description": "Updates Images for a Product `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateImagesProduct",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesProductBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesProductResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Product not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Product to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "product"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/product\/{id}\/images\/{imagesId}": {
              "patch": {
                  "summary": "Updates specific Images for a Product",
                  "description": "Updates specific Images for a Product `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchImagesProduct",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesProductBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesProductResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Product not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Product to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "product"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Images for a Product",
                  "description": "Delete Images for a Product `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteImagesProduct",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Product not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Product to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "product"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/product\/{id}\/pagebuilder": {
              "get": {
                  "summary": "Get Pagebuilder for a Product",
                  "description": "Returns a single Pagebuilder for a Product `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readPagebuilderProduct",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderProductResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Product not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder for Product to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "product"
                  ]
              }
          },
          "\/productbundle": {
              "get": {
                  "summary": "Get collection of ProductBundleEntities",
                  "description": "Returns a collection of ProductBundleEntities",
                  "operationId": "overviewProductBundle",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductBundleEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productbundle"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new ProductBundle",
                  "description": "Added a new ProductBundle",
                  "operationId": "createProductBundle",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductBundleBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductBundleResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productbundle"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productbundle\/{id}": {
              "get": {
                  "summary": "Find ProductBundle by ID",
                  "description": "Returns a single ProductBundle",
                  "operationId": "readProductBundle",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductBundleResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductBundle not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductBundle to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productbundle"
                  ]
              },
              "put": {
                  "summary": "Updates ProductBundle",
                  "description": "Updates ProductBundle",
                  "operationId": "updateProductBundle",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductBundleBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductBundleResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductBundle not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productbundle"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for ProductBundle",
                  "description": "Updates specific value for ProductBundle",
                  "operationId": "patchProductBundle",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductBundleBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductBundleResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductBundle not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productbundle"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a ProductBundle",
                  "description": "Deletes a ProductBundle",
                  "operationId": "deleteProductBundle",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "ProductBundle not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productbundle"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductBundle to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productbundle\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for ProductBundle",
                  "description": "Added new Links for ProductBundle `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksProductBundle",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductBundleBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductBundleResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductBundle to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productbundle"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a ProductBundle",
                  "description": "Returns a single Links for a ProductBundle `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksProductBundle",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductBundleResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductBundle not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for ProductBundle to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productbundle"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a ProductBundle",
                  "description": "Updates Links for a ProductBundle `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksProductBundle",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductBundleBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductBundleResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductBundle not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductBundle to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productbundle"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productbundle\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a ProductBundle",
                  "description": "Updates specific Links for a ProductBundle `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksProductBundle",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductBundleBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductBundleResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductBundle not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductBundle to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productbundle"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a ProductBundle",
                  "description": "Delete Links for a ProductBundle `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksProductBundle",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "ProductBundle not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for ProductBundle to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productbundle"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productbundle\/{id}\/images": {
              "post": {
                  "summary": "Add new Images for ProductBundle",
                  "description": "Added new Images for ProductBundle `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createImagesProductBundle",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesProductBundleBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesProductBundleResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductBundle to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productbundle"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Images for a ProductBundle",
                  "description": "Returns a single Images for a ProductBundle `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readImagesProductBundle",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesProductBundleResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductBundle not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for ProductBundle to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productbundle"
                  ]
              },
              "put": {
                  "summary": "Updates Images for a ProductBundle",
                  "description": "Updates Images for a ProductBundle `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateImagesProductBundle",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesProductBundleBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesProductBundleResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductBundle not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductBundle to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productbundle"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productbundle\/{id}\/images\/{imagesId}": {
              "patch": {
                  "summary": "Updates specific Images for a ProductBundle",
                  "description": "Updates specific Images for a ProductBundle `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchImagesProductBundle",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesProductBundleBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesProductBundleResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductBundle not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductBundle to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productbundle"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Images for a ProductBundle",
                  "description": "Delete Images for a ProductBundle `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteImagesProductBundle",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "ProductBundle not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for ProductBundle to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productbundle"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productbundle\/{id}\/pagebuilder": {
              "get": {
                  "summary": "Get Pagebuilder for a ProductBundle",
                  "description": "Returns a single Pagebuilder for a ProductBundle `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readPagebuilderProductBundle",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderProductBundleResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductBundle not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder for ProductBundle to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productbundle"
                  ]
              }
          },
          "\/productdiscount": {
              "get": {
                  "summary": "Get collection of ProductDiscountEntities",
                  "description": "Returns a collection of ProductDiscountEntities",
                  "operationId": "overviewProductDiscount",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductDiscountEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productdiscount"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new ProductDiscount",
                  "description": "Added a new ProductDiscount",
                  "operationId": "createProductDiscount",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductDiscountBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductDiscountResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productdiscount"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productdiscount\/{id}": {
              "get": {
                  "summary": "Find ProductDiscount by ID",
                  "description": "Returns a single ProductDiscount",
                  "operationId": "readProductDiscount",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductDiscountResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductDiscount not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductDiscount to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productdiscount"
                  ]
              },
              "put": {
                  "summary": "Updates ProductDiscount",
                  "description": "Updates ProductDiscount",
                  "operationId": "updateProductDiscount",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductDiscountBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductDiscountResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductDiscount not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productdiscount"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for ProductDiscount",
                  "description": "Updates specific value for ProductDiscount",
                  "operationId": "patchProductDiscount",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductDiscountBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductDiscountResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductDiscount not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productdiscount"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a ProductDiscount",
                  "description": "Deletes a ProductDiscount",
                  "operationId": "deleteProductDiscount",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "ProductDiscount not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productdiscount"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductDiscount to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productdiscount\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for ProductDiscount",
                  "description": "Added new Links for ProductDiscount `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksProductDiscount",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductDiscountBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductDiscountResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductDiscount to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productdiscount"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a ProductDiscount",
                  "description": "Returns a single Links for a ProductDiscount `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksProductDiscount",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductDiscountResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductDiscount not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for ProductDiscount to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productdiscount"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a ProductDiscount",
                  "description": "Updates Links for a ProductDiscount `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksProductDiscount",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductDiscountBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductDiscountResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductDiscount not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductDiscount to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productdiscount"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productdiscount\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a ProductDiscount",
                  "description": "Updates specific Links for a ProductDiscount `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksProductDiscount",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductDiscountBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductDiscountResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductDiscount not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductDiscount to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productdiscount"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a ProductDiscount",
                  "description": "Delete Links for a ProductDiscount `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksProductDiscount",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "ProductDiscount not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for ProductDiscount to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productdiscount"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productfilterdocument": {
              "get": {
                  "summary": "Get collection of ProductFilterDocumentEntities",
                  "description": "Returns a collection of ProductFilterDocumentEntities",
                  "operationId": "overviewProductFilterDocument",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductFilterDocumentEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productfilterdocument"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new ProductFilterDocument",
                  "description": "Added a new ProductFilterDocument",
                  "operationId": "createProductFilterDocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductFilterDocumentBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductFilterDocumentResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productfilterdocument"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productfilterdocument\/{id}": {
              "get": {
                  "summary": "Find ProductFilterDocument by ID",
                  "description": "Returns a single ProductFilterDocument",
                  "operationId": "readProductFilterDocument",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductFilterDocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductFilterDocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductFilterDocument to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productfilterdocument"
                  ]
              },
              "put": {
                  "summary": "Updates ProductFilterDocument",
                  "description": "Updates ProductFilterDocument",
                  "operationId": "updateProductFilterDocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductFilterDocumentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductFilterDocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductFilterDocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productfilterdocument"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for ProductFilterDocument",
                  "description": "Updates specific value for ProductFilterDocument",
                  "operationId": "patchProductFilterDocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductFilterDocumentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductFilterDocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductFilterDocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productfilterdocument"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a ProductFilterDocument",
                  "description": "Deletes a ProductFilterDocument",
                  "operationId": "deleteProductFilterDocument",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "ProductFilterDocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productfilterdocument"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductFilterDocument to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productfilterdocument\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for ProductFilterDocument",
                  "description": "Added new Links for ProductFilterDocument `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksProductFilterDocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductFilterDocumentBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductFilterDocumentResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductFilterDocument to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productfilterdocument"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a ProductFilterDocument",
                  "description": "Returns a single Links for a ProductFilterDocument `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksProductFilterDocument",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductFilterDocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductFilterDocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for ProductFilterDocument to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productfilterdocument"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a ProductFilterDocument",
                  "description": "Updates Links for a ProductFilterDocument `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksProductFilterDocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductFilterDocumentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductFilterDocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductFilterDocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductFilterDocument to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productfilterdocument"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productfilterdocument\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a ProductFilterDocument",
                  "description": "Updates specific Links for a ProductFilterDocument `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksProductFilterDocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductFilterDocumentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductFilterDocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "ProductFilterDocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of ProductFilterDocument to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productfilterdocument"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a ProductFilterDocument",
                  "description": "Delete Links for a ProductFilterDocument `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksProductFilterDocument",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "ProductFilterDocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for ProductFilterDocument to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productfilterdocument"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productgroup": {
              "get": {
                  "summary": "Get collection of ProductgroupEntities",
                  "description": "Returns a collection of ProductgroupEntities",
                  "operationId": "overviewProductgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductgroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Productgroup",
                  "description": "Added a new Productgroup",
                  "operationId": "createProductgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productgroup\/{id}": {
              "get": {
                  "summary": "Find Productgroup by ID",
                  "description": "Returns a single Productgroup",
                  "operationId": "readProductgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Productgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Productgroup",
                  "description": "Updates Productgroup",
                  "operationId": "updateProductgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Productgroup",
                  "description": "Updates specific value for Productgroup",
                  "operationId": "patchProductgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Productgroup",
                  "description": "Deletes a Productgroup",
                  "operationId": "deleteProductgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Productgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Productgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productgroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Productgroup",
                  "description": "Added new Links for Productgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksProductgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Productgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Productgroup",
                  "description": "Returns a single Links for a Productgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksProductgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Productgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Productgroup",
                  "description": "Updates Links for a Productgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksProductgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Productgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productgroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Productgroup",
                  "description": "Updates specific Links for a Productgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksProductgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Productgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Productgroup",
                  "description": "Delete Links for a Productgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksProductgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Productgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Productgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productgroup\/{id}\/images": {
              "post": {
                  "summary": "Add new Images for Productgroup",
                  "description": "Added new Images for Productgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createImagesProductgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesProductgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesProductgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Productgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Images for a Productgroup",
                  "description": "Returns a single Images for a Productgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readImagesProductgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesProductgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Productgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Images for a Productgroup",
                  "description": "Updates Images for a Productgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateImagesProductgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesProductgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesProductgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Productgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productgroup\/{id}\/images\/{imagesId}": {
              "patch": {
                  "summary": "Updates specific Images for a Productgroup",
                  "description": "Updates specific Images for a Productgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchImagesProductgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesProductgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesProductgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Productgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Images for a Productgroup",
                  "description": "Delete Images for a Productgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteImagesProductgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Productgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Productgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productgroup\/{id}\/pagebuilder": {
              "get": {
                  "summary": "Get Pagebuilder for a Productgroup",
                  "description": "Returns a single Pagebuilder for a Productgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readPagebuilderProductgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderProductgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder for Productgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productgroup"
                  ]
              }
          },
          "\/productstockalert": {
              "get": {
                  "summary": "Get collection of ProductstockalertEntities",
                  "description": "Returns a collection of ProductstockalertEntities",
                  "operationId": "overviewProductstockalert",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductstockalertEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productstockalert"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Productstockalert",
                  "description": "Added a new Productstockalert",
                  "operationId": "createProductstockalert",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductstockalertBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductstockalertResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productstockalert"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productstockalert\/{id}": {
              "get": {
                  "summary": "Find Productstockalert by ID",
                  "description": "Returns a single Productstockalert",
                  "operationId": "readProductstockalert",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductstockalertResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productstockalert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Productstockalert to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productstockalert"
                  ]
              },
              "put": {
                  "summary": "Updates Productstockalert",
                  "description": "Updates Productstockalert",
                  "operationId": "updateProductstockalert",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductstockalertBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductstockalertResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productstockalert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productstockalert"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Productstockalert",
                  "description": "Updates specific value for Productstockalert",
                  "operationId": "patchProductstockalert",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProductstockalertBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProductstockalertResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productstockalert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productstockalert"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Productstockalert",
                  "description": "Deletes a Productstockalert",
                  "operationId": "deleteProductstockalert",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Productstockalert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "productstockalert"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Productstockalert to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productstockalert\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Productstockalert",
                  "description": "Added new Links for Productstockalert `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksProductstockalert",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductstockalertBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductstockalertResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Productstockalert to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productstockalert"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Productstockalert",
                  "description": "Returns a single Links for a Productstockalert `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksProductstockalert",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductstockalertResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productstockalert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Productstockalert to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productstockalert"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Productstockalert",
                  "description": "Updates Links for a Productstockalert `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksProductstockalert",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductstockalertBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductstockalertResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productstockalert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Productstockalert to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productstockalert"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/productstockalert\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Productstockalert",
                  "description": "Updates specific Links for a Productstockalert `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksProductstockalert",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProductstockalertBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProductstockalertResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Productstockalert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Productstockalert to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productstockalert"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Productstockalert",
                  "description": "Delete Links for a Productstockalert `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksProductstockalert",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Productstockalert not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Productstockalert to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "productstockalert"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/project": {
              "get": {
                  "summary": "Get collection of ProjectEntities",
                  "description": "Returns a collection of ProjectEntities",
                  "operationId": "overviewProject",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProjectEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "project"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Project",
                  "description": "Added a new Project",
                  "operationId": "createProject",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProjectBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProjectResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "project"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/project\/{id}": {
              "get": {
                  "summary": "Find Project by ID",
                  "description": "Returns a single Project",
                  "operationId": "readProject",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProjectResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Project not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Project to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "project"
                  ]
              },
              "put": {
                  "summary": "Updates Project",
                  "description": "Updates Project",
                  "operationId": "updateProject",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProjectBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProjectResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Project not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "project"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Project",
                  "description": "Updates specific value for Project",
                  "operationId": "patchProject",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProjectBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProjectResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Project not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "project"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Project",
                  "description": "Deletes a Project",
                  "operationId": "deleteProject",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Project not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "project"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Project to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/project\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Project",
                  "description": "Added new Links for Project `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksProject",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProjectBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProjectResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Project to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "project"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Project",
                  "description": "Returns a single Links for a Project `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksProject",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProjectResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Project not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Project to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "project"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Project",
                  "description": "Updates Links for a Project `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksProject",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProjectBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProjectResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Project not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Project to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "project"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/project\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Project",
                  "description": "Updates specific Links for a Project `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksProject",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProjectBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProjectResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Project not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Project to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "project"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Project",
                  "description": "Delete Links for a Project `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksProject",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Project not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Project to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "project"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/project\/{id}\/pagebuilder": {
              "get": {
                  "summary": "Get Pagebuilder for a Project",
                  "description": "Returns a single Pagebuilder for a Project `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readPagebuilderProject",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderProjectResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Project not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder for Project to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "project"
                  ]
              }
          },
          "\/projectgroup": {
              "get": {
                  "summary": "Get collection of ProjectgroupEntities",
                  "description": "Returns a collection of ProjectgroupEntities",
                  "operationId": "overviewProjectgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProjectgroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "projectgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Projectgroup",
                  "description": "Added a new Projectgroup",
                  "operationId": "createProjectgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProjectgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProjectgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "projectgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/projectgroup\/{id}": {
              "get": {
                  "summary": "Find Projectgroup by ID",
                  "description": "Returns a single Projectgroup",
                  "operationId": "readProjectgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProjectgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Projectgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Projectgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "projectgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Projectgroup",
                  "description": "Updates Projectgroup",
                  "operationId": "updateProjectgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProjectgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProjectgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Projectgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "projectgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Projectgroup",
                  "description": "Updates specific value for Projectgroup",
                  "operationId": "patchProjectgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ProjectgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ProjectgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Projectgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "projectgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Projectgroup",
                  "description": "Deletes a Projectgroup",
                  "operationId": "deleteProjectgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Projectgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "projectgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Projectgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/projectgroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Projectgroup",
                  "description": "Added new Links for Projectgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksProjectgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProjectgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProjectgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Projectgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "projectgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Projectgroup",
                  "description": "Returns a single Links for a Projectgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksProjectgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProjectgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Projectgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Projectgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "projectgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Projectgroup",
                  "description": "Updates Links for a Projectgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksProjectgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProjectgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProjectgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Projectgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Projectgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "projectgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/projectgroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Projectgroup",
                  "description": "Updates specific Links for a Projectgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksProjectgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksProjectgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksProjectgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Projectgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Projectgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "projectgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Projectgroup",
                  "description": "Delete Links for a Projectgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksProjectgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Projectgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Projectgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "projectgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/redirect": {
              "get": {
                  "summary": "Get collection of RedirectEntities",
                  "description": "Returns a collection of RedirectEntities",
                  "operationId": "overviewRedirect",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/RedirectEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "redirect"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Redirect",
                  "description": "Added a new Redirect",
                  "operationId": "createRedirect",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/RedirectBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/RedirectResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "redirect"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/redirect\/{id}": {
              "get": {
                  "summary": "Find Redirect by ID",
                  "description": "Returns a single Redirect",
                  "operationId": "readRedirect",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/RedirectResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Redirect not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Redirect to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "redirect"
                  ]
              },
              "put": {
                  "summary": "Updates Redirect",
                  "description": "Updates Redirect",
                  "operationId": "updateRedirect",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/RedirectBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/RedirectResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Redirect not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "redirect"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Redirect",
                  "description": "Updates specific value for Redirect",
                  "operationId": "patchRedirect",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/RedirectBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/RedirectResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Redirect not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "redirect"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Redirect",
                  "description": "Deletes a Redirect",
                  "operationId": "deleteRedirect",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Redirect not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "redirect"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Redirect to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/reference": {
              "get": {
                  "summary": "Get collection of ReferenceEntities",
                  "description": "Returns a collection of ReferenceEntities",
                  "operationId": "overviewReference",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ReferenceEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "reference"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Reference",
                  "description": "Added a new Reference",
                  "operationId": "createReference",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ReferenceBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ReferenceResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "reference"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/reference\/{id}": {
              "get": {
                  "summary": "Find Reference by ID",
                  "description": "Returns a single Reference",
                  "operationId": "readReference",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ReferenceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Reference not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Reference to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "reference"
                  ]
              },
              "put": {
                  "summary": "Updates Reference",
                  "description": "Updates Reference",
                  "operationId": "updateReference",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ReferenceBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ReferenceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Reference not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "reference"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Reference",
                  "description": "Updates specific value for Reference",
                  "operationId": "patchReference",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ReferenceBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ReferenceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Reference not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "reference"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Reference",
                  "description": "Deletes a Reference",
                  "operationId": "deleteReference",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Reference not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "reference"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Reference to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/reference\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Reference",
                  "description": "Added new Links for Reference `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksReference",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksReferenceBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksReferenceResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Reference to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "reference"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Reference",
                  "description": "Returns a single Links for a Reference `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksReference",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksReferenceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Reference not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Reference to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "reference"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Reference",
                  "description": "Updates Links for a Reference `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksReference",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksReferenceBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksReferenceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Reference not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Reference to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "reference"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/reference\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Reference",
                  "description": "Updates specific Links for a Reference `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksReference",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksReferenceBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksReferenceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Reference not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Reference to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "reference"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Reference",
                  "description": "Delete Links for a Reference `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksReference",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Reference not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Reference to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "reference"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/referencegroup": {
              "get": {
                  "summary": "Get collection of ReferencegroupEntities",
                  "description": "Returns a collection of ReferencegroupEntities",
                  "operationId": "overviewReferencegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ReferencegroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "referencegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Referencegroup",
                  "description": "Added a new Referencegroup",
                  "operationId": "createReferencegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ReferencegroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ReferencegroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "referencegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/referencegroup\/{id}": {
              "get": {
                  "summary": "Find Referencegroup by ID",
                  "description": "Returns a single Referencegroup",
                  "operationId": "readReferencegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ReferencegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Referencegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Referencegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "referencegroup"
                  ]
              },
              "put": {
                  "summary": "Updates Referencegroup",
                  "description": "Updates Referencegroup",
                  "operationId": "updateReferencegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ReferencegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ReferencegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Referencegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "referencegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Referencegroup",
                  "description": "Updates specific value for Referencegroup",
                  "operationId": "patchReferencegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ReferencegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ReferencegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Referencegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "referencegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Referencegroup",
                  "description": "Deletes a Referencegroup",
                  "operationId": "deleteReferencegroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Referencegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "referencegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Referencegroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/referencegroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Referencegroup",
                  "description": "Added new Links for Referencegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksReferencegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksReferencegroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksReferencegroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Referencegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "referencegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Referencegroup",
                  "description": "Returns a single Links for a Referencegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksReferencegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksReferencegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Referencegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Referencegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "referencegroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Referencegroup",
                  "description": "Updates Links for a Referencegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksReferencegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksReferencegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksReferencegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Referencegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Referencegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "referencegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/referencegroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Referencegroup",
                  "description": "Updates specific Links for a Referencegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksReferencegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksReferencegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksReferencegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Referencegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Referencegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "referencegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Referencegroup",
                  "description": "Delete Links for a Referencegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksReferencegroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Referencegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Referencegroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "referencegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/refinegroup": {
              "get": {
                  "summary": "Get collection of RefinegroupEntities",
                  "description": "Returns a collection of RefinegroupEntities",
                  "operationId": "overviewRefinegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/RefinegroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "refinegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Refinegroup",
                  "description": "Added a new Refinegroup",
                  "operationId": "createRefinegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/RefinegroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/RefinegroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "refinegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/refinegroup\/{id}": {
              "get": {
                  "summary": "Find Refinegroup by ID",
                  "description": "Returns a single Refinegroup",
                  "operationId": "readRefinegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/RefinegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Refinegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Refinegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "refinegroup"
                  ]
              },
              "put": {
                  "summary": "Updates Refinegroup",
                  "description": "Updates Refinegroup",
                  "operationId": "updateRefinegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/RefinegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/RefinegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Refinegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "refinegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Refinegroup",
                  "description": "Updates specific value for Refinegroup",
                  "operationId": "patchRefinegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/RefinegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/RefinegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Refinegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "refinegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Refinegroup",
                  "description": "Deletes a Refinegroup",
                  "operationId": "deleteRefinegroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Refinegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "refinegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Refinegroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/refinegroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Refinegroup",
                  "description": "Added new Links for Refinegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksRefinegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksRefinegroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksRefinegroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Refinegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "refinegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Refinegroup",
                  "description": "Returns a single Links for a Refinegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksRefinegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksRefinegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Refinegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Refinegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "refinegroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Refinegroup",
                  "description": "Updates Links for a Refinegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksRefinegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksRefinegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksRefinegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Refinegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Refinegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "refinegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/refinegroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Refinegroup",
                  "description": "Updates specific Links for a Refinegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksRefinegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksRefinegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksRefinegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Refinegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Refinegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "refinegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Refinegroup",
                  "description": "Delete Links for a Refinegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksRefinegroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Refinegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Refinegroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "refinegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/search": {
              "get": {
                  "summary": "Get collection of SearchEntities",
                  "description": "Returns a collection of SearchEntities",
                  "operationId": "overviewSearch",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SearchEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "search"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/service": {
              "get": {
                  "summary": "Get collection of ServiceEntities",
                  "description": "Returns a collection of ServiceEntities",
                  "operationId": "overviewService",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ServiceEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "service"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Service",
                  "description": "Added a new Service",
                  "operationId": "createService",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ServiceBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ServiceResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "service"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/service\/{id}": {
              "get": {
                  "summary": "Find Service by ID",
                  "description": "Returns a single Service",
                  "operationId": "readService",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ServiceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Service not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Service to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "service"
                  ]
              },
              "put": {
                  "summary": "Updates Service",
                  "description": "Updates Service",
                  "operationId": "updateService",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ServiceBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ServiceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Service not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "service"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Service",
                  "description": "Updates specific value for Service",
                  "operationId": "patchService",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ServiceBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ServiceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Service not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "service"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Service",
                  "description": "Deletes a Service",
                  "operationId": "deleteService",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Service not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "service"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Service to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/service\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Service",
                  "description": "Added new Links for Service `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksService",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksServiceBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksServiceResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Service to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "service"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Service",
                  "description": "Returns a single Links for a Service `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksService",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksServiceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Service not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Service to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "service"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Service",
                  "description": "Updates Links for a Service `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksService",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksServiceBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksServiceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Service not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Service to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "service"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/service\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Service",
                  "description": "Updates specific Links for a Service `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksService",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksServiceBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksServiceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Service not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Service to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "service"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Service",
                  "description": "Delete Links for a Service `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksService",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Service not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Service to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "service"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/service\/{id}\/images": {
              "post": {
                  "summary": "Add new Images for Service",
                  "description": "Added new Images for Service `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createImagesService",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesServiceBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesServiceResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Service to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "service"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Images for a Service",
                  "description": "Returns a single Images for a Service `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readImagesService",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesServiceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Service not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Service to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "service"
                  ]
              },
              "put": {
                  "summary": "Updates Images for a Service",
                  "description": "Updates Images for a Service `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateImagesService",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesServiceBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesServiceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Service not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Service to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "service"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/service\/{id}\/images\/{imagesId}": {
              "patch": {
                  "summary": "Updates specific Images for a Service",
                  "description": "Updates specific Images for a Service `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchImagesService",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesServiceBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesServiceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Service not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Service to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "service"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Images for a Service",
                  "description": "Delete Images for a Service `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteImagesService",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Service not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Service to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "service"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/service\/{id}\/pagebuilder": {
              "get": {
                  "summary": "Get Pagebuilder for a Service",
                  "description": "Returns a single Pagebuilder for a Service `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readPagebuilderService",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderServiceResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Service not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder for Service to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "service"
                  ]
              }
          },
          "\/servicegroup": {
              "get": {
                  "summary": "Get collection of ServicegroupEntities",
                  "description": "Returns a collection of ServicegroupEntities",
                  "operationId": "overviewServicegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ServicegroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "servicegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Servicegroup",
                  "description": "Added a new Servicegroup",
                  "operationId": "createServicegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ServicegroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ServicegroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "servicegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/servicegroup\/{id}": {
              "get": {
                  "summary": "Find Servicegroup by ID",
                  "description": "Returns a single Servicegroup",
                  "operationId": "readServicegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ServicegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Servicegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Servicegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "servicegroup"
                  ]
              },
              "put": {
                  "summary": "Updates Servicegroup",
                  "description": "Updates Servicegroup",
                  "operationId": "updateServicegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ServicegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ServicegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Servicegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "servicegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Servicegroup",
                  "description": "Updates specific value for Servicegroup",
                  "operationId": "patchServicegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ServicegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ServicegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Servicegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "servicegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Servicegroup",
                  "description": "Deletes a Servicegroup",
                  "operationId": "deleteServicegroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Servicegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "servicegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Servicegroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/servicegroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Servicegroup",
                  "description": "Added new Links for Servicegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksServicegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksServicegroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksServicegroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Servicegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "servicegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Servicegroup",
                  "description": "Returns a single Links for a Servicegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksServicegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksServicegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Servicegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Servicegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "servicegroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Servicegroup",
                  "description": "Updates Links for a Servicegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksServicegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksServicegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksServicegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Servicegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Servicegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "servicegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/servicegroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Servicegroup",
                  "description": "Updates specific Links for a Servicegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksServicegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksServicegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksServicegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Servicegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Servicegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "servicegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Servicegroup",
                  "description": "Delete Links for a Servicegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksServicegroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Servicegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Servicegroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "servicegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/shipment": {
              "get": {
                  "summary": "Get collection of ShipmentEntities",
                  "description": "Returns a collection of ShipmentEntities",
                  "operationId": "overviewShipment",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ShipmentEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "shipment"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Shipment",
                  "description": "Added a new Shipment",
                  "operationId": "createShipment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ShipmentBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ShipmentResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "shipment"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/shipment\/{id}": {
              "get": {
                  "summary": "Find Shipment by ID",
                  "description": "Returns a single Shipment",
                  "operationId": "readShipment",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ShipmentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Shipment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Shipment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "shipment"
                  ]
              },
              "put": {
                  "summary": "Updates Shipment",
                  "description": "Updates Shipment",
                  "operationId": "updateShipment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ShipmentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ShipmentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Shipment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "shipment"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Shipment",
                  "description": "Updates specific value for Shipment",
                  "operationId": "patchShipment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ShipmentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ShipmentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Shipment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "shipment"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Shipment",
                  "description": "Deletes a Shipment",
                  "operationId": "deleteShipment",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Shipment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "shipment"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Shipment to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/shipment\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Shipment",
                  "description": "Added new Links for Shipment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksShipment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksShipmentBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksShipmentResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Shipment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "shipment"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Shipment",
                  "description": "Returns a single Links for a Shipment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksShipment",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksShipmentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Shipment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Shipment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "shipment"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Shipment",
                  "description": "Updates Links for a Shipment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksShipment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksShipmentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksShipmentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Shipment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Shipment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "shipment"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/shipment\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Shipment",
                  "description": "Updates specific Links for a Shipment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksShipment",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksShipmentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksShipmentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Shipment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Shipment to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "shipment"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Shipment",
                  "description": "Delete Links for a Shipment `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksShipment",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Shipment not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Shipment to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "shipment"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/shipping": {
              "get": {
                  "summary": "Get collection of ShippingEntities",
                  "description": "Returns a collection of ShippingEntities",
                  "operationId": "overviewShipping",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ShippingEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "shipping"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Shipping",
                  "description": "Added a new Shipping",
                  "operationId": "createShipping",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ShippingBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ShippingResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "shipping"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/shipping\/{id}": {
              "get": {
                  "summary": "Find Shipping by ID",
                  "description": "Returns a single Shipping",
                  "operationId": "readShipping",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ShippingResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Shipping not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Shipping to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "shipping"
                  ]
              },
              "put": {
                  "summary": "Updates Shipping",
                  "description": "Updates Shipping",
                  "operationId": "updateShipping",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ShippingBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ShippingResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Shipping not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "shipping"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Shipping",
                  "description": "Updates specific value for Shipping",
                  "operationId": "patchShipping",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ShippingBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ShippingResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Shipping not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "shipping"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Shipping",
                  "description": "Deletes a Shipping",
                  "operationId": "deleteShipping",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Shipping not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "shipping"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Shipping to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/shipping\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Shipping",
                  "description": "Added new Links for Shipping `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksShipping",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksShippingBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksShippingResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Shipping to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "shipping"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Shipping",
                  "description": "Returns a single Links for a Shipping `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksShipping",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksShippingResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Shipping not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Shipping to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "shipping"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Shipping",
                  "description": "Updates Links for a Shipping `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksShipping",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksShippingBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksShippingResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Shipping not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Shipping to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "shipping"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/shipping\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Shipping",
                  "description": "Updates specific Links for a Shipping `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksShipping",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksShippingBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksShippingResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Shipping not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Shipping to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "shipping"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Shipping",
                  "description": "Delete Links for a Shipping `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksShipping",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Shipping not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Shipping to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "shipping"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/site": {
              "get": {
                  "summary": "Get collection of SiteEntities",
                  "description": "Returns a collection of SiteEntities",
                  "operationId": "overviewSite",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SiteEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "site"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/site\/{id}": {
              "get": {
                  "summary": "Find Site by ID",
                  "description": "Returns a single Site",
                  "operationId": "readSite",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SiteResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Site not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Site to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "site"
                  ]
              }
          },
          "\/sitemap": {
              "get": {
                  "summary": "Get collection of SitemapEntities",
                  "description": "Returns a collection of SitemapEntities",
                  "operationId": "overviewSitemap",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SitemapEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "sitemap"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/size": {
              "get": {
                  "summary": "Get collection of SizeEntities",
                  "description": "Returns a collection of SizeEntities",
                  "operationId": "overviewSize",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizeEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "size"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Size",
                  "description": "Added a new Size",
                  "operationId": "createSize",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/SizeBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizeResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "size"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/size\/{id}": {
              "get": {
                  "summary": "Find Size by ID",
                  "description": "Returns a single Size",
                  "operationId": "readSize",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Size not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Size to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "size"
                  ]
              },
              "put": {
                  "summary": "Updates Size",
                  "description": "Updates Size",
                  "operationId": "updateSize",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/SizeBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Size not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "size"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Size",
                  "description": "Updates specific value for Size",
                  "operationId": "patchSize",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/SizeBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Size not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "size"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Size",
                  "description": "Deletes a Size",
                  "operationId": "deleteSize",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Size not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "size"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Size to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/size\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Size",
                  "description": "Added new Links for Size `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksSize",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksSizeBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksSizeResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Size to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "size"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Size",
                  "description": "Returns a single Links for a Size `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksSize",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksSizeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Size not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Size to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "size"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Size",
                  "description": "Updates Links for a Size `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksSize",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksSizeBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksSizeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Size not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Size to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "size"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/size\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Size",
                  "description": "Updates specific Links for a Size `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksSize",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksSizeBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksSizeResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Size not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Size to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "size"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Size",
                  "description": "Delete Links for a Size `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksSize",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Size not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Size to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "size"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/sizechart": {
              "get": {
                  "summary": "Get collection of SizechartEntities",
                  "description": "Returns a collection of SizechartEntities",
                  "operationId": "overviewSizechart",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizechartEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "sizechart"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Sizechart",
                  "description": "Added a new Sizechart",
                  "operationId": "createSizechart",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/SizechartBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizechartResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "sizechart"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/sizechart\/{id}": {
              "get": {
                  "summary": "Find Sizechart by ID",
                  "description": "Returns a single Sizechart",
                  "operationId": "readSizechart",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizechartResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Sizechart not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Sizechart to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "sizechart"
                  ]
              },
              "put": {
                  "summary": "Updates Sizechart",
                  "description": "Updates Sizechart",
                  "operationId": "updateSizechart",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/SizechartBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizechartResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Sizechart not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "sizechart"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Sizechart",
                  "description": "Updates specific value for Sizechart",
                  "operationId": "patchSizechart",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/SizechartBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizechartResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Sizechart not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "sizechart"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Sizechart",
                  "description": "Deletes a Sizechart",
                  "operationId": "deleteSizechart",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Sizechart not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "sizechart"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Sizechart to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/sizechart\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Sizechart",
                  "description": "Added new Links for Sizechart `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksSizechart",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksSizechartBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksSizechartResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Sizechart to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "sizechart"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Sizechart",
                  "description": "Returns a single Links for a Sizechart `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksSizechart",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksSizechartResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Sizechart not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Sizechart to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "sizechart"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Sizechart",
                  "description": "Updates Links for a Sizechart `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksSizechart",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksSizechartBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksSizechartResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Sizechart not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Sizechart to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "sizechart"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/sizechart\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Sizechart",
                  "description": "Updates specific Links for a Sizechart `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksSizechart",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksSizechartBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksSizechartResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Sizechart not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Sizechart to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "sizechart"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Sizechart",
                  "description": "Delete Links for a Sizechart `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksSizechart",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Sizechart not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Sizechart to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "sizechart"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/sizegroup": {
              "get": {
                  "summary": "Get collection of SizegroupEntities",
                  "description": "Returns a collection of SizegroupEntities",
                  "operationId": "overviewSizegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizegroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "sizegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Sizegroup",
                  "description": "Added a new Sizegroup",
                  "operationId": "createSizegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/SizegroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizegroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "sizegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/sizegroup\/{id}": {
              "get": {
                  "summary": "Find Sizegroup by ID",
                  "description": "Returns a single Sizegroup",
                  "operationId": "readSizegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Sizegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Sizegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "sizegroup"
                  ]
              },
              "put": {
                  "summary": "Updates Sizegroup",
                  "description": "Updates Sizegroup",
                  "operationId": "updateSizegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/SizegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Sizegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "sizegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Sizegroup",
                  "description": "Updates specific value for Sizegroup",
                  "operationId": "patchSizegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/SizegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SizegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Sizegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "sizegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Sizegroup",
                  "description": "Deletes a Sizegroup",
                  "operationId": "deleteSizegroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Sizegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "sizegroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Sizegroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/sizegroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Sizegroup",
                  "description": "Added new Links for Sizegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksSizegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksSizegroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksSizegroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Sizegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "sizegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Sizegroup",
                  "description": "Returns a single Links for a Sizegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksSizegroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksSizegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Sizegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Sizegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "sizegroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Sizegroup",
                  "description": "Updates Links for a Sizegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksSizegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksSizegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksSizegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Sizegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Sizegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "sizegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/sizegroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Sizegroup",
                  "description": "Updates specific Links for a Sizegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksSizegroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksSizegroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksSizegroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Sizegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Sizegroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "sizegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Sizegroup",
                  "description": "Delete Links for a Sizegroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksSizegroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Sizegroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Sizegroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "sizegroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/staticdocument": {
              "get": {
                  "summary": "Get collection of StaticdocumentEntities",
                  "description": "Returns a collection of StaticdocumentEntities",
                  "operationId": "overviewStaticdocument",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StaticdocumentEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "staticdocument"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Staticdocument",
                  "description": "Added a new Staticdocument",
                  "operationId": "createStaticdocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/StaticdocumentBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StaticdocumentResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "staticdocument"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/staticdocument\/{id}": {
              "get": {
                  "summary": "Find Staticdocument by ID",
                  "description": "Returns a single Staticdocument",
                  "operationId": "readStaticdocument",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StaticdocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Staticdocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Staticdocument to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "staticdocument"
                  ]
              },
              "put": {
                  "summary": "Updates Staticdocument",
                  "description": "Updates Staticdocument",
                  "operationId": "updateStaticdocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/StaticdocumentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StaticdocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Staticdocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "staticdocument"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Staticdocument",
                  "description": "Updates specific value for Staticdocument",
                  "operationId": "patchStaticdocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/StaticdocumentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StaticdocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Staticdocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "staticdocument"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Staticdocument",
                  "description": "Deletes a Staticdocument",
                  "operationId": "deleteStaticdocument",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Staticdocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "staticdocument"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Staticdocument to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/staticdocument\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Staticdocument",
                  "description": "Added new Links for Staticdocument `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksStaticdocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksStaticdocumentBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksStaticdocumentResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Staticdocument to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "staticdocument"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Staticdocument",
                  "description": "Returns a single Links for a Staticdocument `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksStaticdocument",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksStaticdocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Staticdocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Staticdocument to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "staticdocument"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Staticdocument",
                  "description": "Updates Links for a Staticdocument `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksStaticdocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksStaticdocumentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksStaticdocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Staticdocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Staticdocument to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "staticdocument"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/staticdocument\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Staticdocument",
                  "description": "Updates specific Links for a Staticdocument `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksStaticdocument",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksStaticdocumentBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksStaticdocumentResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Staticdocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Staticdocument to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "staticdocument"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Staticdocument",
                  "description": "Delete Links for a Staticdocument `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksStaticdocument",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Staticdocument not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Staticdocument to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "staticdocument"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/step": {
              "get": {
                  "summary": "Get collection of StepEntities",
                  "description": "Returns a collection of StepEntities",
                  "operationId": "overviewStep",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StepEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "step"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Step",
                  "description": "Added a new Step",
                  "operationId": "createStep",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/StepBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StepResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "step"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/step\/{id}": {
              "get": {
                  "summary": "Find Step by ID",
                  "description": "Returns a single Step",
                  "operationId": "readStep",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StepResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Step not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Step to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "step"
                  ]
              },
              "put": {
                  "summary": "Updates Step",
                  "description": "Updates Step",
                  "operationId": "updateStep",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/StepBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StepResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Step not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "step"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Step",
                  "description": "Updates specific value for Step",
                  "operationId": "patchStep",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/StepBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StepResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Step not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "step"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Step",
                  "description": "Deletes a Step",
                  "operationId": "deleteStep",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Step not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "step"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Step to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/step\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Step",
                  "description": "Added new Links for Step `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksStep",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksStepBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksStepResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Step to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "step"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Step",
                  "description": "Returns a single Links for a Step `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksStep",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksStepResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Step not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Step to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "step"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Step",
                  "description": "Updates Links for a Step `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksStep",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksStepBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksStepResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Step not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Step to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "step"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/step\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Step",
                  "description": "Updates specific Links for a Step `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksStep",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksStepBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksStepResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Step not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Step to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "step"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Step",
                  "description": "Delete Links for a Step `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksStep",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Step not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Step to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "step"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/stepgroup": {
              "get": {
                  "summary": "Get collection of StepgroupEntities",
                  "description": "Returns a collection of StepgroupEntities",
                  "operationId": "overviewStepgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StepgroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "stepgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Stepgroup",
                  "description": "Added a new Stepgroup",
                  "operationId": "createStepgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/StepgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StepgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "stepgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/stepgroup\/{id}": {
              "get": {
                  "summary": "Find Stepgroup by ID",
                  "description": "Returns a single Stepgroup",
                  "operationId": "readStepgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StepgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Stepgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Stepgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "stepgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Stepgroup",
                  "description": "Updates Stepgroup",
                  "operationId": "updateStepgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/StepgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StepgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Stepgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "stepgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Stepgroup",
                  "description": "Updates specific value for Stepgroup",
                  "operationId": "patchStepgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/StepgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/StepgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Stepgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "stepgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Stepgroup",
                  "description": "Deletes a Stepgroup",
                  "operationId": "deleteStepgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Stepgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "stepgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Stepgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/stepgroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Stepgroup",
                  "description": "Added new Links for Stepgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksStepgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksStepgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksStepgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Stepgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "stepgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Stepgroup",
                  "description": "Returns a single Links for a Stepgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksStepgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksStepgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Stepgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Stepgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "stepgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Stepgroup",
                  "description": "Updates Links for a Stepgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksStepgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksStepgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksStepgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Stepgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Stepgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "stepgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/stepgroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Stepgroup",
                  "description": "Updates specific Links for a Stepgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksStepgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksStepgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksStepgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Stepgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Stepgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "stepgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Stepgroup",
                  "description": "Delete Links for a Stepgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksStepgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Stepgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Stepgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "stepgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/subscription": {
              "get": {
                  "summary": "Get collection of SubscriptionEntities",
                  "description": "Returns a collection of SubscriptionEntities",
                  "operationId": "overviewSubscription",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SubscriptionEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "subscription"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Subscription",
                  "description": "Added a new Subscription",
                  "operationId": "createSubscription",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/SubscriptionBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SubscriptionResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "subscription"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/subscription\/{id}": {
              "get": {
                  "summary": "Find Subscription by ID",
                  "description": "Returns a single Subscription",
                  "operationId": "readSubscription",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SubscriptionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Subscription not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Subscription to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "subscription"
                  ]
              },
              "put": {
                  "summary": "Updates Subscription",
                  "description": "Updates Subscription",
                  "operationId": "updateSubscription",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/SubscriptionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SubscriptionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Subscription not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "subscription"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Subscription",
                  "description": "Updates specific value for Subscription",
                  "operationId": "patchSubscription",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/SubscriptionBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/SubscriptionResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Subscription not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "subscription"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Subscription",
                  "description": "Deletes a Subscription",
                  "operationId": "deleteSubscription",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Subscription not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "subscription"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Subscription to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/textblock": {
              "get": {
                  "summary": "Get collection of TextblockEntities",
                  "description": "Returns a collection of TextblockEntities",
                  "operationId": "overviewTextblock",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/TextblockEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "textblock"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Textblock",
                  "description": "Added a new Textblock",
                  "operationId": "createTextblock",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/TextblockBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/TextblockResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "textblock"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/textblock\/{id}": {
              "get": {
                  "summary": "Find Textblock by ID",
                  "description": "Returns a single Textblock",
                  "operationId": "readTextblock",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/TextblockResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Textblock not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Textblock to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "textblock"
                  ]
              },
              "put": {
                  "summary": "Updates Textblock",
                  "description": "Updates Textblock",
                  "operationId": "updateTextblock",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/TextblockBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/TextblockResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Textblock not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "textblock"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Textblock",
                  "description": "Updates specific value for Textblock",
                  "operationId": "patchTextblock",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/TextblockBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/TextblockResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Textblock not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "textblock"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Textblock",
                  "description": "Deletes a Textblock",
                  "operationId": "deleteTextblock",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Textblock not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "textblock"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Textblock to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/textblock\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Textblock",
                  "description": "Added new Links for Textblock `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksTextblock",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksTextblockBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksTextblockResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Textblock to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "textblock"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Textblock",
                  "description": "Returns a single Links for a Textblock `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksTextblock",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksTextblockResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Textblock not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Textblock to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "textblock"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Textblock",
                  "description": "Updates Links for a Textblock `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksTextblock",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksTextblockBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksTextblockResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Textblock not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Textblock to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "textblock"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/textblock\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Textblock",
                  "description": "Updates specific Links for a Textblock `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksTextblock",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksTextblockBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksTextblockResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Textblock not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Textblock to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "textblock"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Textblock",
                  "description": "Delete Links for a Textblock `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksTextblock",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Textblock not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Textblock to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "textblock"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/textblockfolder": {
              "get": {
                  "summary": "Get collection of TextblockFolderEntities",
                  "description": "Returns a collection of TextblockFolderEntities",
                  "operationId": "overviewTextblockFolder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/TextblockFolderEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "textblockfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new TextblockFolder",
                  "description": "Added a new TextblockFolder",
                  "operationId": "createTextblockFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/TextblockFolderBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/TextblockFolderResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "textblockfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/textblockfolder\/{id}": {
              "get": {
                  "summary": "Find TextblockFolder by ID",
                  "description": "Returns a single TextblockFolder",
                  "operationId": "readTextblockFolder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/TextblockFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "TextblockFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of TextblockFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "textblockfolder"
                  ]
              },
              "put": {
                  "summary": "Updates TextblockFolder",
                  "description": "Updates TextblockFolder",
                  "operationId": "updateTextblockFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/TextblockFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/TextblockFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "TextblockFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "textblockfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for TextblockFolder",
                  "description": "Updates specific value for TextblockFolder",
                  "operationId": "patchTextblockFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/TextblockFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/TextblockFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "TextblockFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "textblockfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a TextblockFolder",
                  "description": "Deletes a TextblockFolder",
                  "operationId": "deleteTextblockFolder",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "TextblockFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "textblockfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of TextblockFolder to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/textblockfolder\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for TextblockFolder",
                  "description": "Added new Links for TextblockFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksTextblockFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksTextblockFolderBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksTextblockFolderResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of TextblockFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "textblockfolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a TextblockFolder",
                  "description": "Returns a single Links for a TextblockFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksTextblockFolder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksTextblockFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "TextblockFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for TextblockFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "textblockfolder"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a TextblockFolder",
                  "description": "Updates Links for a TextblockFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksTextblockFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksTextblockFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksTextblockFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "TextblockFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of TextblockFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "textblockfolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/textblockfolder\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a TextblockFolder",
                  "description": "Updates specific Links for a TextblockFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksTextblockFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksTextblockFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksTextblockFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "TextblockFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of TextblockFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "textblockfolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a TextblockFolder",
                  "description": "Delete Links for a TextblockFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksTextblockFolder",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "TextblockFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for TextblockFolder to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "textblockfolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/upload": {
              "get": {
                  "summary": "Get collection of UploadEntities",
                  "description": "Returns a collection of UploadEntities",
                  "operationId": "overviewUpload",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UploadEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "upload"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Upload",
                  "description": "Added a new Upload",
                  "operationId": "createUpload",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UploadBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UploadResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "upload"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/upload\/{id}": {
              "get": {
                  "summary": "Find Upload by ID",
                  "description": "Returns a single Upload",
                  "operationId": "readUpload",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UploadResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Upload not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Upload to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "upload"
                  ]
              },
              "put": {
                  "summary": "Updates Upload",
                  "description": "Updates Upload",
                  "operationId": "updateUpload",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UploadBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UploadResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Upload not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "upload"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Upload",
                  "description": "Updates specific value for Upload",
                  "operationId": "patchUpload",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UploadBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UploadResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Upload not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "upload"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Upload",
                  "description": "Deletes a Upload",
                  "operationId": "deleteUpload",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Upload not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "upload"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Upload to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/upload\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Upload",
                  "description": "Added new Links for Upload `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksUpload",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUploadBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUploadResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Upload to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "upload"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Upload",
                  "description": "Returns a single Links for a Upload `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksUpload",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUploadResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Upload not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Upload to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "upload"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Upload",
                  "description": "Updates Links for a Upload `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksUpload",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUploadBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUploadResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Upload not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Upload to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "upload"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/upload\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Upload",
                  "description": "Updates specific Links for a Upload `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksUpload",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUploadBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUploadResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Upload not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Upload to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "upload"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Upload",
                  "description": "Delete Links for a Upload `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksUpload",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Upload not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Upload to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "upload"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/uploadfolder": {
              "get": {
                  "summary": "Get collection of UploadFolderEntities",
                  "description": "Returns a collection of UploadFolderEntities",
                  "operationId": "overviewUploadFolder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UploadFolderEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "uploadfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new UploadFolder",
                  "description": "Added a new UploadFolder",
                  "operationId": "createUploadFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UploadFolderBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UploadFolderResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "uploadfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/uploadfolder\/{id}": {
              "get": {
                  "summary": "Find UploadFolder by ID",
                  "description": "Returns a single UploadFolder",
                  "operationId": "readUploadFolder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UploadFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "UploadFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of UploadFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "uploadfolder"
                  ]
              },
              "put": {
                  "summary": "Updates UploadFolder",
                  "description": "Updates UploadFolder",
                  "operationId": "updateUploadFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UploadFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UploadFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "UploadFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "uploadfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for UploadFolder",
                  "description": "Updates specific value for UploadFolder",
                  "operationId": "patchUploadFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UploadFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UploadFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "UploadFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "uploadfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a UploadFolder",
                  "description": "Deletes a UploadFolder",
                  "operationId": "deleteUploadFolder",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "UploadFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "uploadfolder"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of UploadFolder to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/uploadfolder\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for UploadFolder",
                  "description": "Added new Links for UploadFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksUploadFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUploadFolderBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUploadFolderResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of UploadFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "uploadfolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a UploadFolder",
                  "description": "Returns a single Links for a UploadFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksUploadFolder",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUploadFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "UploadFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for UploadFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "uploadfolder"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a UploadFolder",
                  "description": "Updates Links for a UploadFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksUploadFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUploadFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUploadFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "UploadFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of UploadFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "uploadfolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/uploadfolder\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a UploadFolder",
                  "description": "Updates specific Links for a UploadFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksUploadFolder",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUploadFolderBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUploadFolderResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "UploadFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of UploadFolder to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "uploadfolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a UploadFolder",
                  "description": "Delete Links for a UploadFolder `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksUploadFolder",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "UploadFolder not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for UploadFolder to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "uploadfolder"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/user": {
              "get": {
                  "summary": "Get collection of UserEntities",
                  "description": "Returns a collection of UserEntities",
                  "operationId": "overviewUser",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UserEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "user"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new User",
                  "description": "Added a new User",
                  "operationId": "createUser",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UserBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UserResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "user"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/user\/{id}": {
              "get": {
                  "summary": "Find User by ID",
                  "description": "Returns a single User",
                  "operationId": "readUser",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UserResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "User not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of User to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "user"
                  ]
              },
              "put": {
                  "summary": "Updates User",
                  "description": "Updates User",
                  "operationId": "updateUser",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UserBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UserResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "User not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "user"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for User",
                  "description": "Updates specific value for User",
                  "operationId": "patchUser",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UserBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UserResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "User not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "user"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a User",
                  "description": "Deletes a User",
                  "operationId": "deleteUser",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "User not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "user"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of User to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/user\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for User",
                  "description": "Added new Links for User `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksUser",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUserBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUserResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of User to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "user"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a User",
                  "description": "Returns a single Links for a User `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksUser",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUserResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "User not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for User to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "user"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a User",
                  "description": "Updates Links for a User `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksUser",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUserBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUserResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "User not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of User to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "user"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/user\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a User",
                  "description": "Updates specific Links for a User `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksUser",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUserBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUserResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "User not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of User to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "user"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a User",
                  "description": "Delete Links for a User `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksUser",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "User not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for User to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "user"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/user\/{id}\/usergroups": {
              "get": {
                  "summary": "Get Usergroups for a User",
                  "description": "Returns a single Usergroups for a User `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readUsergroupsUser",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UsergroupsUserResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "User not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Usergroups for User to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "user"
                  ]
              }
          },
          "\/usergroup": {
              "get": {
                  "summary": "Get collection of UsergroupEntities",
                  "description": "Returns a collection of UsergroupEntities",
                  "operationId": "overviewUsergroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UsergroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "usergroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Usergroup",
                  "description": "Added a new Usergroup",
                  "operationId": "createUsergroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UsergroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UsergroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "usergroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/usergroup\/{id}": {
              "get": {
                  "summary": "Find Usergroup by ID",
                  "description": "Returns a single Usergroup",
                  "operationId": "readUsergroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UsergroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Usergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Usergroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "usergroup"
                  ]
              },
              "put": {
                  "summary": "Updates Usergroup",
                  "description": "Updates Usergroup",
                  "operationId": "updateUsergroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UsergroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UsergroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Usergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "usergroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Usergroup",
                  "description": "Updates specific value for Usergroup",
                  "operationId": "patchUsergroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UsergroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UsergroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Usergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "usergroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Usergroup",
                  "description": "Deletes a Usergroup",
                  "operationId": "deleteUsergroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Usergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "usergroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Usergroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/usergroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Usergroup",
                  "description": "Added new Links for Usergroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksUsergroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUsergroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUsergroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Usergroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "usergroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Usergroup",
                  "description": "Returns a single Links for a Usergroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksUsergroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUsergroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Usergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Usergroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "usergroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Usergroup",
                  "description": "Updates Links for a Usergroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksUsergroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUsergroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUsergroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Usergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Usergroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "usergroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/usergroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Usergroup",
                  "description": "Updates specific Links for a Usergroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksUsergroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUsergroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUsergroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Usergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Usergroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "usergroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Usergroup",
                  "description": "Delete Links for a Usergroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksUsergroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Usergroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Usergroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "usergroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/usp": {
              "get": {
                  "summary": "Get collection of UspEntities",
                  "description": "Returns a collection of UspEntities",
                  "operationId": "overviewUsp",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UspEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "usp"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Usp",
                  "description": "Added a new Usp",
                  "operationId": "createUsp",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UspBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UspResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "usp"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/usp\/{id}": {
              "get": {
                  "summary": "Find Usp by ID",
                  "description": "Returns a single Usp",
                  "operationId": "readUsp",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UspResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Usp not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Usp to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "usp"
                  ]
              },
              "put": {
                  "summary": "Updates Usp",
                  "description": "Updates Usp",
                  "operationId": "updateUsp",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UspBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UspResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Usp not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "usp"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Usp",
                  "description": "Updates specific value for Usp",
                  "operationId": "patchUsp",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UspBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UspResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Usp not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "usp"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Usp",
                  "description": "Deletes a Usp",
                  "operationId": "deleteUsp",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Usp not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "usp"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Usp to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/usp\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Usp",
                  "description": "Added new Links for Usp `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksUsp",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUspBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUspResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Usp to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "usp"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Usp",
                  "description": "Returns a single Links for a Usp `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksUsp",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUspResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Usp not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Usp to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "usp"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Usp",
                  "description": "Updates Links for a Usp `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksUsp",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUspBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUspResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Usp not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Usp to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "usp"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/usp\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Usp",
                  "description": "Updates specific Links for a Usp `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksUsp",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUspBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUspResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Usp not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Usp to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "usp"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Usp",
                  "description": "Delete Links for a Usp `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksUsp",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Usp not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Usp to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "usp"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/uspgroup": {
              "get": {
                  "summary": "Get collection of UspgroupEntities",
                  "description": "Returns a collection of UspgroupEntities",
                  "operationId": "overviewUspgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UspgroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "uspgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Uspgroup",
                  "description": "Added a new Uspgroup",
                  "operationId": "createUspgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UspgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UspgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "uspgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/uspgroup\/{id}": {
              "get": {
                  "summary": "Find Uspgroup by ID",
                  "description": "Returns a single Uspgroup",
                  "operationId": "readUspgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UspgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Uspgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Uspgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "uspgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Uspgroup",
                  "description": "Updates Uspgroup",
                  "operationId": "updateUspgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UspgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UspgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Uspgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "uspgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Uspgroup",
                  "description": "Updates specific value for Uspgroup",
                  "operationId": "patchUspgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/UspgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/UspgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Uspgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "uspgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Uspgroup",
                  "description": "Deletes a Uspgroup",
                  "operationId": "deleteUspgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Uspgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "uspgroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Uspgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/uspgroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Uspgroup",
                  "description": "Added new Links for Uspgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksUspgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUspgroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUspgroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Uspgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "uspgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Uspgroup",
                  "description": "Returns a single Links for a Uspgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksUspgroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUspgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Uspgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Uspgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "uspgroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Uspgroup",
                  "description": "Updates Links for a Uspgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksUspgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUspgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUspgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Uspgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Uspgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "uspgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/uspgroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Uspgroup",
                  "description": "Updates specific Links for a Uspgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksUspgroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksUspgroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksUspgroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Uspgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Uspgroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "uspgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Uspgroup",
                  "description": "Delete Links for a Uspgroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksUspgroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Uspgroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Uspgroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "uspgroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vacancy": {
              "get": {
                  "summary": "Get collection of VacancyEntities",
                  "description": "Returns a collection of VacancyEntities",
                  "operationId": "overviewVacancy",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VacancyEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vacancy"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Vacancy",
                  "description": "Added a new Vacancy",
                  "operationId": "createVacancy",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VacancyBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VacancyResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vacancy"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vacancy\/{id}": {
              "get": {
                  "summary": "Find Vacancy by ID",
                  "description": "Returns a single Vacancy",
                  "operationId": "readVacancy",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VacancyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancy not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vacancy to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancy"
                  ]
              },
              "put": {
                  "summary": "Updates Vacancy",
                  "description": "Updates Vacancy",
                  "operationId": "updateVacancy",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VacancyBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VacancyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancy not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vacancy"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Vacancy",
                  "description": "Updates specific value for Vacancy",
                  "operationId": "patchVacancy",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VacancyBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VacancyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancy not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vacancy"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Vacancy",
                  "description": "Deletes a Vacancy",
                  "operationId": "deleteVacancy",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Vacancy not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vacancy"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vacancy to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vacancy\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Vacancy",
                  "description": "Added new Links for Vacancy `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksVacancy",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVacancyBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVacancyResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vacancy to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancy"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Vacancy",
                  "description": "Returns a single Links for a Vacancy `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksVacancy",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVacancyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancy not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Vacancy to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancy"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Vacancy",
                  "description": "Updates Links for a Vacancy `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksVacancy",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVacancyBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVacancyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancy not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vacancy to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancy"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vacancy\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Vacancy",
                  "description": "Updates specific Links for a Vacancy `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksVacancy",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVacancyBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVacancyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancy not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vacancy to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancy"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Vacancy",
                  "description": "Delete Links for a Vacancy `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksVacancy",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Vacancy not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Vacancy to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancy"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vacancy\/{id}\/images": {
              "post": {
                  "summary": "Add new Images for Vacancy",
                  "description": "Added new Images for Vacancy `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createImagesVacancy",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesVacancyBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesVacancyResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vacancy to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancy"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Images for a Vacancy",
                  "description": "Returns a single Images for a Vacancy `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readImagesVacancy",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesVacancyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancy not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Vacancy to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancy"
                  ]
              },
              "put": {
                  "summary": "Updates Images for a Vacancy",
                  "description": "Updates Images for a Vacancy `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateImagesVacancy",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesVacancyBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesVacancyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancy not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vacancy to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancy"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vacancy\/{id}\/images\/{imagesId}": {
              "patch": {
                  "summary": "Updates specific Images for a Vacancy",
                  "description": "Updates specific Images for a Vacancy `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchImagesVacancy",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesVacancyBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesVacancyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancy not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vacancy to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancy"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Images for a Vacancy",
                  "description": "Delete Images for a Vacancy `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteImagesVacancy",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Vacancy not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Vacancy to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancy"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vacancy\/{id}\/pagebuilder": {
              "get": {
                  "summary": "Get Pagebuilder for a Vacancy",
                  "description": "Returns a single Pagebuilder for a Vacancy `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readPagebuilderVacancy",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/PagebuilderVacancyResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancy not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Pagebuilder for Vacancy to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancy"
                  ]
              }
          },
          "\/vacancygroup": {
              "get": {
                  "summary": "Get collection of VacancygroupEntities",
                  "description": "Returns a collection of VacancygroupEntities",
                  "operationId": "overviewVacancygroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VacancygroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vacancygroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Vacancygroup",
                  "description": "Added a new Vacancygroup",
                  "operationId": "createVacancygroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VacancygroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VacancygroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vacancygroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vacancygroup\/{id}": {
              "get": {
                  "summary": "Find Vacancygroup by ID",
                  "description": "Returns a single Vacancygroup",
                  "operationId": "readVacancygroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VacancygroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vacancygroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancygroup"
                  ]
              },
              "put": {
                  "summary": "Updates Vacancygroup",
                  "description": "Updates Vacancygroup",
                  "operationId": "updateVacancygroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VacancygroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VacancygroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vacancygroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Vacancygroup",
                  "description": "Updates specific value for Vacancygroup",
                  "operationId": "patchVacancygroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VacancygroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VacancygroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vacancygroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Vacancygroup",
                  "description": "Deletes a Vacancygroup",
                  "operationId": "deleteVacancygroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Vacancygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vacancygroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vacancygroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vacancygroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Vacancygroup",
                  "description": "Added new Links for Vacancygroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksVacancygroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVacancygroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVacancygroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vacancygroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancygroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Vacancygroup",
                  "description": "Returns a single Links for a Vacancygroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksVacancygroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVacancygroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Vacancygroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancygroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Vacancygroup",
                  "description": "Updates Links for a Vacancygroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksVacancygroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVacancygroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVacancygroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vacancygroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancygroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vacancygroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Vacancygroup",
                  "description": "Updates specific Links for a Vacancygroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksVacancygroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVacancygroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVacancygroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vacancygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vacancygroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancygroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Vacancygroup",
                  "description": "Delete Links for a Vacancygroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksVacancygroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Vacancygroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Vacancygroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vacancygroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vat": {
              "get": {
                  "summary": "Get collection of VatEntities",
                  "description": "Returns a collection of VatEntities",
                  "operationId": "overviewVat",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VatEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vat"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Vat",
                  "description": "Added a new Vat",
                  "operationId": "createVat",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VatBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VatResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vat"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vat\/{id}": {
              "get": {
                  "summary": "Find Vat by ID",
                  "description": "Returns a single Vat",
                  "operationId": "readVat",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VatResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vat not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vat to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vat"
                  ]
              },
              "put": {
                  "summary": "Updates Vat",
                  "description": "Updates Vat",
                  "operationId": "updateVat",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VatBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VatResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vat not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vat"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Vat",
                  "description": "Updates specific value for Vat",
                  "operationId": "patchVat",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VatBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VatResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vat not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vat"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Vat",
                  "description": "Deletes a Vat",
                  "operationId": "deleteVat",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Vat not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "vat"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vat to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vat\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Vat",
                  "description": "Added new Links for Vat `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksVat",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVatBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVatResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vat to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vat"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Vat",
                  "description": "Returns a single Links for a Vat `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksVat",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVatResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vat not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Vat to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vat"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Vat",
                  "description": "Updates Links for a Vat `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksVat",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVatBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVatResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vat not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vat to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vat"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/vat\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Vat",
                  "description": "Updates specific Links for a Vat `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksVat",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVatBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVatResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Vat not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Vat to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vat"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Vat",
                  "description": "Delete Links for a Vat `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksVat",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Vat not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Vat to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "vat"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/video": {
              "get": {
                  "summary": "Get collection of VideoEntities",
                  "description": "Returns a collection of VideoEntities",
                  "operationId": "overviewVideo",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VideoEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "video"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Video",
                  "description": "Added a new Video",
                  "operationId": "createVideo",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VideoBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VideoResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "video"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/video\/{id}": {
              "get": {
                  "summary": "Find Video by ID",
                  "description": "Returns a single Video",
                  "operationId": "readVideo",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VideoResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Video not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Video to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "video"
                  ]
              },
              "put": {
                  "summary": "Updates Video",
                  "description": "Updates Video",
                  "operationId": "updateVideo",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VideoBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VideoResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Video not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "video"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Video",
                  "description": "Updates specific value for Video",
                  "operationId": "patchVideo",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VideoBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VideoResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Video not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "video"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Video",
                  "description": "Deletes a Video",
                  "operationId": "deleteVideo",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Video not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "video"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Video to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/video\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Video",
                  "description": "Added new Links for Video `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksVideo",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVideoBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVideoResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Video to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "video"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Video",
                  "description": "Returns a single Links for a Video `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksVideo",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVideoResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Video not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Video to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "video"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Video",
                  "description": "Updates Links for a Video `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksVideo",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVideoBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVideoResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Video not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Video to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "video"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/video\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Video",
                  "description": "Updates specific Links for a Video `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksVideo",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVideoBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVideoResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Video not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Video to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "video"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Video",
                  "description": "Delete Links for a Video `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksVideo",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Video not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Video to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "video"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/video\/{id}\/images": {
              "post": {
                  "summary": "Add new Images for Video",
                  "description": "Added new Images for Video `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createImagesVideo",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesVideoBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesVideoResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Video to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "video"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Images for a Video",
                  "description": "Returns a single Images for a Video `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readImagesVideo",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesVideoResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Video not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Video to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "video"
                  ]
              },
              "put": {
                  "summary": "Updates Images for a Video",
                  "description": "Updates Images for a Video `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateImagesVideo",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesVideoBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesVideoResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Video not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Video to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "video"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/video\/{id}\/images\/{imagesId}": {
              "patch": {
                  "summary": "Updates specific Images for a Video",
                  "description": "Updates specific Images for a Video `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchImagesVideo",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/ImagesVideoBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/ImagesVideoResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Video not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Video to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "video"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Images for a Video",
                  "description": "Delete Images for a Video `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteImagesVideo",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Video not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Images for Video to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "video"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/videogroup": {
              "get": {
                  "summary": "Get collection of VideogroupEntities",
                  "description": "Returns a collection of VideogroupEntities",
                  "operationId": "overviewVideogroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VideogroupEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "videogroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Videogroup",
                  "description": "Added a new Videogroup",
                  "operationId": "createVideogroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VideogroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VideogroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "videogroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/videogroup\/{id}": {
              "get": {
                  "summary": "Find Videogroup by ID",
                  "description": "Returns a single Videogroup",
                  "operationId": "readVideogroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VideogroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Videogroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Videogroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "videogroup"
                  ]
              },
              "put": {
                  "summary": "Updates Videogroup",
                  "description": "Updates Videogroup",
                  "operationId": "updateVideogroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VideogroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VideogroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Videogroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "videogroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Videogroup",
                  "description": "Updates specific value for Videogroup",
                  "operationId": "patchVideogroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VideogroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VideogroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Videogroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "videogroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Videogroup",
                  "description": "Deletes a Videogroup",
                  "operationId": "deleteVideogroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Videogroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "videogroup"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Videogroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/videogroup\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Videogroup",
                  "description": "Added new Links for Videogroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksVideogroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVideogroupBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVideogroupResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Videogroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "videogroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Videogroup",
                  "description": "Returns a single Links for a Videogroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksVideogroup",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVideogroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Videogroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Videogroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "videogroup"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Videogroup",
                  "description": "Updates Links for a Videogroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksVideogroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVideogroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVideogroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Videogroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Videogroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "videogroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/videogroup\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Videogroup",
                  "description": "Updates specific Links for a Videogroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksVideogroup",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVideogroupBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVideogroupResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Videogroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Videogroup to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "videogroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Videogroup",
                  "description": "Delete Links for a Videogroup `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksVideogroup",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Videogroup not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Videogroup to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "videogroup"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/voucher": {
              "get": {
                  "summary": "Get collection of VoucherEntities",
                  "description": "Returns a collection of VoucherEntities",
                  "operationId": "overviewVoucher",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VoucherEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "voucher"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Voucher",
                  "description": "Added a new Voucher",
                  "operationId": "createVoucher",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VoucherBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VoucherResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "voucher"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/voucher\/{id}": {
              "get": {
                  "summary": "Find Voucher by ID",
                  "description": "Returns a single Voucher",
                  "operationId": "readVoucher",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VoucherResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Voucher not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Voucher to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "voucher"
                  ]
              },
              "put": {
                  "summary": "Updates Voucher",
                  "description": "Updates Voucher",
                  "operationId": "updateVoucher",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VoucherBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VoucherResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Voucher not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "voucher"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Voucher",
                  "description": "Updates specific value for Voucher",
                  "operationId": "patchVoucher",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/VoucherBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/VoucherResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Voucher not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "voucher"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Voucher",
                  "description": "Deletes a Voucher",
                  "operationId": "deleteVoucher",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Voucher not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "voucher"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Voucher to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/voucher\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Voucher",
                  "description": "Added new Links for Voucher `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksVoucher",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVoucherBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVoucherResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Voucher to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "voucher"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Voucher",
                  "description": "Returns a single Links for a Voucher `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksVoucher",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVoucherResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Voucher not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Voucher to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "voucher"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Voucher",
                  "description": "Updates Links for a Voucher `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksVoucher",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVoucherBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVoucherResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Voucher not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Voucher to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "voucher"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/voucher\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Voucher",
                  "description": "Updates specific Links for a Voucher `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksVoucher",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksVoucherBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksVoucherResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Voucher not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Voucher to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "voucher"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Voucher",
                  "description": "Delete Links for a Voucher `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksVoucher",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Voucher not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Voucher to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "voucher"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/warehouse": {
              "get": {
                  "summary": "Get collection of WarehouseEntities",
                  "description": "Returns a collection of WarehouseEntities",
                  "operationId": "overviewWarehouse",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/WarehouseEntities"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "warehouse"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "post": {
                  "summary": "Add a new Warehouse",
                  "description": "Added a new Warehouse",
                  "operationId": "createWarehouse",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/WarehouseBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/WarehouseResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "warehouse"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/warehouse\/{id}": {
              "get": {
                  "summary": "Find Warehouse by ID",
                  "description": "Returns a single Warehouse",
                  "operationId": "readWarehouse",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/WarehouseResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Warehouse not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Warehouse to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "warehouse"
                  ]
              },
              "put": {
                  "summary": "Updates Warehouse",
                  "description": "Updates Warehouse",
                  "operationId": "updateWarehouse",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/WarehouseBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/WarehouseResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Warehouse not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "warehouse"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "patch": {
                  "summary": "Updates specific value for Warehouse",
                  "description": "Updates specific value for Warehouse",
                  "operationId": "patchWarehouse",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/WarehouseBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/WarehouseResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Warehouse not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "warehouse"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Deletes a Warehouse",
                  "description": "Deletes a Warehouse",
                  "operationId": "deleteWarehouse",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Warehouse not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "tags": [
                      "warehouse"
                  ],
                  "parameters": [
                      {
                          "name": "authenticationmethod",
                          "in": "header",
                          "description": "Header to specify the used authentication method",
                          "required": true,
                          "default": "JWT",
                          "schema": {
                              "type": "string"
                          }
                      },
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Warehouse to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/warehouse\/{id}\/links": {
              "post": {
                  "summary": "Add new Links for Warehouse",
                  "description": "Added new Links for Warehouse `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "createLinksWarehouse",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksWarehouseBody"
                  },
                  "responses": {
                      "201": {
                          "description": "Successfully created",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksWarehouseResponse"
                                  }
                              }
                          }
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Warehouse to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "warehouse"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "get": {
                  "summary": "Get Links for a Warehouse",
                  "description": "Returns a single Links for a Warehouse `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "readLinksWarehouse",
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksWarehouseResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Warehouse not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Warehouse to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "warehouse"
                  ]
              },
              "put": {
                  "summary": "Updates Links for a Warehouse",
                  "description": "Updates Links for a Warehouse `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "updateLinksWarehouse",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksWarehouseBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksWarehouseResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Warehouse not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Warehouse to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "warehouse"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          },
          "\/warehouse\/{id}\/links\/{linksId}": {
              "patch": {
                  "summary": "Updates specific Links for a Warehouse",
                  "description": "Updates specific Links for a Warehouse `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "patchLinksWarehouse",
                  "requestBody": {
                      "$ref": "#\/components\/requestBodies\/LinksWarehouseBody"
                  },
                  "responses": {
                      "200": {
                          "description": "Successful operation",
                          "content": {
                              "application\/json": {
                                  "schema": {
                                      "$ref": "#\/components\/schemas\/LinksWarehouseResponse"
                                  }
                              }
                          }
                      },
                      "404": {
                          "description": "Warehouse not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Warehouse to return",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "warehouse"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              },
              "delete": {
                  "summary": "Delete Links for a Warehouse",
                  "description": "Delete Links for a Warehouse `DOCUMENTATION IN DEVELOPMENT`",
                  "operationId": "deleteLinksWarehouse",
                  "responses": {
                      "204": {
                          "description": "Successfully deleted",
                          "content": []
                      },
                      "404": {
                          "description": "Warehouse not found",
                          "content": []
                      },
                      "400": {
                          "$ref": "#\/components\/responses\/400"
                      },
                      "401": {
                          "$ref": "#\/components\/responses\/401"
                      },
                      "403": {
                          "$ref": "#\/components\/responses\/403"
                      },
                      "429": {
                          "$ref": "#\/components\/responses\/429"
                      },
                      "500": {
                          "$ref": "#\/components\/responses\/500"
                      }
                  },
                  "parameters": [
                      {
                          "name": "id",
                          "in": "path",
                          "description": "ID of Links for Warehouse to delete",
                          "required": true,
                          "schema": {
                              "type": "integer",
                              "format": "int32"
                          }
                      }
                  ],
                  "tags": [
                      "warehouse"
                  ],
                  "security": [
                      {
                          "bearerAuth": []
                      }
                  ]
              }
          }
      },
      "components": {
          "schemas": {
              "links": {
                  "type": "object",
                  "properties": {
                      "self": {
                          "type": "object",
                          "properties": {
                              "href": {
                                  "type": "string",
                                  "format": "url"
                              }
                          }
                      }
                  }
              },
              "meta": {
                  "type": "object",
                  "properties": {
                      "self": {
                          "type": "object",
                          "properties": {
                              "timestamp": {
                                  "type": "string",
                                  "format": "datetime"
                              },
                              "verb": {
                                  "type": "string"
                              },
                              "latest-version": {
                                  "type": "string"
                              },
                              "performance": {
                                  "type": "object",
                                  "properties": {
                                      "duration": {
                                          "type": "number",
                                          "format": "float"
                                      },
                                      "start": {
                                          "type": "number",
                                          "format": "float"
                                      },
                                      "end": {
                                          "type": "number",
                                          "format": "float"
                                      }
                                  }
                              }
                          }
                      }
                  }
              },
              "AlertResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Alert"
                      }
                  }
              },
              "Alert": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "revision": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "datetime_from": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "datetime_until": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "action": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "message": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "type",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "AlertEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Alert"
                  }
              },
              "LinksAlertResponse": [],
              "LinksAlert": [],
              "LinksAlertEntities": [],
              "BannerResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Banner"
                      }
                  }
              },
              "Banner": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "default": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "default",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "BannerEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Banner"
                  }
              },
              "LinksBannerResponse": [],
              "LinksBanner": [],
              "LinksBannerEntities": [],
              "ImagesBannerResponse": [],
              "ImagesBanner": [],
              "ImagesBannerEntities": [],
              "BonuspointResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Bonuspoint"
                      }
                  }
              },
              "Bonuspoint": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "creation_date": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "contact_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "loyaltycard_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "checkout_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "points": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "BonuspointEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Bonuspoint"
                  }
              },
              "LinksBonuspointResponse": [],
              "LinksBonuspoint": [],
              "LinksBonuspointEntities": [],
              "BrandResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Brand"
                      }
                  }
              },
              "Brand": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "banner_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "BrandEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Brand"
                  }
              },
              "LinksBrandResponse": [],
              "LinksBrand": [],
              "LinksBrandEntities": [],
              "ImagesBrandResponse": [],
              "ImagesBrand": [],
              "ImagesBrandEntities": [],
              "PagebuilderBrandResponse": [],
              "PagebuilderBrand": [],
              "PagebuilderBrandEntities": [],
              "CalendarResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Calendar"
                      }
                  }
              },
              "Calendar": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "location_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_publish": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_from": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_until": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "repeat_period": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "repeat_every": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "repeat_monthly_type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "time_from": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "time_until": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "location": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "tags": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "repeat_period",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "CalendarEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Calendar"
                  }
              },
              "LinksCalendarResponse": [],
              "LinksCalendar": [],
              "LinksCalendarEntities": [],
              "ImagesCalendarResponse": [],
              "ImagesCalendar": [],
              "ImagesCalendarEntities": [],
              "PagebuilderCalendarResponse": [],
              "PagebuilderCalendar": [],
              "PagebuilderCalendarEntities": [],
              "CalendargroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Calendargroup"
                      }
                  }
              },
              "Calendargroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "revision": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "CalendargroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Calendargroup"
                  }
              },
              "LinksCalendargroupResponse": [],
              "LinksCalendargroup": [],
              "LinksCalendargroupEntities": [],
              "CheckoutResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Checkout"
                      }
                  }
              },
              "Checkout": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "site_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "ordernumber": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "order_type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "order_date": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "order_state": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "currency_iso_code": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "company_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "contact_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "contact_delivery": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "contact_billing": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "country_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "shipping_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_delivery": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_billing": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "gift_service": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "gift_message": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "payment_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "payment_status": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "payment_testmode": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "use_bonuspoints": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "used_bonuspoints": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "comment": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "create_account": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "agree_conditions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subscribe_newsletter": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_paid": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_completed": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_confirmed": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_shipped": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_printed": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_sync": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "myparcel_exported": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kiyoh_receive": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kiyoh_sent": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "vat_incl": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "trackingcode": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "trackingdata": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "shipping_location_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "parcelware_ready": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "parcelware_exported": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "retour_synced": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "ShippingEntity": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "CurrencyEntity": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "PaymentEntity": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "ShippingLocationEntity": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "metadata": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "countryIdByAddress": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "order_type",
                      "gift_service",
                      "use_bonuspoints",
                      "used_bonuspoints",
                      "agree_conditions",
                      "subscribe_newsletter",
                      "is_paid",
                      "is_completed",
                      "is_confirmed",
                      "is_shipped",
                      "is_printed",
                      "is_sync",
                      "myparcel_exported",
                      "kiyoh_receive",
                      "kiyoh_sent",
                      "parcelware_ready",
                      "parcelware_exported",
                      "retour_synced",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "CheckoutEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Checkout"
                  }
              },
              "LinksCheckoutResponse": [],
              "LinksCheckout": [],
              "LinksCheckoutEntities": [],
              "ArticlesCheckoutResponse": [],
              "ArticlesCheckout": [],
              "ArticlesCheckoutEntities": [],
              "ContactsCheckoutResponse": [],
              "ContactsCheckout": [],
              "ContactsCheckoutEntities": [],
              "AddressesCheckoutResponse": [],
              "AddressesCheckout": [],
              "AddressesCheckoutEntities": [],
              "CheckoutSubscriptionResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/CheckoutSubscription"
                      }
                  }
              },
              "CheckoutSubscription": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "checkout_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "interval": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "times": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_start": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "payment_customer_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "payment_mandate_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "payment_subscription_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "interval",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "CheckoutSubscriptionEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/CheckoutSubscription"
                  }
              },
              "LinksCheckoutSubscriptionResponse": [],
              "LinksCheckoutSubscription": [],
              "LinksCheckoutSubscriptionEntities": [],
              "ColorResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Color"
                      }
                  }
              },
              "Color": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "color_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "value": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ColorEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Color"
                  }
              },
              "LinksColorResponse": [],
              "LinksColor": [],
              "LinksColorEntities": [],
              "CompanyResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Company"
                      }
                  }
              },
              "Company": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "companygroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "name": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "notice": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "email": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "phone": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "website": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_delivery": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_visit": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_billing": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "companygroup_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "CompanyEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Company"
                  }
              },
              "LinksCompanyResponse": [],
              "LinksCompany": [],
              "LinksCompanyEntities": [],
              "CompanygroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Companygroup"
                      }
                  }
              },
              "Companygroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "CompanygroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Companygroup"
                  }
              },
              "LinksCompanygroupResponse": [],
              "LinksCompanygroup": [],
              "LinksCompanygroupEntities": [],
              "ConditionResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Condition"
                      }
                  }
              },
              "Condition": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ConditionEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Condition"
                  }
              },
              "LinksConditionResponse": [],
              "LinksCondition": [],
              "LinksConditionEntities": [],
              "ConfigResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Config"
                      }
                  }
              },
              "Config": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "section_label": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subsection_label": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "key_label": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "multiple_languages": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "multiple_sites": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "validate": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "readonly": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "validator_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "options_json": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "options_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "default_value": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "events_json": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "tooltip_information": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "auto_fill": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "type",
                      "multiple_languages",
                      "multiple_sites",
                      "validate",
                      "readonly",
                      "custom",
                      "auto_fill",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ConfigEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Config"
                  }
              },
              "ValuesConfigResponse": [],
              "ValuesConfig": [],
              "ValuesConfigEntities": [],
              "ContactResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Contact"
                      }
                  }
              },
              "Contact": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "user_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "merged_contact_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "contactgroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "gender": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "firstname": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "lastname": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "notice": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_birth": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_in_service": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "phone_normal": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "phone_mobile": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "email": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "department": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "create_account": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_delivery": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_visit": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_billing": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "contactgroup_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "profile_data": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "companies": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "technical_information": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "create_account",
                      "profile_data",
                      "companies",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ContactEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Contact"
                  }
              },
              "LinksContactResponse": [],
              "LinksContact": [],
              "LinksContactEntities": [],
              "ContactConfigResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/ContactConfig"
                      }
                  }
              },
              "ContactConfig": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "contact_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "serialized": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "value": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "serialized",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ContactConfigEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/ContactConfig"
                  }
              },
              "LinksContactConfigResponse": [],
              "LinksContactConfig": [],
              "LinksContactConfigEntities": [],
              "ContactgroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Contactgroup"
                      }
                  }
              },
              "Contactgroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ContactgroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Contactgroup"
                  }
              },
              "LinksContactgroupResponse": [],
              "LinksContactgroup": [],
              "LinksContactgroupEntities": [],
              "CountryResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Country"
                      }
                  }
              },
              "Country": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "code_short": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "code_long": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "name_en": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "name_nl": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "name_local": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "zip_regex": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "currency_iso_code": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "CountryEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Country"
                  }
              },
              "CronjobResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Cronjob"
                      }
                  }
              },
              "Cronjob": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "schedule_minute": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "schedule_hour": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "schedule_dayofmonth": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "schedule_month": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "schedule_dayofweek": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "last_run": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "in_progress": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "thrown_exception": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "duration_hours": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "mailed": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "controller": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "method": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "in_progress",
                      "thrown_exception",
                      "duration_hours",
                      "mailed",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "CronjobEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Cronjob"
                  }
              },
              "LinksCronjobResponse": [],
              "LinksCronjob": [],
              "LinksCronjobEntities": [],
              "CtaResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Cta"
                      }
                  }
              },
              "Cta": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "icon": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "ctagroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "target",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "CtaEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Cta"
                  }
              },
              "LinksCtaResponse": [],
              "LinksCta": [],
              "LinksCtaEntities": [],
              "CtagroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Ctagroup"
                      }
                  }
              },
              "Ctagroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "CtagroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Ctagroup"
                  }
              },
              "LinksCtagroupResponse": [],
              "LinksCtagroup": [],
              "LinksCtagroupEntities": [],
              "CurrencyResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Currency"
                      }
                  }
              },
              "Currency": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "symbol": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "iso_code": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "decimal_character": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "decimal_character",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "CurrencyEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Currency"
                  }
              },
              "DataImporterResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/DataImporter"
                      }
                  }
              },
              "DataImporter": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "datetime_start": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "datetime_end": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "count_total": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "count_success": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "count_fail": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_module": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_table": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_filename": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "firstrow_column": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "status": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "datetime_add": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "firstrow_column",
                      "status",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "DataImporterEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/DataImporter"
                  }
              },
              "LinksDataImporterResponse": [],
              "LinksDataImporter": [],
              "LinksDataImporterEntities": [],
              "DeliveryResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Delivery"
                      }
                  }
              },
              "Delivery": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "favorite": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "favorite",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "DeliveryEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Delivery"
                  }
              },
              "LinksDeliveryResponse": [],
              "LinksDelivery": [],
              "LinksDeliveryEntities": [],
              "DocumentResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Document"
                      }
                  }
              },
              "Document": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "copied_from_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "documentfolder_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "banner_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "show_linkgroups": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "notice": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "folder_name": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "tmp_name": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "filetype": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_editable": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_removable": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "show_linkgroups",
                      "target",
                      "folder_name",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "DocumentEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Document"
                  }
              },
              "DocumentFolderResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/DocumentFolder"
                      }
                  }
              },
              "DocumentFolder": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "copied_from_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "documentfolder_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "child_ids": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "DocumentFolderEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/DocumentFolder"
                  }
              },
              "LinksDocumentFolderResponse": [],
              "LinksDocumentFolder": [],
              "LinksDocumentFolderEntities": [],
              "EmailQueueResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/EmailQueue"
                      }
                  }
              },
              "EmailQueue": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "unique_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "email_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_create": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_schedule": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_send": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "data_assign": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "contact_email": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "contact_fullname": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "email_subject": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "email_html": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "date_schedule",
                      "date_send",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "EmailQueueEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/EmailQueue"
                  }
              },
              "LinksEmailQueueResponse": [],
              "LinksEmailQueue": [],
              "LinksEmailQueueEntities": [],
              "EmailSentResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/EmailSent"
                      }
                  }
              },
              "EmailSent": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "from": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "to": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subject": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "html": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "status": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encrypted": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "status",
                      "encrypted",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "EmailSentEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/EmailSent"
                  }
              },
              "EmployeeResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Employee"
                      }
                  }
              },
              "Employee": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "employeegroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "company": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "phonenumber": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "mobilenumber": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "emailaddress": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "website": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "whatsapp": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "facebook": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "twitter": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "linkedin": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "instagram": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "youtube": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "tags": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "function": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "motto": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "EmployeeEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Employee"
                  }
              },
              "LinksEmployeeResponse": [],
              "LinksEmployee": [],
              "LinksEmployeeEntities": [],
              "ImagesEmployeeResponse": [],
              "ImagesEmployee": [],
              "ImagesEmployeeEntities": [],
              "PagebuilderEmployeeResponse": [],
              "PagebuilderEmployee": [],
              "PagebuilderEmployeeEntities": [],
              "EmployeegroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Employeegroup"
                      }
                  }
              },
              "Employeegroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "revision": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "EmployeegroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Employeegroup"
                  }
              },
              "LinksEmployeegroupResponse": [],
              "LinksEmployeegroup": [],
              "LinksEmployeegroupEntities": [],
              "FaqResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Faq"
                      }
                  }
              },
              "Faq": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "faqgroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "tags": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "download_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "download_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "download_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "FaqEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Faq"
                  }
              },
              "LinksFaqResponse": [],
              "LinksFaq": [],
              "LinksFaqEntities": [],
              "FaqgroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Faqgroup"
                      }
                  }
              },
              "Faqgroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "icon": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "FaqgroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Faqgroup"
                  }
              },
              "LinksFaqgroupResponse": [],
              "LinksFaqgroup": [],
              "LinksFaqgroupEntities": [],
              "FormResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Form"
                      }
                  }
              },
              "Form": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title_normal": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title_success": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title_error": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "handling_action": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "handling_email": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subject_mail": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "sender_mail": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_top_mail": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_bottom_mail": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "button_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "conversion_success": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "conversion_error": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "confirmation_email": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "confirmation_subject": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "confirmation_message": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "result_pdf": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subscription_toggle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "confirmation_add_attachment_to_mail": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "crmsource_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "notice": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "sharp_spring": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "subscription_toggle",
                      "confirmation_add_attachment_to_mail",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "FormEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Form"
                  }
              },
              "LinksFormResponse": [],
              "LinksForm": [],
              "LinksFormEntities": [],
              "FieldsFormResponse": [],
              "FieldsForm": [],
              "FieldsFormEntities": [],
              "FormResultResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/FormResult"
                      }
                  }
              },
              "FormResult": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "form_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "email_from": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "email_to": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "email_subject": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "email_html": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "user_ip": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "user_technical": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "user_history": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "status": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "status",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "FormResultEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/FormResult"
                  }
              },
              "AttachmentsFormResultResponse": [],
              "AttachmentsFormResult": [],
              "AttachmentsFormResultEntities": [],
              "FormsectionResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Formsection"
                      }
                  }
              },
              "Formsection": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "formsection_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "FormsectionEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Formsection"
                  }
              },
              "LinksFormsectionResponse": [],
              "LinksFormsection": [],
              "LinksFormsectionEntities": [],
              "FormstepResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Formstep"
                      }
                  }
              },
              "Formstep": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "formstep_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "FormstepEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Formstep"
                  }
              },
              "LinksFormstepResponse": [],
              "LinksFormstep": [],
              "LinksFormstepEntities": [],
              "GoogleResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Google"
                      }
                  }
              },
              "Google": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "google_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "external_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "fullname": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "favorite": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "favorite",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "GoogleEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Google"
                  }
              },
              "HistoryResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/History"
                      }
                  }
              },
              "History": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "entity": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "HistoryEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/History"
                  }
              },
              "HtmlcodeResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Htmlcode"
                      }
                  }
              },
              "Htmlcode": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "htmlcode": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "include": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "cc_type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "variables": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "code_position": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "link2_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link2_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link2_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link2_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target2": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "target",
                      "code_position",
                      "target2",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "HtmlcodeEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Htmlcode"
                  }
              },
              "ImageResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Image"
                      }
                  }
              },
              "Image": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "imagefolder_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "external_name": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "folder_name": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "tmp_name": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "filetype": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_editable": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_removable": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "folder_name",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ImageEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Image"
                  }
              },
              "LinksImageResponse": [],
              "LinksImage": [],
              "LinksImageEntities": [],
              "ImageFolderResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/ImageFolder"
                      }
                  }
              },
              "ImageFolder": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "imagefolder_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "child_ids": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ImageFolderEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/ImageFolder"
                  }
              },
              "LinksImageFolderResponse": [],
              "LinksImageFolder": [],
              "LinksImageFolderEntities": [],
              "IpResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Ip"
                      }
                  }
              },
              "Ip": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "ip": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "attempt_count": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "attempt_last": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "until": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "notice": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "type",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "IpEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Ip"
                  }
              },
              "LinkResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Link"
                      }
                  }
              },
              "Link": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "linkgroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "LinkedEntity": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "LinkEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Link"
                  }
              },
              "LinksLinkResponse": [],
              "LinksLink": [],
              "LinksLinkEntities": [],
              "LinkgroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Linkgroup"
                      }
                  }
              },
              "Linkgroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "LinkgroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Linkgroup"
                  }
              },
              "LinksLinkgroupResponse": [],
              "LinksLinkgroup": [],
              "LinksLinkgroupEntities": [],
              "LocationResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Location"
                      }
                  }
              },
              "Location": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_street": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_housenumber": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_housenumber_suffix": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_zipcode": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_place": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_country": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "emailaddress": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "phonenumber": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "faxnumber": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "coord_latitude": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "coord_longitude": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "embed": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "link_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "AddressCountryEntity": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "target",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "LocationEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Location"
                  }
              },
              "LinksLocationResponse": [],
              "LinksLocation": [],
              "LinksLocationEntities": [],
              "ImagesLocationResponse": [],
              "ImagesLocation": [],
              "ImagesLocationEntities": [],
              "PagebuilderLocationResponse": [],
              "PagebuilderLocation": [],
              "PagebuilderLocationEntities": [],
              "LoyaltycardResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Loyaltycard"
                      }
                  }
              },
              "Loyaltycard": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "creation_date": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "contact_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "cardname": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "cardnumber": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "LoyaltycardEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Loyaltycard"
                  }
              },
              "LinksLoyaltycardResponse": [],
              "LinksLoyaltycard": [],
              "LinksLoyaltycardEntities": [],
              "ModuleResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Module"
                      }
                  }
              },
              "Module": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "package_path": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "action": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subAction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subItemId": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "module_access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "structure_index": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Config": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "extra_content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "mapperName": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "access",
                      "structure_index",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ModuleEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Module"
                  }
              },
              "FieldsModuleResponse": [],
              "FieldsModule": [],
              "FieldsModuleEntities": [],
              "NavigationResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Navigation"
                      }
                  }
              },
              "Navigation": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "copied_from_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "position": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "navigation_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "textblock_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "has_children": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "show_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "show_only_favorite": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "show_limit": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "site_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "depth": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "max_depth": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "LinkedEntity": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "position",
                      "has_children",
                      "show_only_favorite",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "NavigationEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Navigation"
                  }
              },
              "LinksNavigationResponse": [],
              "LinksNavigation": [],
              "LinksNavigationEntities": [],
              "NavigationPositionResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/NavigationPosition"
                      }
                  }
              },
              "NavigationPosition": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "textblock_enabled": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "textblock_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "max_depth": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "textblock_enabled",
                      "max_depth",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "NavigationPositionEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/NavigationPosition"
                  }
              },
              "LinksNavigationPositionResponse": [],
              "LinksNavigationPosition": [],
              "LinksNavigationPositionEntities": [],
              "NewsResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/News"
                      }
                  }
              },
              "News": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "employee_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_publish": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_from": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_until": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "tags": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "NewsEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/News"
                  }
              },
              "LinksNewsResponse": [],
              "LinksNews": [],
              "LinksNewsEntities": [],
              "ImagesNewsResponse": [],
              "ImagesNews": [],
              "ImagesNewsEntities": [],
              "PagebuilderNewsResponse": [],
              "PagebuilderNews": [],
              "PagebuilderNewsEntities": [],
              "NewsgroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Newsgroup"
                      }
                  }
              },
              "Newsgroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "revision": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "NewsgroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Newsgroup"
                  }
              },
              "LinksNewsgroupResponse": [],
              "LinksNewsgroup": [],
              "LinksNewsgroupEntities": [],
              "PagebuilderResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Pagebuilder"
                      }
                  }
              },
              "Pagebuilder": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "copied_from_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "entity_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "entity_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "user_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "block_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "device": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "position": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "text_show": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "text_custom": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "text_subcustom": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "text_introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "limit": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "wizard_state": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "quicklink": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Filters": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "virtual": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "extraData": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "template_filename": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "language",
                      "device",
                      "text_show",
                      "quicklink",
                      "seq",
                      "Filters",
                      "virtual",
                      "extraData",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "PagebuilderEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Pagebuilder"
                  }
              },
              "LinksPagebuilderResponse": [],
              "LinksPagebuilder": [],
              "LinksPagebuilderEntities": [],
              "PagebuilderPositionResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/PagebuilderPosition"
                      }
                  }
              },
              "PagebuilderPosition": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "PagebuilderPositionEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/PagebuilderPosition"
                  }
              },
              "LinksPagebuilderPositionResponse": [],
              "LinksPagebuilderPosition": [],
              "LinksPagebuilderPositionEntities": [],
              "PartnerResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Partner"
                      }
                  }
              },
              "Partner": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "icon": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "partnergroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "target",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "PartnerEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Partner"
                  }
              },
              "LinksPartnerResponse": [],
              "LinksPartner": [],
              "LinksPartnerEntities": [],
              "PartnergroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Partnergroup"
                      }
                  }
              },
              "Partnergroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "PartnergroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Partnergroup"
                  }
              },
              "LinksPartnergroupResponse": [],
              "LinksPartnergroup": [],
              "LinksPartnergroupEntities": [],
              "PaymentResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Payment"
                      }
                  }
              },
              "Payment": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "icon": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "known_customer": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "price_until": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "price_addition": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "payment_method": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "send_orderconfirmation": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "send_paymentconfirmation": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "send_orderconfirmation",
                      "send_paymentconfirmation",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "PaymentEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Payment"
                  }
              },
              "LinksPaymentResponse": [],
              "LinksPayment": [],
              "LinksPaymentEntities": [],
              "ImagesPaymentResponse": [],
              "ImagesPayment": [],
              "ImagesPaymentEntities": [],
              "PermissionResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Permission"
                      }
                  }
              },
              "Permission": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "site_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "user_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "usergroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "view": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "overview": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "add": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "edit": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "delete": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "bulk": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "profile": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "logout": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "PermissionEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Permission"
                  }
              },
              "LinksPermissionResponse": [],
              "LinksPermission": [],
              "LinksPermissionEntities": [],
              "PopupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Popup"
                      }
                  }
              },
              "Popup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "revision": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link2_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link2_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link2_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link2_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target2": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "target",
                      "target2",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "PopupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Popup"
                  }
              },
              "LinksPopupResponse": [],
              "LinksPopup": [],
              "LinksPopupEntities": [],
              "ProductResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Product"
                      }
                  }
              },
              "Product": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "copied_from": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "group_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "product_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_label": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "delivery_stock": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "delivery_outofstock": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "stock_count": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "condition_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "vat_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "banner_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "productgroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "brand_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "price_purchase": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "sale_from": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "sale_until": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "google_taxonomy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "favorite": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "popular": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "size_chart": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "top_charts": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Specification": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Stock": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "prices": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "BrandEntity": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "ProductgroupEntity": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "creation_date": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "new_age": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "ProductgroupEntities": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "image_json": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "ProductgroupPath": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "DeliveryEntities": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "favorite",
                      "popular",
                      "top_charts",
                      "Refines",
                      "Specification",
                      "Stock",
                      "new_age",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ProductEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Product"
                  }
              },
              "LinksProductResponse": [],
              "LinksProduct": [],
              "LinksProductEntities": [],
              "ImagesProductResponse": [],
              "ImagesProduct": [],
              "ImagesProductEntities": [],
              "PagebuilderProductResponse": [],
              "PagebuilderProduct": [],
              "PagebuilderProductEntities": [],
              "ProductBundleResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/ProductBundle"
                      }
                  }
              },
              "ProductBundle": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "vat_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "sale_from": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "sale_until": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "google_taxonomy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "prices": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "creation_date": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "new_age": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "image_json": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "new_age",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ProductBundleEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/ProductBundle"
                  }
              },
              "LinksProductBundleResponse": [],
              "LinksProductBundle": [],
              "LinksProductBundleEntities": [],
              "ImagesProductBundleResponse": [],
              "ImagesProductBundle": [],
              "ImagesProductBundleEntities": [],
              "PagebuilderProductBundleResponse": [],
              "PagebuilderProductBundle": [],
              "PagebuilderProductBundleEntities": [],
              "ProductDiscountResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/ProductDiscount"
                      }
                  }
              },
              "ProductDiscount": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_from": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_until": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "from_amount": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "from_subtotal": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "discount_code": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "discount_percent": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "discount_amount": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "limited_usage": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "times_used": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "skip_discounted_products": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "notice": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefineEntities": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "checkoutarticle_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "amount": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "limited_usage",
                      "times_used",
                      "skip_discounted_products",
                      "type",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ProductDiscountEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/ProductDiscount"
                  }
              },
              "LinksProductDiscountResponse": [],
              "LinksProductDiscount": [],
              "LinksProductDiscountEntities": [],
              "ProductFilterDocumentResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/ProductFilterDocument"
                      }
                  }
              },
              "ProductFilterDocument": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "banner_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "show_linkgroups": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "notice": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "show_linkgroups",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ProductFilterDocumentEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/ProductFilterDocument"
                  }
              },
              "LinksProductFilterDocumentResponse": [],
              "LinksProductFilterDocument": [],
              "LinksProductFilterDocumentEntities": [],
              "ProductgroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Productgroup"
                      }
                  }
              },
              "Productgroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "main_site_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "productgroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "has_children": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "sub_ids": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "parent_ids": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "banner_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "productcategory_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "google_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "item_url_cache": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "has_children",
                      "item_url_cache",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ProductgroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Productgroup"
                  }
              },
              "LinksProductgroupResponse": [],
              "LinksProductgroup": [],
              "LinksProductgroupEntities": [],
              "ImagesProductgroupResponse": [],
              "ImagesProductgroup": [],
              "ImagesProductgroupEntities": [],
              "PagebuilderProductgroupResponse": [],
              "PagebuilderProductgroup": [],
              "PagebuilderProductgroupEntities": [],
              "ProductstockalertResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Productstockalert"
                      }
                  }
              },
              "Productstockalert": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "contact_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "productstock_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "product_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "creation_date": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "send_date": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ProductstockalertEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Productstockalert"
                  }
              },
              "LinksProductstockalertResponse": [],
              "LinksProductstockalert": [],
              "LinksProductstockalertEntities": [],
              "ProjectResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Project"
                      }
                  }
              },
              "Project": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "revision": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "projectgroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "tags": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ProjectEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Project"
                  }
              },
              "LinksProjectResponse": [],
              "LinksProject": [],
              "LinksProjectEntities": [],
              "PagebuilderProjectResponse": [],
              "PagebuilderProject": [],
              "PagebuilderProjectEntities": [],
              "ProjectgroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Projectgroup"
                      }
                  }
              },
              "Projectgroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "revision": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ProjectgroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Projectgroup"
                  }
              },
              "LinksProjectgroupResponse": [],
              "LinksProjectgroup": [],
              "LinksProjectgroupEntities": [],
              "RedirectResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Redirect"
                      }
                  }
              },
              "Redirect": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "validation_state": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "validation_datetime": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "notice": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "source_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "source_scheme": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "source_host": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "source_path": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "source_query": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "destination_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "destination_scheme": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "destination_host": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "destination_path": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "destination_query": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "validation_state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "RedirectEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Redirect"
                  }
              },
              "ReferenceResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Reference"
                      }
                  }
              },
              "Reference": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "referencegroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "company": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "function": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "quote": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "place": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "country": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "rating": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "rating",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ReferenceEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Reference"
                  }
              },
              "LinksReferenceResponse": [],
              "LinksReference": [],
              "LinksReferenceEntities": [],
              "ReferencegroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Referencegroup"
                      }
                  }
              },
              "Referencegroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "revision": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ReferencegroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Referencegroup"
                  }
              },
              "LinksReferencegroupResponse": [],
              "LinksReferencegroup": [],
              "LinksReferencegroupEntities": [],
              "RefinegroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Refinegroup"
                      }
                  }
              },
              "Refinegroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "notice": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "multi": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "display": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "field": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "productgroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "type",
                      "multi",
                      "display",
                      "field",
                      "productgroup",
                      "Refines",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "RefinegroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Refinegroup"
                  }
              },
              "LinksRefinegroupResponse": [],
              "LinksRefinegroup": [],
              "LinksRefinegroupEntities": [],
              "SearchResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Search"
                      }
                  }
              },
              "Search": {
                  "type": "object",
                  "properties": {
                      "Entity": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Filters": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "weight": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "weight_per_column": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "Filters",
                      "weight_per_column",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "object",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "SearchEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Search"
                  }
              },
              "ServiceResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Service"
                      }
                  }
              },
              "Service": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "servicegroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "location_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "icon": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "tags": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ServiceEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Service"
                  }
              },
              "LinksServiceResponse": [],
              "LinksService": [],
              "LinksServiceEntities": [],
              "ImagesServiceResponse": [],
              "ImagesService": [],
              "ImagesServiceEntities": [],
              "PagebuilderServiceResponse": [],
              "PagebuilderService": [],
              "PagebuilderServiceEntities": [],
              "ServicegroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Servicegroup"
                      }
                  }
              },
              "Servicegroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "revision": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "icon": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ServicegroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Servicegroup"
                  }
              },
              "LinksServicegroupResponse": [],
              "LinksServicegroup": [],
              "LinksServicegroupEntities": [],
              "ShipmentResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Shipment"
                      }
                  }
              },
              "Shipment": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "shipment_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "checkout_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "shipment_date": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "shipment_reference": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "shipmentnumber": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "label_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "tracktrace_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "big_parcel": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "only_recipient": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "signature": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "return_not_home": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "age_check": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insured_amount": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "shipment_state": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "big_parcel",
                      "only_recipient",
                      "signature",
                      "return_not_home",
                      "age_check",
                      "insured_amount",
                      "shipment_state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ShipmentEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Shipment"
                  }
              },
              "LinksShipmentResponse": [],
              "LinksShipment": [],
              "LinksShipmentEntities": [],
              "ShippingResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Shipping"
                      }
                  }
              },
              "Shipping": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "sub_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "country_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "shipmentpackage_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "sale_products": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "price_from": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "price_retail": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "sale_products",
                      "price_from",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "ShippingEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Shipping"
                  }
              },
              "LinksShippingResponse": [],
              "LinksShipping": [],
              "LinksShippingEntities": [],
              "SiteResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Site"
                      }
                  }
              },
              "Site": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "notice": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "config": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "SiteEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Site"
                  }
              },
              "SitemapResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Sitemap"
                      }
                  }
              },
              "Sitemap": {
                  "type": "object",
                  "properties": {
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "object",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "SitemapEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Sitemap"
                  }
              },
              "SizeResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Size"
                      }
                  }
              },
              "Size": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "sizegroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "stock": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "stock",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "SizeEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Size"
                  }
              },
              "LinksSizeResponse": [],
              "LinksSize": [],
              "LinksSizeEntities": [],
              "SizechartResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Sizechart"
                      }
                  }
              },
              "Sizechart": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "productgroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "SizechartEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Sizechart"
                  }
              },
              "LinksSizechartResponse": [],
              "LinksSizechart": [],
              "LinksSizechartEntities": [],
              "SizegroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Sizegroup"
                      }
                  }
              },
              "Sizegroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "SizegroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Sizegroup"
                  }
              },
              "LinksSizegroupResponse": [],
              "LinksSizegroup": [],
              "LinksSizegroupEntities": [],
              "StaticdocumentResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Staticdocument"
                      }
                  }
              },
              "Staticdocument": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "LinkedEntity": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "StaticdocumentEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Staticdocument"
                  }
              },
              "LinksStaticdocumentResponse": [],
              "LinksStaticdocument": [],
              "LinksStaticdocumentEntities": [],
              "StepResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Step"
                      }
                  }
              },
              "Step": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "revision": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "year": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "icon": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "link_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "StepEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Step"
                  }
              },
              "LinksStepResponse": [],
              "LinksStep": [],
              "LinksStepEntities": [],
              "StepgroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Stepgroup"
                      }
                  }
              },
              "Stepgroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "revision": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "StepgroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Stepgroup"
                  }
              },
              "LinksStepgroupResponse": [],
              "LinksStepgroup": [],
              "LinksStepgroupEntities": [],
              "SubscriptionResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Subscription"
                      }
                  }
              },
              "Subscription": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "emailaddress": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "data": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "export_date": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "SubscriptionEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Subscription"
                  }
              },
              "TextblockResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Textblock"
                      }
                  }
              },
              "Textblock": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "textblockfolder_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "color": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "textcolor": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "position_horizontal": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "position_vertical": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "icon": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "notice": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link2_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link2_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link2_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link2_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target2": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "tmp_name": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "upload_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "filetype": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "default_link_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "textcolor",
                      "position_horizontal",
                      "position_vertical",
                      "target",
                      "target2",
                      "default_link_text",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "TextblockEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Textblock"
                  }
              },
              "LinksTextblockResponse": [],
              "LinksTextblock": [],
              "LinksTextblockEntities": [],
              "TextblockFolderResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/TextblockFolder"
                      }
                  }
              },
              "TextblockFolder": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "textblockfolder_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "child_ids": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "TextblockFolderEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/TextblockFolder"
                  }
              },
              "LinksTextblockFolderResponse": [],
              "LinksTextblockFolder": [],
              "LinksTextblockFolderEntities": [],
              "UploadResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Upload"
                      }
                  }
              },
              "Upload": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "copied_from_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "uploadfolder_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "folder_name": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "tmp_name": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "filetype": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_editable": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_removable": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "folder_name",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "UploadEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Upload"
                  }
              },
              "LinksUploadResponse": [],
              "LinksUpload": [],
              "LinksUploadEntities": [],
              "UploadFolderResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/UploadFolder"
                      }
                  }
              },
              "UploadFolder": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "copied_from_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "uploadfolder_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "child_ids": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "UploadFolderEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/UploadFolder"
                  }
              },
              "LinksUploadFolderResponse": [],
              "LinksUploadFolder": [],
              "LinksUploadFolderEntities": [],
              "UserResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/User"
                      }
                  }
              },
              "User": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "admin": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "username": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "email": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "fullname": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "registration_date": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "lastlogin_date": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "lastlogin_method": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "show_ids": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "autologin": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "attempts_failed_login": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "attempts_succesfull_login": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "api_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "password": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Usergroups": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "admin",
                      "lastlogin_method",
                      "show_ids",
                      "api_key",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "UserEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/User"
                  }
              },
              "LinksUserResponse": [],
              "LinksUser": [],
              "LinksUserEntities": [],
              "UsergroupsUserResponse": [],
              "UsergroupsUser": [],
              "UsergroupsUserEntities": [],
              "UsergroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Usergroup"
                      }
                  }
              },
              "Usergroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "UsergroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Usergroup"
                  }
              },
              "LinksUsergroupResponse": [],
              "LinksUsergroup": [],
              "LinksUsergroupEntities": [],
              "UspResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Usp"
                      }
                  }
              },
              "Usp": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "icon": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "target",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "UspEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Usp"
                  }
              },
              "LinksUspResponse": [],
              "LinksUsp": [],
              "LinksUspEntities": [],
              "UspgroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Uspgroup"
                      }
                  }
              },
              "Uspgroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "UspgroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Uspgroup"
                  }
              },
              "LinksUspgroupResponse": [],
              "LinksUspgroup": [],
              "LinksUspgroupEntities": [],
              "VacancyResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Vacancy"
                      }
                  }
              },
              "Vacancy": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "employee_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "location_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_publish": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_from": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_until": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "job_identifier": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "employment_type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subtitle": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "function": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "salary": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "education": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_street": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_housenumber": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_housenumber_suffix": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_zipcode": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_place": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_country": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "address_region": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "base_salary": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "location": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "hours": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "VacancyEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Vacancy"
                  }
              },
              "LinksVacancyResponse": [],
              "LinksVacancy": [],
              "LinksVacancyEntities": [],
              "ImagesVacancyResponse": [],
              "ImagesVacancy": [],
              "ImagesVacancyEntities": [],
              "PagebuilderVacancyResponse": [],
              "PagebuilderVacancy": [],
              "PagebuilderVacancyEntities": [],
              "VacancygroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Vacancygroup"
                      }
                  }
              },
              "Vacancygroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "revision": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "VacancygroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Vacancygroup"
                  }
              },
              "LinksVacancygroupResponse": [],
              "LinksVacancygroup": [],
              "LinksVacancygroupEntities": [],
              "VatResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Vat"
                      }
                  }
              },
              "Vat": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "percentage": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "show_invoice": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "show_invoice",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "VatEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Vat"
                  }
              },
              "LinksVatResponse": [],
              "LinksVat": [],
              "LinksVatEntities": [],
              "VideoResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Video"
                      }
                  }
              },
              "Video": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "videogroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "upload_filename": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "upload_type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "code": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "embed": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "introduction": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_module_object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_item_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_custom_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "link_text": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "target": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "ownimage": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seq": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "access": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "browser_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "page_title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_description": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "seo_keywords": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "video_thumbnails": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "tmp_name": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "file_type": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "default_youtube_settings": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "default_vimeo_settings": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "target",
                      "video_thumbnails",
                      "default_youtube_settings",
                      "default_vimeo_settings",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "VideoEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Video"
                  }
              },
              "LinksVideoResponse": [],
              "LinksVideo": [],
              "LinksVideoEntities": [],
              "ImagesVideoResponse": [],
              "ImagesVideo": [],
              "ImagesVideoEntities": [],
              "VideogroupResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Videogroup"
                      }
                  }
              },
              "Videogroup": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "revision": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "language": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "language",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "VideogroupEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Videogroup"
                  }
              },
              "LinksVideogroupResponse": [],
              "LinksVideogroup": [],
              "LinksVideogroupEntities": [],
              "VoucherResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Voucher"
                      }
                  }
              },
              "Voucher": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "vouchergroup_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "vouchertype": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "checkout_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "contact_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_create": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_until": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "date_cashed": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "code": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "lock_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "value": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "min_value": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "max_value": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "hash": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "notice": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "VoucherEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Voucher"
                  }
              },
              "LinksVoucherResponse": [],
              "LinksVoucher": [],
              "LinksVoucherEntities": [],
              "WarehouseResponse": {
                  "type": "object",
                  "properties": {
                      "_links": {
                          "$ref": "#\/components\/schemas\/links"
                      },
                      "_meta": {
                          "$ref": "#\/components\/schemas\/meta"
                      },
                      "data": {
                          "$ref": "#\/components\/schemas\/Warehouse"
                      }
                  }
              },
              "Warehouse": {
                  "type": "object",
                  "properties": {
                      "object": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "import_key": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "version_date": {
                          "type": "integer",
                          "format": "timestamp",
                          "readOnly": false
                      },
                      "version_user": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": true
                      },
                      "owner": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "state": {
                          "type": "string",
                          "enum": [
                              "Online",
                              "Draft",
                              "Offline",
                              "Delete"
                          ],
                          "readOnly": false
                      },
                      "title": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "insert": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "is_dummy": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "subitems": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "pagebuilder_use": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "content_pattern": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "kind": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "item_url": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "id": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": false
                      },
                      "Refines": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "RefinesByGroup": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "Images": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "encoded_id": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "active_extensions": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      },
                      "custom_screen_folder": {
                          "type": "string",
                          "maxLength": 255,
                          "readOnly": false
                      }
                  },
                  "required": [
                      "object",
                      "state",
                      "insert",
                      "is_dummy",
                      "content_pattern",
                      "kind",
                      "item_url",
                      "Refines",
                      "RefinesByGroup",
                      "Images",
                      "active_extensions"
                  ]
              },
              "WarehouseEntities": {
                  "type": "array",
                  "items": {
                      "$ref": "#\/components\/schemas\/Warehouse"
                  }
              },
              "LinksWarehouseResponse": [],
              "LinksWarehouse": [],
              "LinksWarehouseEntities": []
          },
          "requestBodies": {
              "Body": {
                  "description": " object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/"
                          }
                      }
                  }
              },
              "AlertBody": {
                  "description": "Alert object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Alert"
                          }
                      }
                  }
              },
              "LinksAlertBody": {
                  "description": "Links for Alert object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksAlert"
                          }
                      }
                  }
              },
              "BannerBody": {
                  "description": "Banner object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Banner"
                          }
                      }
                  }
              },
              "LinksBannerBody": {
                  "description": "Links for Banner object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksBanner"
                          }
                      }
                  }
              },
              "ImagesBannerBody": {
                  "description": "Images for Banner object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImagesBanner"
                          }
                      }
                  }
              },
              "BonuspointBody": {
                  "description": "Bonuspoint object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Bonuspoint"
                          }
                      }
                  }
              },
              "LinksBonuspointBody": {
                  "description": "Links for Bonuspoint object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksBonuspoint"
                          }
                      }
                  }
              },
              "BrandBody": {
                  "description": "Brand object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Brand"
                          }
                      }
                  }
              },
              "LinksBrandBody": {
                  "description": "Links for Brand object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksBrand"
                          }
                      }
                  }
              },
              "ImagesBrandBody": {
                  "description": "Images for Brand object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImagesBrand"
                          }
                      }
                  }
              },
              "PagebuilderBrandBody": {
                  "description": "Pagebuilder for Brand object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/PagebuilderBrand"
                          }
                      }
                  }
              },
              "CalendarBody": {
                  "description": "Calendar object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Calendar"
                          }
                      }
                  }
              },
              "LinksCalendarBody": {
                  "description": "Links for Calendar object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksCalendar"
                          }
                      }
                  }
              },
              "ImagesCalendarBody": {
                  "description": "Images for Calendar object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImagesCalendar"
                          }
                      }
                  }
              },
              "PagebuilderCalendarBody": {
                  "description": "Pagebuilder for Calendar object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/PagebuilderCalendar"
                          }
                      }
                  }
              },
              "CalendargroupBody": {
                  "description": "Calendargroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Calendargroup"
                          }
                      }
                  }
              },
              "LinksCalendargroupBody": {
                  "description": "Links for Calendargroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksCalendargroup"
                          }
                      }
                  }
              },
              "CheckoutBody": {
                  "description": "Checkout object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Checkout"
                          }
                      }
                  }
              },
              "LinksCheckoutBody": {
                  "description": "Links for Checkout object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksCheckout"
                          }
                      }
                  }
              },
              "ArticlesCheckoutBody": {
                  "description": "Articles for Checkout object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ArticlesCheckout"
                          }
                      }
                  }
              },
              "ContactsCheckoutBody": {
                  "description": "Contacts for Checkout object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ContactsCheckout"
                          }
                      }
                  }
              },
              "AddressesCheckoutBody": {
                  "description": "Addresses for Checkout object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/AddressesCheckout"
                          }
                      }
                  }
              },
              "CheckoutSubscriptionBody": {
                  "description": "CheckoutSubscription object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/CheckoutSubscription"
                          }
                      }
                  }
              },
              "LinksCheckoutSubscriptionBody": {
                  "description": "Links for CheckoutSubscription object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksCheckoutSubscription"
                          }
                      }
                  }
              },
              "ColorBody": {
                  "description": "Color object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Color"
                          }
                      }
                  }
              },
              "LinksColorBody": {
                  "description": "Links for Color object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksColor"
                          }
                      }
                  }
              },
              "CompanyBody": {
                  "description": "Company object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Company"
                          }
                      }
                  }
              },
              "LinksCompanyBody": {
                  "description": "Links for Company object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksCompany"
                          }
                      }
                  }
              },
              "CompanygroupBody": {
                  "description": "Companygroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Companygroup"
                          }
                      }
                  }
              },
              "LinksCompanygroupBody": {
                  "description": "Links for Companygroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksCompanygroup"
                          }
                      }
                  }
              },
              "ConditionBody": {
                  "description": "Condition object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Condition"
                          }
                      }
                  }
              },
              "LinksConditionBody": {
                  "description": "Links for Condition object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksCondition"
                          }
                      }
                  }
              },
              "ConfigBody": {
                  "description": "Config object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Config"
                          }
                      }
                  }
              },
              "ValuesConfigBody": {
                  "description": "Values for Config object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ValuesConfig"
                          }
                      }
                  }
              },
              "ContactBody": {
                  "description": "Contact object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Contact"
                          }
                      }
                  }
              },
              "LinksContactBody": {
                  "description": "Links for Contact object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksContact"
                          }
                      }
                  }
              },
              "ContactConfigBody": {
                  "description": "ContactConfig object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ContactConfig"
                          }
                      }
                  }
              },
              "LinksContactConfigBody": {
                  "description": "Links for ContactConfig object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksContactConfig"
                          }
                      }
                  }
              },
              "ContactgroupBody": {
                  "description": "Contactgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Contactgroup"
                          }
                      }
                  }
              },
              "LinksContactgroupBody": {
                  "description": "Links for Contactgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksContactgroup"
                          }
                      }
                  }
              },
              "CountryBody": {
                  "description": "Country object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Country"
                          }
                      }
                  }
              },
              "CronjobBody": {
                  "description": "Cronjob object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Cronjob"
                          }
                      }
                  }
              },
              "LinksCronjobBody": {
                  "description": "Links for Cronjob object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksCronjob"
                          }
                      }
                  }
              },
              "CtaBody": {
                  "description": "Cta object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Cta"
                          }
                      }
                  }
              },
              "LinksCtaBody": {
                  "description": "Links for Cta object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksCta"
                          }
                      }
                  }
              },
              "CtagroupBody": {
                  "description": "Ctagroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Ctagroup"
                          }
                      }
                  }
              },
              "LinksCtagroupBody": {
                  "description": "Links for Ctagroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksCtagroup"
                          }
                      }
                  }
              },
              "CurrencyBody": {
                  "description": "Currency object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Currency"
                          }
                      }
                  }
              },
              "DataImporterBody": {
                  "description": "DataImporter object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/DataImporter"
                          }
                      }
                  }
              },
              "LinksDataImporterBody": {
                  "description": "Links for DataImporter object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksDataImporter"
                          }
                      }
                  }
              },
              "DeliveryBody": {
                  "description": "Delivery object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Delivery"
                          }
                      }
                  }
              },
              "LinksDeliveryBody": {
                  "description": "Links for Delivery object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksDelivery"
                          }
                      }
                  }
              },
              "DocumentBody": {
                  "description": "Document object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Document"
                          }
                      }
                  }
              },
              "DocumentFolderBody": {
                  "description": "DocumentFolder object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/DocumentFolder"
                          }
                      }
                  }
              },
              "LinksDocumentFolderBody": {
                  "description": "Links for DocumentFolder object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksDocumentFolder"
                          }
                      }
                  }
              },
              "EmailQueueBody": {
                  "description": "EmailQueue object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/EmailQueue"
                          }
                      }
                  }
              },
              "LinksEmailQueueBody": {
                  "description": "Links for EmailQueue object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksEmailQueue"
                          }
                      }
                  }
              },
              "EmailSentBody": {
                  "description": "EmailSent object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/EmailSent"
                          }
                      }
                  }
              },
              "EmployeeBody": {
                  "description": "Employee object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Employee"
                          }
                      }
                  }
              },
              "LinksEmployeeBody": {
                  "description": "Links for Employee object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksEmployee"
                          }
                      }
                  }
              },
              "ImagesEmployeeBody": {
                  "description": "Images for Employee object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImagesEmployee"
                          }
                      }
                  }
              },
              "PagebuilderEmployeeBody": {
                  "description": "Pagebuilder for Employee object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/PagebuilderEmployee"
                          }
                      }
                  }
              },
              "EmployeegroupBody": {
                  "description": "Employeegroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Employeegroup"
                          }
                      }
                  }
              },
              "LinksEmployeegroupBody": {
                  "description": "Links for Employeegroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksEmployeegroup"
                          }
                      }
                  }
              },
              "FaqBody": {
                  "description": "Faq object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Faq"
                          }
                      }
                  }
              },
              "LinksFaqBody": {
                  "description": "Links for Faq object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksFaq"
                          }
                      }
                  }
              },
              "FaqgroupBody": {
                  "description": "Faqgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Faqgroup"
                          }
                      }
                  }
              },
              "LinksFaqgroupBody": {
                  "description": "Links for Faqgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksFaqgroup"
                          }
                      }
                  }
              },
              "FormBody": {
                  "description": "Form object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Form"
                          }
                      }
                  }
              },
              "LinksFormBody": {
                  "description": "Links for Form object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksForm"
                          }
                      }
                  }
              },
              "FieldsFormBody": {
                  "description": "Fields for Form object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/FieldsForm"
                          }
                      }
                  }
              },
              "FormResultBody": {
                  "description": "FormResult object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/FormResult"
                          }
                      }
                  }
              },
              "AttachmentsFormResultBody": {
                  "description": "Attachments for FormResult object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/AttachmentsFormResult"
                          }
                      }
                  }
              },
              "FormsectionBody": {
                  "description": "Formsection object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Formsection"
                          }
                      }
                  }
              },
              "LinksFormsectionBody": {
                  "description": "Links for Formsection object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksFormsection"
                          }
                      }
                  }
              },
              "FormstepBody": {
                  "description": "Formstep object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Formstep"
                          }
                      }
                  }
              },
              "LinksFormstepBody": {
                  "description": "Links for Formstep object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksFormstep"
                          }
                      }
                  }
              },
              "GoogleBody": {
                  "description": "Google object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Google"
                          }
                      }
                  }
              },
              "HistoryBody": {
                  "description": "History object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/History"
                          }
                      }
                  }
              },
              "HtmlcodeBody": {
                  "description": "Htmlcode object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Htmlcode"
                          }
                      }
                  }
              },
              "ImageBody": {
                  "description": "Image object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Image"
                          }
                      }
                  }
              },
              "LinksImageBody": {
                  "description": "Links for Image object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksImage"
                          }
                      }
                  }
              },
              "ImageFolderBody": {
                  "description": "ImageFolder object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImageFolder"
                          }
                      }
                  }
              },
              "LinksImageFolderBody": {
                  "description": "Links for ImageFolder object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksImageFolder"
                          }
                      }
                  }
              },
              "IpBody": {
                  "description": "Ip object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Ip"
                          }
                      }
                  }
              },
              "LinkBody": {
                  "description": "Link object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Link"
                          }
                      }
                  }
              },
              "LinksLinkBody": {
                  "description": "Links for Link object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksLink"
                          }
                      }
                  }
              },
              "LinkgroupBody": {
                  "description": "Linkgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Linkgroup"
                          }
                      }
                  }
              },
              "LinksLinkgroupBody": {
                  "description": "Links for Linkgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksLinkgroup"
                          }
                      }
                  }
              },
              "LocationBody": {
                  "description": "Location object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Location"
                          }
                      }
                  }
              },
              "LinksLocationBody": {
                  "description": "Links for Location object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksLocation"
                          }
                      }
                  }
              },
              "ImagesLocationBody": {
                  "description": "Images for Location object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImagesLocation"
                          }
                      }
                  }
              },
              "PagebuilderLocationBody": {
                  "description": "Pagebuilder for Location object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/PagebuilderLocation"
                          }
                      }
                  }
              },
              "LoyaltycardBody": {
                  "description": "Loyaltycard object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Loyaltycard"
                          }
                      }
                  }
              },
              "LinksLoyaltycardBody": {
                  "description": "Links for Loyaltycard object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksLoyaltycard"
                          }
                      }
                  }
              },
              "ModuleBody": {
                  "description": "Module object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Module"
                          }
                      }
                  }
              },
              "FieldsModuleBody": {
                  "description": "Fields for Module object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/FieldsModule"
                          }
                      }
                  }
              },
              "NavigationBody": {
                  "description": "Navigation object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Navigation"
                          }
                      }
                  }
              },
              "LinksNavigationBody": {
                  "description": "Links for Navigation object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksNavigation"
                          }
                      }
                  }
              },
              "NavigationPositionBody": {
                  "description": "NavigationPosition object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/NavigationPosition"
                          }
                      }
                  }
              },
              "LinksNavigationPositionBody": {
                  "description": "Links for NavigationPosition object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksNavigationPosition"
                          }
                      }
                  }
              },
              "NewsBody": {
                  "description": "News object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/News"
                          }
                      }
                  }
              },
              "LinksNewsBody": {
                  "description": "Links for News object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksNews"
                          }
                      }
                  }
              },
              "ImagesNewsBody": {
                  "description": "Images for News object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImagesNews"
                          }
                      }
                  }
              },
              "PagebuilderNewsBody": {
                  "description": "Pagebuilder for News object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/PagebuilderNews"
                          }
                      }
                  }
              },
              "NewsgroupBody": {
                  "description": "Newsgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Newsgroup"
                          }
                      }
                  }
              },
              "LinksNewsgroupBody": {
                  "description": "Links for Newsgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksNewsgroup"
                          }
                      }
                  }
              },
              "PagebuilderBody": {
                  "description": "Pagebuilder object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Pagebuilder"
                          }
                      }
                  }
              },
              "LinksPagebuilderBody": {
                  "description": "Links for Pagebuilder object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksPagebuilder"
                          }
                      }
                  }
              },
              "PagebuilderPositionBody": {
                  "description": "PagebuilderPosition object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/PagebuilderPosition"
                          }
                      }
                  }
              },
              "LinksPagebuilderPositionBody": {
                  "description": "Links for PagebuilderPosition object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksPagebuilderPosition"
                          }
                      }
                  }
              },
              "PartnerBody": {
                  "description": "Partner object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Partner"
                          }
                      }
                  }
              },
              "LinksPartnerBody": {
                  "description": "Links for Partner object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksPartner"
                          }
                      }
                  }
              },
              "PartnergroupBody": {
                  "description": "Partnergroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Partnergroup"
                          }
                      }
                  }
              },
              "LinksPartnergroupBody": {
                  "description": "Links for Partnergroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksPartnergroup"
                          }
                      }
                  }
              },
              "PaymentBody": {
                  "description": "Payment object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Payment"
                          }
                      }
                  }
              },
              "LinksPaymentBody": {
                  "description": "Links for Payment object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksPayment"
                          }
                      }
                  }
              },
              "ImagesPaymentBody": {
                  "description": "Images for Payment object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImagesPayment"
                          }
                      }
                  }
              },
              "PermissionBody": {
                  "description": "Permission object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Permission"
                          }
                      }
                  }
              },
              "LinksPermissionBody": {
                  "description": "Links for Permission object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksPermission"
                          }
                      }
                  }
              },
              "PopupBody": {
                  "description": "Popup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Popup"
                          }
                      }
                  }
              },
              "LinksPopupBody": {
                  "description": "Links for Popup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksPopup"
                          }
                      }
                  }
              },
              "ProductBody": {
                  "description": "Product object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Product"
                          }
                      }
                  }
              },
              "LinksProductBody": {
                  "description": "Links for Product object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksProduct"
                          }
                      }
                  }
              },
              "ImagesProductBody": {
                  "description": "Images for Product object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImagesProduct"
                          }
                      }
                  }
              },
              "PagebuilderProductBody": {
                  "description": "Pagebuilder for Product object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/PagebuilderProduct"
                          }
                      }
                  }
              },
              "ProductBundleBody": {
                  "description": "ProductBundle object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ProductBundle"
                          }
                      }
                  }
              },
              "LinksProductBundleBody": {
                  "description": "Links for ProductBundle object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksProductBundle"
                          }
                      }
                  }
              },
              "ImagesProductBundleBody": {
                  "description": "Images for ProductBundle object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImagesProductBundle"
                          }
                      }
                  }
              },
              "PagebuilderProductBundleBody": {
                  "description": "Pagebuilder for ProductBundle object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/PagebuilderProductBundle"
                          }
                      }
                  }
              },
              "ProductDiscountBody": {
                  "description": "ProductDiscount object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ProductDiscount"
                          }
                      }
                  }
              },
              "LinksProductDiscountBody": {
                  "description": "Links for ProductDiscount object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksProductDiscount"
                          }
                      }
                  }
              },
              "ProductFilterDocumentBody": {
                  "description": "ProductFilterDocument object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ProductFilterDocument"
                          }
                      }
                  }
              },
              "LinksProductFilterDocumentBody": {
                  "description": "Links for ProductFilterDocument object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksProductFilterDocument"
                          }
                      }
                  }
              },
              "ProductgroupBody": {
                  "description": "Productgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Productgroup"
                          }
                      }
                  }
              },
              "LinksProductgroupBody": {
                  "description": "Links for Productgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksProductgroup"
                          }
                      }
                  }
              },
              "ImagesProductgroupBody": {
                  "description": "Images for Productgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImagesProductgroup"
                          }
                      }
                  }
              },
              "PagebuilderProductgroupBody": {
                  "description": "Pagebuilder for Productgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/PagebuilderProductgroup"
                          }
                      }
                  }
              },
              "ProductstockalertBody": {
                  "description": "Productstockalert object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Productstockalert"
                          }
                      }
                  }
              },
              "LinksProductstockalertBody": {
                  "description": "Links for Productstockalert object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksProductstockalert"
                          }
                      }
                  }
              },
              "ProjectBody": {
                  "description": "Project object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Project"
                          }
                      }
                  }
              },
              "LinksProjectBody": {
                  "description": "Links for Project object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksProject"
                          }
                      }
                  }
              },
              "PagebuilderProjectBody": {
                  "description": "Pagebuilder for Project object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/PagebuilderProject"
                          }
                      }
                  }
              },
              "ProjectgroupBody": {
                  "description": "Projectgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Projectgroup"
                          }
                      }
                  }
              },
              "LinksProjectgroupBody": {
                  "description": "Links for Projectgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksProjectgroup"
                          }
                      }
                  }
              },
              "RedirectBody": {
                  "description": "Redirect object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Redirect"
                          }
                      }
                  }
              },
              "ReferenceBody": {
                  "description": "Reference object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Reference"
                          }
                      }
                  }
              },
              "LinksReferenceBody": {
                  "description": "Links for Reference object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksReference"
                          }
                      }
                  }
              },
              "ReferencegroupBody": {
                  "description": "Referencegroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Referencegroup"
                          }
                      }
                  }
              },
              "LinksReferencegroupBody": {
                  "description": "Links for Referencegroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksReferencegroup"
                          }
                      }
                  }
              },
              "RefinegroupBody": {
                  "description": "Refinegroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Refinegroup"
                          }
                      }
                  }
              },
              "LinksRefinegroupBody": {
                  "description": "Links for Refinegroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksRefinegroup"
                          }
                      }
                  }
              },
              "SearchBody": {
                  "description": "Search object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Search"
                          }
                      }
                  }
              },
              "ServiceBody": {
                  "description": "Service object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Service"
                          }
                      }
                  }
              },
              "LinksServiceBody": {
                  "description": "Links for Service object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksService"
                          }
                      }
                  }
              },
              "ImagesServiceBody": {
                  "description": "Images for Service object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImagesService"
                          }
                      }
                  }
              },
              "PagebuilderServiceBody": {
                  "description": "Pagebuilder for Service object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/PagebuilderService"
                          }
                      }
                  }
              },
              "ServicegroupBody": {
                  "description": "Servicegroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Servicegroup"
                          }
                      }
                  }
              },
              "LinksServicegroupBody": {
                  "description": "Links for Servicegroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksServicegroup"
                          }
                      }
                  }
              },
              "ShipmentBody": {
                  "description": "Shipment object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Shipment"
                          }
                      }
                  }
              },
              "LinksShipmentBody": {
                  "description": "Links for Shipment object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksShipment"
                          }
                      }
                  }
              },
              "ShippingBody": {
                  "description": "Shipping object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Shipping"
                          }
                      }
                  }
              },
              "LinksShippingBody": {
                  "description": "Links for Shipping object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksShipping"
                          }
                      }
                  }
              },
              "SiteBody": {
                  "description": "Site object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Site"
                          }
                      }
                  }
              },
              "SitemapBody": {
                  "description": "Sitemap object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Sitemap"
                          }
                      }
                  }
              },
              "SizeBody": {
                  "description": "Size object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Size"
                          }
                      }
                  }
              },
              "LinksSizeBody": {
                  "description": "Links for Size object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksSize"
                          }
                      }
                  }
              },
              "SizechartBody": {
                  "description": "Sizechart object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Sizechart"
                          }
                      }
                  }
              },
              "LinksSizechartBody": {
                  "description": "Links for Sizechart object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksSizechart"
                          }
                      }
                  }
              },
              "SizegroupBody": {
                  "description": "Sizegroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Sizegroup"
                          }
                      }
                  }
              },
              "LinksSizegroupBody": {
                  "description": "Links for Sizegroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksSizegroup"
                          }
                      }
                  }
              },
              "StaticdocumentBody": {
                  "description": "Staticdocument object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Staticdocument"
                          }
                      }
                  }
              },
              "LinksStaticdocumentBody": {
                  "description": "Links for Staticdocument object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksStaticdocument"
                          }
                      }
                  }
              },
              "StepBody": {
                  "description": "Step object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Step"
                          }
                      }
                  }
              },
              "LinksStepBody": {
                  "description": "Links for Step object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksStep"
                          }
                      }
                  }
              },
              "StepgroupBody": {
                  "description": "Stepgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Stepgroup"
                          }
                      }
                  }
              },
              "LinksStepgroupBody": {
                  "description": "Links for Stepgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksStepgroup"
                          }
                      }
                  }
              },
              "SubscriptionBody": {
                  "description": "Subscription object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Subscription"
                          }
                      }
                  }
              },
              "TextblockBody": {
                  "description": "Textblock object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Textblock"
                          }
                      }
                  }
              },
              "LinksTextblockBody": {
                  "description": "Links for Textblock object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksTextblock"
                          }
                      }
                  }
              },
              "TextblockFolderBody": {
                  "description": "TextblockFolder object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/TextblockFolder"
                          }
                      }
                  }
              },
              "LinksTextblockFolderBody": {
                  "description": "Links for TextblockFolder object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksTextblockFolder"
                          }
                      }
                  }
              },
              "UploadBody": {
                  "description": "Upload object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Upload"
                          }
                      }
                  }
              },
              "LinksUploadBody": {
                  "description": "Links for Upload object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksUpload"
                          }
                      }
                  }
              },
              "UploadFolderBody": {
                  "description": "UploadFolder object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/UploadFolder"
                          }
                      }
                  }
              },
              "LinksUploadFolderBody": {
                  "description": "Links for UploadFolder object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksUploadFolder"
                          }
                      }
                  }
              },
              "UserBody": {
                  "description": "User object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/User"
                          }
                      }
                  }
              },
              "LinksUserBody": {
                  "description": "Links for User object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksUser"
                          }
                      }
                  }
              },
              "UsergroupsUserBody": {
                  "description": "Usergroups for User object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/UsergroupsUser"
                          }
                      }
                  }
              },
              "UsergroupBody": {
                  "description": "Usergroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Usergroup"
                          }
                      }
                  }
              },
              "LinksUsergroupBody": {
                  "description": "Links for Usergroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksUsergroup"
                          }
                      }
                  }
              },
              "UspBody": {
                  "description": "Usp object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Usp"
                          }
                      }
                  }
              },
              "LinksUspBody": {
                  "description": "Links for Usp object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksUsp"
                          }
                      }
                  }
              },
              "UspgroupBody": {
                  "description": "Uspgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Uspgroup"
                          }
                      }
                  }
              },
              "LinksUspgroupBody": {
                  "description": "Links for Uspgroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksUspgroup"
                          }
                      }
                  }
              },
              "VacancyBody": {
                  "description": "Vacancy object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Vacancy"
                          }
                      }
                  }
              },
              "LinksVacancyBody": {
                  "description": "Links for Vacancy object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksVacancy"
                          }
                      }
                  }
              },
              "ImagesVacancyBody": {
                  "description": "Images for Vacancy object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImagesVacancy"
                          }
                      }
                  }
              },
              "PagebuilderVacancyBody": {
                  "description": "Pagebuilder for Vacancy object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/PagebuilderVacancy"
                          }
                      }
                  }
              },
              "VacancygroupBody": {
                  "description": "Vacancygroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Vacancygroup"
                          }
                      }
                  }
              },
              "LinksVacancygroupBody": {
                  "description": "Links for Vacancygroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksVacancygroup"
                          }
                      }
                  }
              },
              "VatBody": {
                  "description": "Vat object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Vat"
                          }
                      }
                  }
              },
              "LinksVatBody": {
                  "description": "Links for Vat object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksVat"
                          }
                      }
                  }
              },
              "VideoBody": {
                  "description": "Video object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Video"
                          }
                      }
                  }
              },
              "LinksVideoBody": {
                  "description": "Links for Video object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksVideo"
                          }
                      }
                  }
              },
              "ImagesVideoBody": {
                  "description": "Images for Video object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/ImagesVideo"
                          }
                      }
                  }
              },
              "VideogroupBody": {
                  "description": "Videogroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Videogroup"
                          }
                      }
                  }
              },
              "LinksVideogroupBody": {
                  "description": "Links for Videogroup object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksVideogroup"
                          }
                      }
                  }
              },
              "VoucherBody": {
                  "description": "Voucher object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Voucher"
                          }
                      }
                  }
              },
              "LinksVoucherBody": {
                  "description": "Links for Voucher object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksVoucher"
                          }
                      }
                  }
              },
              "WarehouseBody": {
                  "description": "Warehouse object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/Warehouse"
                          }
                      }
                  }
              },
              "LinksWarehouseBody": {
                  "description": "Links for Warehouse object that needs to be added",
                  "required": true,
                  "content": {
                      "application\/json": {
                          "schema": {
                              "$ref": "#\/components\/schemas\/LinksWarehouse"
                          }
                      }
                  }
              }
          },
          "responses": {
              "400": {
                  "description": "Invalid input",
                  "content": []
              },
              "401": {
                  "description": "Invalid authentication credentials",
                  "content": []
              },
              "403": {
                  "description": "Insufficient rights",
                  "content": []
              },
              "429": {
                  "description": "Rate limit exceeded",
                  "content": []
              },
              "500": {
                  "description": "Unexpected error occurred",
                  "content": []
              }
          },
          "securitySchemes": {
              "bearerAuth": {
                  "type": "http",
                  "scheme": "bearer",
                  "bearerFormat": "JWT"
              }
          }
      },
      "info": {
          "title": "Endpoint Builder: WiNGZZ API",
          "description": "This is the API of our WiNGZZ framework",
          "termsOfService": "https:\/\/wingzz.nl\/terms",
          "contact": {
              "email": "developers@ibizz.nl"
          },
          "license": {
              "name": "License of WiNGZZ 8.0",
              "url": "https:\/\/developers.ibizz.nl\/license\/8.0.txt"
          },
          "version": "1.0"
      }
  }
contentType: yaml
